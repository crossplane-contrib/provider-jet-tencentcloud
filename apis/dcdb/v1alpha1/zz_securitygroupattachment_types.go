// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SecurityGroupAttachmentInitParameters struct {
}

type SecurityGroupAttachmentObservation struct {

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// attached instance id.
	// attached instance id.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// security group id.
	// security group id.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`
}

type SecurityGroupAttachmentParameters struct {

	// attached instance id.
	// attached instance id.
	// +crossplane:generate:reference:type=HourdbInstance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a HourdbInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a HourdbInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// security group id.
	// security group id.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-tencentcloud/apis/vpc/v1alpha1.SecurityGroup
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`
}

// SecurityGroupAttachmentSpec defines the desired state of SecurityGroupAttachment
type SecurityGroupAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SecurityGroupAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SecurityGroupAttachmentInitParameters `json:"initProvider,omitempty"`
}

// SecurityGroupAttachmentStatus defines the observed state of SecurityGroupAttachment.
type SecurityGroupAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SecurityGroupAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityGroupAttachment is the Schema for the SecurityGroupAttachments API. Provides a resource to create a dcdb security_group_attachment
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type SecurityGroupAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityGroupAttachmentSpec   `json:"spec"`
	Status            SecurityGroupAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityGroupAttachmentList contains a list of SecurityGroupAttachments
type SecurityGroupAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecurityGroupAttachment `json:"items"`
}

// Repository type metadata.
var (
	SecurityGroupAttachment_Kind             = "SecurityGroupAttachment"
	SecurityGroupAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SecurityGroupAttachment_Kind}.String()
	SecurityGroupAttachment_KindAPIVersion   = SecurityGroupAttachment_Kind + "." + CRDGroupVersion.String()
	SecurityGroupAttachment_GroupVersionKind = CRDGroupVersion.WithKind(SecurityGroupAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&SecurityGroupAttachment{}, &SecurityGroupAttachmentList{})
}
