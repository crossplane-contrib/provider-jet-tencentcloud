//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DcdbAccount) DeepCopyInto(out *DcdbAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DcdbAccount.
func (in *DcdbAccount) DeepCopy() *DcdbAccount {
	if in == nil {
		return nil
	}
	out := new(DcdbAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DcdbAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DcdbAccountInitParameters) DeepCopyInto(out *DcdbAccountInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.MaxUserConnections != nil {
		in, out := &in.MaxUserConnections, &out.MaxUserConnections
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(float64)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DcdbAccountInitParameters.
func (in *DcdbAccountInitParameters) DeepCopy() *DcdbAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(DcdbAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DcdbAccountList) DeepCopyInto(out *DcdbAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DcdbAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DcdbAccountList.
func (in *DcdbAccountList) DeepCopy() *DcdbAccountList {
	if in == nil {
		return nil
	}
	out := new(DcdbAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DcdbAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DcdbAccountObservation) DeepCopyInto(out *DcdbAccountObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxUserConnections != nil {
		in, out := &in.MaxUserConnections, &out.MaxUserConnections
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(float64)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DcdbAccountObservation.
func (in *DcdbAccountObservation) DeepCopy() *DcdbAccountObservation {
	if in == nil {
		return nil
	}
	out := new(DcdbAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DcdbAccountParameters) DeepCopyInto(out *DcdbAccountParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxUserConnections != nil {
		in, out := &in.MaxUserConnections, &out.MaxUserConnections
		*out = new(float64)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(float64)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DcdbAccountParameters.
func (in *DcdbAccountParameters) DeepCopy() *DcdbAccountParameters {
	if in == nil {
		return nil
	}
	out := new(DcdbAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DcdbAccountSpec) DeepCopyInto(out *DcdbAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DcdbAccountSpec.
func (in *DcdbAccountSpec) DeepCopy() *DcdbAccountSpec {
	if in == nil {
		return nil
	}
	out := new(DcdbAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DcdbAccountStatus) DeepCopyInto(out *DcdbAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DcdbAccountStatus.
func (in *DcdbAccountStatus) DeepCopy() *DcdbAccountStatus {
	if in == nil {
		return nil
	}
	out := new(DcdbAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourdbInstance) DeepCopyInto(out *HourdbInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourdbInstance.
func (in *HourdbInstance) DeepCopy() *HourdbInstance {
	if in == nil {
		return nil
	}
	out := new(HourdbInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HourdbInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourdbInstanceInitParameters) DeepCopyInto(out *HourdbInstanceInitParameters) {
	*out = *in
	if in.DBVersionID != nil {
		in, out := &in.DBVersionID, &out.DBVersionID
		*out = new(string)
		**out = **in
	}
	if in.DcnInstanceID != nil {
		in, out := &in.DcnInstanceID, &out.DcnInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DcnRegion != nil {
		in, out := &in.DcnRegion, &out.DcnRegion
		*out = new(string)
		**out = **in
	}
	if in.ExtranetAccess != nil {
		in, out := &in.ExtranetAccess, &out.ExtranetAccess
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Flag != nil {
		in, out := &in.IPv6Flag, &out.IPv6Flag
		*out = new(float64)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.ResourceTags != nil {
		in, out := &in.ResourceTags, &out.ResourceTags
		*out = make([]ResourceTagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ShardCount != nil {
		in, out := &in.ShardCount, &out.ShardCount
		*out = new(float64)
		**out = **in
	}
	if in.ShardMemory != nil {
		in, out := &in.ShardMemory, &out.ShardMemory
		*out = new(float64)
		**out = **in
	}
	if in.ShardNodeCount != nil {
		in, out := &in.ShardNodeCount, &out.ShardNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.ShardStorage != nil {
		in, out := &in.ShardStorage, &out.ShardStorage
		*out = new(float64)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
	if in.Vipv6 != nil {
		in, out := &in.Vipv6, &out.Vipv6
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourdbInstanceInitParameters.
func (in *HourdbInstanceInitParameters) DeepCopy() *HourdbInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(HourdbInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourdbInstanceList) DeepCopyInto(out *HourdbInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HourdbInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourdbInstanceList.
func (in *HourdbInstanceList) DeepCopy() *HourdbInstanceList {
	if in == nil {
		return nil
	}
	out := new(HourdbInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HourdbInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourdbInstanceObservation) DeepCopyInto(out *HourdbInstanceObservation) {
	*out = *in
	if in.DBVersionID != nil {
		in, out := &in.DBVersionID, &out.DBVersionID
		*out = new(string)
		**out = **in
	}
	if in.DcnInstanceID != nil {
		in, out := &in.DcnInstanceID, &out.DcnInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DcnRegion != nil {
		in, out := &in.DcnRegion, &out.DcnRegion
		*out = new(string)
		**out = **in
	}
	if in.ExtranetAccess != nil {
		in, out := &in.ExtranetAccess, &out.ExtranetAccess
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Flag != nil {
		in, out := &in.IPv6Flag, &out.IPv6Flag
		*out = new(float64)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.ResourceTags != nil {
		in, out := &in.ResourceTags, &out.ResourceTags
		*out = make([]ResourceTagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ShardCount != nil {
		in, out := &in.ShardCount, &out.ShardCount
		*out = new(float64)
		**out = **in
	}
	if in.ShardMemory != nil {
		in, out := &in.ShardMemory, &out.ShardMemory
		*out = new(float64)
		**out = **in
	}
	if in.ShardNodeCount != nil {
		in, out := &in.ShardNodeCount, &out.ShardNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.ShardStorage != nil {
		in, out := &in.ShardStorage, &out.ShardStorage
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
	if in.Vipv6 != nil {
		in, out := &in.Vipv6, &out.Vipv6
		*out = new(string)
		**out = **in
	}
	if in.Vport != nil {
		in, out := &in.Vport, &out.Vport
		*out = new(float64)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourdbInstanceObservation.
func (in *HourdbInstanceObservation) DeepCopy() *HourdbInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(HourdbInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourdbInstanceParameters) DeepCopyInto(out *HourdbInstanceParameters) {
	*out = *in
	if in.DBVersionID != nil {
		in, out := &in.DBVersionID, &out.DBVersionID
		*out = new(string)
		**out = **in
	}
	if in.DcnInstanceID != nil {
		in, out := &in.DcnInstanceID, &out.DcnInstanceID
		*out = new(string)
		**out = **in
	}
	if in.DcnRegion != nil {
		in, out := &in.DcnRegion, &out.DcnRegion
		*out = new(string)
		**out = **in
	}
	if in.ExtranetAccess != nil {
		in, out := &in.ExtranetAccess, &out.ExtranetAccess
		*out = new(bool)
		**out = **in
	}
	if in.IPv6Flag != nil {
		in, out := &in.IPv6Flag, &out.IPv6Flag
		*out = new(float64)
		**out = **in
	}
	if in.InstanceName != nil {
		in, out := &in.InstanceName, &out.InstanceName
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.ResourceTags != nil {
		in, out := &in.ResourceTags, &out.ResourceTags
		*out = make([]ResourceTagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.ShardCount != nil {
		in, out := &in.ShardCount, &out.ShardCount
		*out = new(float64)
		**out = **in
	}
	if in.ShardMemory != nil {
		in, out := &in.ShardMemory, &out.ShardMemory
		*out = new(float64)
		**out = **in
	}
	if in.ShardNodeCount != nil {
		in, out := &in.ShardNodeCount, &out.ShardNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.ShardStorage != nil {
		in, out := &in.ShardStorage, &out.ShardStorage
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(string)
		**out = **in
	}
	if in.Vipv6 != nil {
		in, out := &in.Vipv6, &out.Vipv6
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourdbInstanceParameters.
func (in *HourdbInstanceParameters) DeepCopy() *HourdbInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(HourdbInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourdbInstanceSpec) DeepCopyInto(out *HourdbInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourdbInstanceSpec.
func (in *HourdbInstanceSpec) DeepCopy() *HourdbInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(HourdbInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HourdbInstanceStatus) DeepCopyInto(out *HourdbInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HourdbInstanceStatus.
func (in *HourdbInstanceStatus) DeepCopy() *HourdbInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(HourdbInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTagsInitParameters) DeepCopyInto(out *ResourceTagsInitParameters) {
	*out = *in
	if in.TagKey != nil {
		in, out := &in.TagKey, &out.TagKey
		*out = new(string)
		**out = **in
	}
	if in.TagValue != nil {
		in, out := &in.TagValue, &out.TagValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTagsInitParameters.
func (in *ResourceTagsInitParameters) DeepCopy() *ResourceTagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceTagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTagsObservation) DeepCopyInto(out *ResourceTagsObservation) {
	*out = *in
	if in.TagKey != nil {
		in, out := &in.TagKey, &out.TagKey
		*out = new(string)
		**out = **in
	}
	if in.TagValue != nil {
		in, out := &in.TagValue, &out.TagValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTagsObservation.
func (in *ResourceTagsObservation) DeepCopy() *ResourceTagsObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceTagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTagsParameters) DeepCopyInto(out *ResourceTagsParameters) {
	*out = *in
	if in.TagKey != nil {
		in, out := &in.TagKey, &out.TagKey
		*out = new(string)
		**out = **in
	}
	if in.TagValue != nil {
		in, out := &in.TagValue, &out.TagValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTagsParameters.
func (in *ResourceTagsParameters) DeepCopy() *ResourceTagsParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceTagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupAttachment) DeepCopyInto(out *SecurityGroupAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupAttachment.
func (in *SecurityGroupAttachment) DeepCopy() *SecurityGroupAttachment {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupAttachmentInitParameters) DeepCopyInto(out *SecurityGroupAttachmentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupAttachmentInitParameters.
func (in *SecurityGroupAttachmentInitParameters) DeepCopy() *SecurityGroupAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupAttachmentList) DeepCopyInto(out *SecurityGroupAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityGroupAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupAttachmentList.
func (in *SecurityGroupAttachmentList) DeepCopy() *SecurityGroupAttachmentList {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityGroupAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupAttachmentObservation) DeepCopyInto(out *SecurityGroupAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupAttachmentObservation.
func (in *SecurityGroupAttachmentObservation) DeepCopy() *SecurityGroupAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupAttachmentParameters) DeepCopyInto(out *SecurityGroupAttachmentParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupAttachmentParameters.
func (in *SecurityGroupAttachmentParameters) DeepCopy() *SecurityGroupAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupAttachmentSpec) DeepCopyInto(out *SecurityGroupAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupAttachmentSpec.
func (in *SecurityGroupAttachmentSpec) DeepCopy() *SecurityGroupAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityGroupAttachmentStatus) DeepCopyInto(out *SecurityGroupAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityGroupAttachmentStatus.
func (in *SecurityGroupAttachmentStatus) DeepCopy() *SecurityGroupAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityGroupAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}
