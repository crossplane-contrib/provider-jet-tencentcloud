//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationObservation) DeepCopyInto(out *AuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationObservation.
func (in *AuthenticationObservation) DeepCopy() *AuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationParameters) DeepCopyInto(out *AuthenticationParameters) {
	*out = *in
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
	if in.TypeA != nil {
		in, out := &in.TypeA, &out.TypeA
		*out = make([]TypeAParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TypeB != nil {
		in, out := &in.TypeB, &out.TypeB
		*out = make([]TypeBParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TypeC != nil {
		in, out := &in.TypeC, &out.TypeC
		*out = make([]TypeCParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TypeD != nil {
		in, out := &in.TypeD, &out.TypeD
		*out = make([]TypeDParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationParameters.
func (in *AuthenticationParameters) DeepCopy() *AuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsPrivateAccessObservation) DeepCopyInto(out *AwsPrivateAccessObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsPrivateAccessObservation.
func (in *AwsPrivateAccessObservation) DeepCopy() *AwsPrivateAccessObservation {
	if in == nil {
		return nil
	}
	out := new(AwsPrivateAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsPrivateAccessParameters) DeepCopyInto(out *AwsPrivateAccessParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsPrivateAccessParameters.
func (in *AwsPrivateAccessParameters) DeepCopy() *AwsPrivateAccessParameters {
	if in == nil {
		return nil
	}
	out := new(AwsPrivateAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandWidthAlertObservation) DeepCopyInto(out *BandWidthAlertObservation) {
	*out = *in
	if in.LastTriggerTime != nil {
		in, out := &in.LastTriggerTime, &out.LastTriggerTime
		*out = new(string)
		**out = **in
	}
	if in.LastTriggerTimeOverseas != nil {
		in, out := &in.LastTriggerTimeOverseas, &out.LastTriggerTimeOverseas
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandWidthAlertObservation.
func (in *BandWidthAlertObservation) DeepCopy() *BandWidthAlertObservation {
	if in == nil {
		return nil
	}
	out := new(BandWidthAlertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandWidthAlertParameters) DeepCopyInto(out *BandWidthAlertParameters) {
	*out = *in
	if in.AlertPercentage != nil {
		in, out := &in.AlertPercentage, &out.AlertPercentage
		*out = new(float64)
		**out = **in
	}
	if in.AlertSwitch != nil {
		in, out := &in.AlertSwitch, &out.AlertSwitch
		*out = new(string)
		**out = **in
	}
	if in.BpsThreshold != nil {
		in, out := &in.BpsThreshold, &out.BpsThreshold
		*out = new(float64)
		**out = **in
	}
	if in.CounterMeasure != nil {
		in, out := &in.CounterMeasure, &out.CounterMeasure
		*out = new(string)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.StatisticItem != nil {
		in, out := &in.StatisticItem, &out.StatisticItem
		*out = make([]StatisticItemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandWidthAlertParameters.
func (in *BandWidthAlertParameters) DeepCopy() *BandWidthAlertParameters {
	if in == nil {
		return nil
	}
	out := new(BandWidthAlertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheRulesObservation) DeepCopyInto(out *CacheRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheRulesObservation.
func (in *CacheRulesObservation) DeepCopy() *CacheRulesObservation {
	if in == nil {
		return nil
	}
	out := new(CacheRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheRulesParameters) DeepCopyInto(out *CacheRulesParameters) {
	*out = *in
	if in.CacheTime != nil {
		in, out := &in.CacheTime, &out.CacheTime
		*out = new(float64)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheRulesParameters.
func (in *CacheRulesParameters) DeepCopy() *CacheRulesParameters {
	if in == nil {
		return nil
	}
	out := new(CacheRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CappingRulesObservation) DeepCopyInto(out *CappingRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CappingRulesObservation.
func (in *CappingRulesObservation) DeepCopy() *CappingRulesObservation {
	if in == nil {
		return nil
	}
	out := new(CappingRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CappingRulesParameters) DeepCopyInto(out *CappingRulesParameters) {
	*out = *in
	if in.KbpsThreshold != nil {
		in, out := &in.KbpsThreshold, &out.KbpsThreshold
		*out = new(float64)
		**out = **in
	}
	if in.RulePaths != nil {
		in, out := &in.RulePaths, &out.RulePaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CappingRulesParameters.
func (in *CappingRulesParameters) DeepCopy() *CappingRulesParameters {
	if in == nil {
		return nil
	}
	out := new(CappingRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateConfigObservation) DeepCopyInto(out *ClientCertificateConfigObservation) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.DeployTime != nil {
		in, out := &in.DeployTime, &out.DeployTime
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateConfigObservation.
func (in *ClientCertificateConfigObservation) DeepCopy() *ClientCertificateConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificateConfigParameters) DeepCopyInto(out *ClientCertificateConfigParameters) {
	*out = *in
	if in.CertificateContent != nil {
		in, out := &in.CertificateContent, &out.CertificateContent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificateConfigParameters.
func (in *ClientCertificateConfigParameters) DeepCopy() *ClientCertificateConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClientCertificateConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressionObservation) DeepCopyInto(out *CompressionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressionObservation.
func (in *CompressionObservation) DeepCopy() *CompressionObservation {
	if in == nil {
		return nil
	}
	out := new(CompressionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressionParameters) DeepCopyInto(out *CompressionParameters) {
	*out = *in
	if in.CompressionRules != nil {
		in, out := &in.CompressionRules, &out.CompressionRules
		*out = make([]CompressionRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressionParameters.
func (in *CompressionParameters) DeepCopy() *CompressionParameters {
	if in == nil {
		return nil
	}
	out := new(CompressionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressionRulesObservation) DeepCopyInto(out *CompressionRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressionRulesObservation.
func (in *CompressionRulesObservation) DeepCopy() *CompressionRulesObservation {
	if in == nil {
		return nil
	}
	out := new(CompressionRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompressionRulesParameters) DeepCopyInto(out *CompressionRulesParameters) {
	*out = *in
	if in.Algorithms != nil {
		in, out := &in.Algorithms, &out.Algorithms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.FileExtensions != nil {
		in, out := &in.FileExtensions, &out.FileExtensions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxLength != nil {
		in, out := &in.MaxLength, &out.MaxLength
		*out = new(float64)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
	if in.RulePaths != nil {
		in, out := &in.RulePaths, &out.RulePaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompressionRulesParameters.
func (in *CompressionRulesParameters) DeepCopy() *CompressionRulesParameters {
	if in == nil {
		return nil
	}
	out := new(CompressionRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Domain) DeepCopyInto(out *Domain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Domain.
func (in *Domain) DeepCopy() *Domain {
	if in == nil {
		return nil
	}
	out := new(Domain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Domain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainList) DeepCopyInto(out *DomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Domain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainList.
func (in *DomainList) DeepCopy() *DomainList {
	if in == nil {
		return nil
	}
	out := new(DomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainObservation) DeepCopyInto(out *DomainObservation) {
	*out = *in
	if in.BandWidthAlert != nil {
		in, out := &in.BandWidthAlert, &out.BandWidthAlert
		*out = make([]BandWidthAlertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DryRunCreateResult != nil {
		in, out := &in.DryRunCreateResult, &out.DryRunCreateResult
		*out = new(string)
		**out = **in
	}
	if in.DryRunUpdateResult != nil {
		in, out := &in.DryRunUpdateResult, &out.DryRunUpdateResult
		*out = new(string)
		**out = **in
	}
	if in.HTTPSConfig != nil {
		in, out := &in.HTTPSConfig, &out.HTTPSConfig
		*out = make([]HTTPSConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainObservation.
func (in *DomainObservation) DeepCopy() *DomainObservation {
	if in == nil {
		return nil
	}
	out := new(DomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainParameters) DeepCopyInto(out *DomainParameters) {
	*out = *in
	if in.Area != nil {
		in, out := &in.Area, &out.Area
		*out = new(string)
		**out = **in
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = make([]AuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AwsPrivateAccess != nil {
		in, out := &in.AwsPrivateAccess, &out.AwsPrivateAccess
		*out = make([]AwsPrivateAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BandWidthAlert != nil {
		in, out := &in.BandWidthAlert, &out.BandWidthAlert
		*out = make([]BandWidthAlertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = make([]CompressionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DownstreamCapping != nil {
		in, out := &in.DownstreamCapping, &out.DownstreamCapping
		*out = make([]DownstreamCappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ErrorPage != nil {
		in, out := &in.ErrorPage, &out.ErrorPage
		*out = make([]ErrorPageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExplicitUsingDryRun != nil {
		in, out := &in.ExplicitUsingDryRun, &out.ExplicitUsingDryRun
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirectSwitch != nil {
		in, out := &in.FollowRedirectSwitch, &out.FollowRedirectSwitch
		*out = new(string)
		**out = **in
	}
	if in.FullURLCache != nil {
		in, out := &in.FullURLCache, &out.FullURLCache
		*out = new(bool)
		**out = **in
	}
	if in.HTTPSConfig != nil {
		in, out := &in.HTTPSConfig, &out.HTTPSConfig
		*out = make([]HTTPSConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HwPrivateAccess != nil {
		in, out := &in.HwPrivateAccess, &out.HwPrivateAccess
		*out = make([]HwPrivateAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPFilter != nil {
		in, out := &in.IPFilter, &out.IPFilter
		*out = make([]IPFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPFreqLimit != nil {
		in, out := &in.IPFreqLimit, &out.IPFreqLimit
		*out = make([]IPFreqLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessSwitch != nil {
		in, out := &in.IPv6AccessSwitch, &out.IPv6AccessSwitch
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = make([]MaxAgeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OfflineCacheSwitch != nil {
		in, out := &in.OfflineCacheSwitch, &out.OfflineCacheSwitch
		*out = new(string)
		**out = **in
	}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = make([]OriginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginPullOptimization != nil {
		in, out := &in.OriginPullOptimization, &out.OriginPullOptimization
		*out = make([]OriginPullOptimizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginPullTimeout != nil {
		in, out := &in.OriginPullTimeout, &out.OriginPullTimeout
		*out = make([]OriginPullTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OssPrivateAccess != nil {
		in, out := &in.OssPrivateAccess, &out.OssPrivateAccess
		*out = make([]OssPrivateAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostMaxSize != nil {
		in, out := &in.PostMaxSize, &out.PostMaxSize
		*out = make([]PostMaxSizeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(float64)
		**out = **in
	}
	if in.QnPrivateAccess != nil {
		in, out := &in.QnPrivateAccess, &out.QnPrivateAccess
		*out = make([]QnPrivateAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.QuicSwitch != nil {
		in, out := &in.QuicSwitch, &out.QuicSwitch
		*out = new(string)
		**out = **in
	}
	if in.RangeOriginSwitch != nil {
		in, out := &in.RangeOriginSwitch, &out.RangeOriginSwitch
		*out = new(string)
		**out = **in
	}
	if in.Referer != nil {
		in, out := &in.Referer, &out.Referer
		*out = make([]RefererParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeader != nil {
		in, out := &in.RequestHeader, &out.RequestHeader
		*out = make([]RequestHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeader != nil {
		in, out := &in.ResponseHeader, &out.ResponseHeader
		*out = make([]ResponseHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeaderCacheSwitch != nil {
		in, out := &in.ResponseHeaderCacheSwitch, &out.ResponseHeaderCacheSwitch
		*out = new(string)
		**out = **in
	}
	if in.RuleCache != nil {
		in, out := &in.RuleCache, &out.RuleCache
		*out = make([]RuleCacheParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SeoSwitch != nil {
		in, out := &in.SeoSwitch, &out.SeoSwitch
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.SpecificConfigMainland != nil {
		in, out := &in.SpecificConfigMainland, &out.SpecificConfigMainland
		*out = new(string)
		**out = **in
	}
	if in.SpecificConfigOverseas != nil {
		in, out := &in.SpecificConfigOverseas, &out.SpecificConfigOverseas
		*out = new(string)
		**out = **in
	}
	if in.StatusCodeCache != nil {
		in, out := &in.StatusCodeCache, &out.StatusCodeCache
		*out = make([]StatusCodeCacheParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VideoSeekSwitch != nil {
		in, out := &in.VideoSeekSwitch, &out.VideoSeekSwitch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainParameters.
func (in *DomainParameters) DeepCopy() *DomainParameters {
	if in == nil {
		return nil
	}
	out := new(DomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainSpec) DeepCopyInto(out *DomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainSpec.
func (in *DomainSpec) DeepCopy() *DomainSpec {
	if in == nil {
		return nil
	}
	out := new(DomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainStatus) DeepCopyInto(out *DomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainStatus.
func (in *DomainStatus) DeepCopy() *DomainStatus {
	if in == nil {
		return nil
	}
	out := new(DomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownstreamCappingObservation) DeepCopyInto(out *DownstreamCappingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownstreamCappingObservation.
func (in *DownstreamCappingObservation) DeepCopy() *DownstreamCappingObservation {
	if in == nil {
		return nil
	}
	out := new(DownstreamCappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownstreamCappingParameters) DeepCopyInto(out *DownstreamCappingParameters) {
	*out = *in
	if in.CappingRules != nil {
		in, out := &in.CappingRules, &out.CappingRules
		*out = make([]CappingRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownstreamCappingParameters.
func (in *DownstreamCappingParameters) DeepCopy() *DownstreamCappingParameters {
	if in == nil {
		return nil
	}
	out := new(DownstreamCappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorPageObservation) DeepCopyInto(out *ErrorPageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorPageObservation.
func (in *ErrorPageObservation) DeepCopy() *ErrorPageObservation {
	if in == nil {
		return nil
	}
	out := new(ErrorPageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorPageParameters) DeepCopyInto(out *ErrorPageParameters) {
	*out = *in
	if in.PageRules != nil {
		in, out := &in.PageRules, &out.PageRules
		*out = make([]PageRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorPageParameters.
func (in *ErrorPageParameters) DeepCopy() *ErrorPageParameters {
	if in == nil {
		return nil
	}
	out := new(ErrorPageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRulesObservation) DeepCopyInto(out *FilterRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRulesObservation.
func (in *FilterRulesObservation) DeepCopy() *FilterRulesObservation {
	if in == nil {
		return nil
	}
	out := new(FilterRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRulesParameters) DeepCopyInto(out *FilterRulesParameters) {
	*out = *in
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RulePaths != nil {
		in, out := &in.RulePaths, &out.RulePaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRulesParameters.
func (in *FilterRulesParameters) DeepCopy() *FilterRulesParameters {
	if in == nil {
		return nil
	}
	out := new(FilterRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForceRedirectObservation) DeepCopyInto(out *ForceRedirectObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForceRedirectObservation.
func (in *ForceRedirectObservation) DeepCopy() *ForceRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(ForceRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForceRedirectParameters) DeepCopyInto(out *ForceRedirectParameters) {
	*out = *in
	if in.CarryHeaders != nil {
		in, out := &in.CarryHeaders, &out.CarryHeaders
		*out = new(string)
		**out = **in
	}
	if in.RedirectStatusCode != nil {
		in, out := &in.RedirectStatusCode, &out.RedirectStatusCode
		*out = new(float64)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForceRedirectParameters.
func (in *ForceRedirectParameters) DeepCopy() *ForceRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(ForceRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSConfigObservation) DeepCopyInto(out *HTTPSConfigObservation) {
	*out = *in
	if in.ClientCertificateConfig != nil {
		in, out := &in.ClientCertificateConfig, &out.ClientCertificateConfig
		*out = make([]ClientCertificateConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServerCertificateConfig != nil {
		in, out := &in.ServerCertificateConfig, &out.ServerCertificateConfig
		*out = make([]ServerCertificateConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSConfigObservation.
func (in *HTTPSConfigObservation) DeepCopy() *HTTPSConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPSConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSConfigParameters) DeepCopyInto(out *HTTPSConfigParameters) {
	*out = *in
	if in.ClientCertificateConfig != nil {
		in, out := &in.ClientCertificateConfig, &out.ClientCertificateConfig
		*out = make([]ClientCertificateConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceRedirect != nil {
		in, out := &in.ForceRedirect, &out.ForceRedirect
		*out = make([]ForceRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSSwitch != nil {
		in, out := &in.HTTPSSwitch, &out.HTTPSSwitch
		*out = new(string)
		**out = **in
	}
	if in.Http2Switch != nil {
		in, out := &in.Http2Switch, &out.Http2Switch
		*out = new(string)
		**out = **in
	}
	if in.OcspStaplingSwitch != nil {
		in, out := &in.OcspStaplingSwitch, &out.OcspStaplingSwitch
		*out = new(string)
		**out = **in
	}
	if in.ServerCertificateConfig != nil {
		in, out := &in.ServerCertificateConfig, &out.ServerCertificateConfig
		*out = make([]ServerCertificateConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpdySwitch != nil {
		in, out := &in.SpdySwitch, &out.SpdySwitch
		*out = new(string)
		**out = **in
	}
	if in.TLSVersions != nil {
		in, out := &in.TLSVersions, &out.TLSVersions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerifyClient != nil {
		in, out := &in.VerifyClient, &out.VerifyClient
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSConfigParameters.
func (in *HTTPSConfigParameters) DeepCopy() *HTTPSConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderRulesObservation) DeepCopyInto(out *HeaderRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderRulesObservation.
func (in *HeaderRulesObservation) DeepCopy() *HeaderRulesObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderRulesParameters) DeepCopyInto(out *HeaderRulesParameters) {
	*out = *in
	if in.HeaderMode != nil {
		in, out := &in.HeaderMode, &out.HeaderMode
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.RulePaths != nil {
		in, out := &in.RulePaths, &out.RulePaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderRulesParameters.
func (in *HeaderRulesParameters) DeepCopy() *HeaderRulesParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HwPrivateAccessObservation) DeepCopyInto(out *HwPrivateAccessObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HwPrivateAccessObservation.
func (in *HwPrivateAccessObservation) DeepCopy() *HwPrivateAccessObservation {
	if in == nil {
		return nil
	}
	out := new(HwPrivateAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HwPrivateAccessParameters) DeepCopyInto(out *HwPrivateAccessParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HwPrivateAccessParameters.
func (in *HwPrivateAccessParameters) DeepCopy() *HwPrivateAccessParameters {
	if in == nil {
		return nil
	}
	out := new(HwPrivateAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPFilterObservation) DeepCopyInto(out *IPFilterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPFilterObservation.
func (in *IPFilterObservation) DeepCopy() *IPFilterObservation {
	if in == nil {
		return nil
	}
	out := new(IPFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPFilterParameters) DeepCopyInto(out *IPFilterParameters) {
	*out = *in
	if in.FilterRules != nil {
		in, out := &in.FilterRules, &out.FilterRules
		*out = make([]FilterRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ReturnCode != nil {
		in, out := &in.ReturnCode, &out.ReturnCode
		*out = new(float64)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPFilterParameters.
func (in *IPFilterParameters) DeepCopy() *IPFilterParameters {
	if in == nil {
		return nil
	}
	out := new(IPFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPFreqLimitObservation) DeepCopyInto(out *IPFreqLimitObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPFreqLimitObservation.
func (in *IPFreqLimitObservation) DeepCopy() *IPFreqLimitObservation {
	if in == nil {
		return nil
	}
	out := new(IPFreqLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPFreqLimitParameters) DeepCopyInto(out *IPFreqLimitParameters) {
	*out = *in
	if in.QPS != nil {
		in, out := &in.QPS, &out.QPS
		*out = new(float64)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPFreqLimitParameters.
func (in *IPFreqLimitParameters) DeepCopy() *IPFreqLimitParameters {
	if in == nil {
		return nil
	}
	out := new(IPFreqLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxAgeObservation) DeepCopyInto(out *MaxAgeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxAgeObservation.
func (in *MaxAgeObservation) DeepCopy() *MaxAgeObservation {
	if in == nil {
		return nil
	}
	out := new(MaxAgeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxAgeParameters) DeepCopyInto(out *MaxAgeParameters) {
	*out = *in
	if in.MaxAgeRules != nil {
		in, out := &in.MaxAgeRules, &out.MaxAgeRules
		*out = make([]MaxAgeRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxAgeParameters.
func (in *MaxAgeParameters) DeepCopy() *MaxAgeParameters {
	if in == nil {
		return nil
	}
	out := new(MaxAgeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxAgeRulesObservation) DeepCopyInto(out *MaxAgeRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxAgeRulesObservation.
func (in *MaxAgeRulesObservation) DeepCopy() *MaxAgeRulesObservation {
	if in == nil {
		return nil
	}
	out := new(MaxAgeRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxAgeRulesParameters) DeepCopyInto(out *MaxAgeRulesParameters) {
	*out = *in
	if in.FollowOrigin != nil {
		in, out := &in.FollowOrigin, &out.FollowOrigin
		*out = new(string)
		**out = **in
	}
	if in.MaxAgeContents != nil {
		in, out := &in.MaxAgeContents, &out.MaxAgeContents
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAgeTime != nil {
		in, out := &in.MaxAgeTime, &out.MaxAgeTime
		*out = new(float64)
		**out = **in
	}
	if in.MaxAgeType != nil {
		in, out := &in.MaxAgeType, &out.MaxAgeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxAgeRulesParameters.
func (in *MaxAgeRulesParameters) DeepCopy() *MaxAgeRulesParameters {
	if in == nil {
		return nil
	}
	out := new(MaxAgeRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginObservation) DeepCopyInto(out *OriginObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginObservation.
func (in *OriginObservation) DeepCopy() *OriginObservation {
	if in == nil {
		return nil
	}
	out := new(OriginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginParameters) DeepCopyInto(out *OriginParameters) {
	*out = *in
	if in.BackupOriginList != nil {
		in, out := &in.BackupOriginList, &out.BackupOriginList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackupOriginType != nil {
		in, out := &in.BackupOriginType, &out.BackupOriginType
		*out = new(string)
		**out = **in
	}
	if in.BackupServerName != nil {
		in, out := &in.BackupServerName, &out.BackupServerName
		*out = new(string)
		**out = **in
	}
	if in.CosPrivateAccess != nil {
		in, out := &in.CosPrivateAccess, &out.CosPrivateAccess
		*out = new(string)
		**out = **in
	}
	if in.OriginList != nil {
		in, out := &in.OriginList, &out.OriginList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OriginPullProtocol != nil {
		in, out := &in.OriginPullProtocol, &out.OriginPullProtocol
		*out = new(string)
		**out = **in
	}
	if in.OriginType != nil {
		in, out := &in.OriginType, &out.OriginType
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginParameters.
func (in *OriginParameters) DeepCopy() *OriginParameters {
	if in == nil {
		return nil
	}
	out := new(OriginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginPullOptimizationObservation) DeepCopyInto(out *OriginPullOptimizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginPullOptimizationObservation.
func (in *OriginPullOptimizationObservation) DeepCopy() *OriginPullOptimizationObservation {
	if in == nil {
		return nil
	}
	out := new(OriginPullOptimizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginPullOptimizationParameters) DeepCopyInto(out *OriginPullOptimizationParameters) {
	*out = *in
	if in.OptimizationType != nil {
		in, out := &in.OptimizationType, &out.OptimizationType
		*out = new(string)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginPullOptimizationParameters.
func (in *OriginPullOptimizationParameters) DeepCopy() *OriginPullOptimizationParameters {
	if in == nil {
		return nil
	}
	out := new(OriginPullOptimizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginPullTimeoutObservation) DeepCopyInto(out *OriginPullTimeoutObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginPullTimeoutObservation.
func (in *OriginPullTimeoutObservation) DeepCopy() *OriginPullTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(OriginPullTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginPullTimeoutParameters) DeepCopyInto(out *OriginPullTimeoutParameters) {
	*out = *in
	if in.ConnectTimeout != nil {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ReceiveTimeout != nil {
		in, out := &in.ReceiveTimeout, &out.ReceiveTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginPullTimeoutParameters.
func (in *OriginPullTimeoutParameters) DeepCopy() *OriginPullTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(OriginPullTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OssPrivateAccessObservation) DeepCopyInto(out *OssPrivateAccessObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OssPrivateAccessObservation.
func (in *OssPrivateAccessObservation) DeepCopy() *OssPrivateAccessObservation {
	if in == nil {
		return nil
	}
	out := new(OssPrivateAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OssPrivateAccessParameters) DeepCopyInto(out *OssPrivateAccessParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OssPrivateAccessParameters.
func (in *OssPrivateAccessParameters) DeepCopy() *OssPrivateAccessParameters {
	if in == nil {
		return nil
	}
	out := new(OssPrivateAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PageRulesObservation) DeepCopyInto(out *PageRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PageRulesObservation.
func (in *PageRulesObservation) DeepCopy() *PageRulesObservation {
	if in == nil {
		return nil
	}
	out := new(PageRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PageRulesParameters) DeepCopyInto(out *PageRulesParameters) {
	*out = *in
	if in.RedirectCode != nil {
		in, out := &in.RedirectCode, &out.RedirectCode
		*out = new(float64)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PageRulesParameters.
func (in *PageRulesParameters) DeepCopy() *PageRulesParameters {
	if in == nil {
		return nil
	}
	out := new(PageRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostMaxSizeObservation) DeepCopyInto(out *PostMaxSizeObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostMaxSizeObservation.
func (in *PostMaxSizeObservation) DeepCopy() *PostMaxSizeObservation {
	if in == nil {
		return nil
	}
	out := new(PostMaxSizeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostMaxSizeParameters) DeepCopyInto(out *PostMaxSizeParameters) {
	*out = *in
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostMaxSizeParameters.
func (in *PostMaxSizeParameters) DeepCopy() *PostMaxSizeParameters {
	if in == nil {
		return nil
	}
	out := new(PostMaxSizeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PurgeHistoryObservation) DeepCopyInto(out *PurgeHistoryObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.FlushType != nil {
		in, out := &in.FlushType, &out.FlushType
		*out = new(string)
		**out = **in
	}
	if in.PurgeType != nil {
		in, out := &in.PurgeType, &out.PurgeType
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PurgeHistoryObservation.
func (in *PurgeHistoryObservation) DeepCopy() *PurgeHistoryObservation {
	if in == nil {
		return nil
	}
	out := new(PurgeHistoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PurgeHistoryParameters) DeepCopyInto(out *PurgeHistoryParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PurgeHistoryParameters.
func (in *PurgeHistoryParameters) DeepCopy() *PurgeHistoryParameters {
	if in == nil {
		return nil
	}
	out := new(PurgeHistoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PushHistoryObservation) DeepCopyInto(out *PushHistoryObservation) {
	*out = *in
	if in.Area != nil {
		in, out := &in.Area, &out.Area
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PushHistoryObservation.
func (in *PushHistoryObservation) DeepCopy() *PushHistoryObservation {
	if in == nil {
		return nil
	}
	out := new(PushHistoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PushHistoryParameters) DeepCopyInto(out *PushHistoryParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PushHistoryParameters.
func (in *PushHistoryParameters) DeepCopy() *PushHistoryParameters {
	if in == nil {
		return nil
	}
	out := new(PushHistoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QnPrivateAccessObservation) DeepCopyInto(out *QnPrivateAccessObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QnPrivateAccessObservation.
func (in *QnPrivateAccessObservation) DeepCopy() *QnPrivateAccessObservation {
	if in == nil {
		return nil
	}
	out := new(QnPrivateAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QnPrivateAccessParameters) DeepCopyInto(out *QnPrivateAccessParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QnPrivateAccessParameters.
func (in *QnPrivateAccessParameters) DeepCopy() *QnPrivateAccessParameters {
	if in == nil {
		return nil
	}
	out := new(QnPrivateAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefererObservation) DeepCopyInto(out *RefererObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefererObservation.
func (in *RefererObservation) DeepCopy() *RefererObservation {
	if in == nil {
		return nil
	}
	out := new(RefererObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefererParameters) DeepCopyInto(out *RefererParameters) {
	*out = *in
	if in.RefererRules != nil {
		in, out := &in.RefererRules, &out.RefererRules
		*out = make([]RefererRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefererParameters.
func (in *RefererParameters) DeepCopy() *RefererParameters {
	if in == nil {
		return nil
	}
	out := new(RefererParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefererRulesObservation) DeepCopyInto(out *RefererRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefererRulesObservation.
func (in *RefererRulesObservation) DeepCopy() *RefererRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RefererRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RefererRulesParameters) DeepCopyInto(out *RefererRulesParameters) {
	*out = *in
	if in.AllowEmpty != nil {
		in, out := &in.AllowEmpty, &out.AllowEmpty
		*out = new(bool)
		**out = **in
	}
	if in.RefererType != nil {
		in, out := &in.RefererType, &out.RefererType
		*out = new(string)
		**out = **in
	}
	if in.Referers != nil {
		in, out := &in.Referers, &out.Referers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RulePaths != nil {
		in, out := &in.RulePaths, &out.RulePaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RefererRulesParameters.
func (in *RefererRulesParameters) DeepCopy() *RefererRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RefererRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderObservation) DeepCopyInto(out *RequestHeaderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderObservation.
func (in *RequestHeaderObservation) DeepCopy() *RequestHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeaderParameters) DeepCopyInto(out *RequestHeaderParameters) {
	*out = *in
	if in.HeaderRules != nil {
		in, out := &in.HeaderRules, &out.HeaderRules
		*out = make([]HeaderRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeaderParameters.
func (in *RequestHeaderParameters) DeepCopy() *RequestHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderHeaderRulesObservation) DeepCopyInto(out *ResponseHeaderHeaderRulesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderHeaderRulesObservation.
func (in *ResponseHeaderHeaderRulesObservation) DeepCopy() *ResponseHeaderHeaderRulesObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderHeaderRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderHeaderRulesParameters) DeepCopyInto(out *ResponseHeaderHeaderRulesParameters) {
	*out = *in
	if in.HeaderMode != nil {
		in, out := &in.HeaderMode, &out.HeaderMode
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.RulePaths != nil {
		in, out := &in.RulePaths, &out.RulePaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderHeaderRulesParameters.
func (in *ResponseHeaderHeaderRulesParameters) DeepCopy() *ResponseHeaderHeaderRulesParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderHeaderRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderObservation) DeepCopyInto(out *ResponseHeaderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderObservation.
func (in *ResponseHeaderObservation) DeepCopy() *ResponseHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeaderParameters) DeepCopyInto(out *ResponseHeaderParameters) {
	*out = *in
	if in.HeaderRules != nil {
		in, out := &in.HeaderRules, &out.HeaderRules
		*out = make([]ResponseHeaderHeaderRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeaderParameters.
func (in *ResponseHeaderParameters) DeepCopy() *ResponseHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleCacheObservation) DeepCopyInto(out *RuleCacheObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleCacheObservation.
func (in *RuleCacheObservation) DeepCopy() *RuleCacheObservation {
	if in == nil {
		return nil
	}
	out := new(RuleCacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleCacheParameters) DeepCopyInto(out *RuleCacheParameters) {
	*out = *in
	if in.CacheTime != nil {
		in, out := &in.CacheTime, &out.CacheTime
		*out = new(float64)
		**out = **in
	}
	if in.CompareMaxAge != nil {
		in, out := &in.CompareMaxAge, &out.CompareMaxAge
		*out = new(string)
		**out = **in
	}
	if in.FollowOriginSwitch != nil {
		in, out := &in.FollowOriginSwitch, &out.FollowOriginSwitch
		*out = new(string)
		**out = **in
	}
	if in.IgnoreCacheControl != nil {
		in, out := &in.IgnoreCacheControl, &out.IgnoreCacheControl
		*out = new(string)
		**out = **in
	}
	if in.IgnoreSetCookie != nil {
		in, out := &in.IgnoreSetCookie, &out.IgnoreSetCookie
		*out = new(string)
		**out = **in
	}
	if in.NoCacheSwitch != nil {
		in, out := &in.NoCacheSwitch, &out.NoCacheSwitch
		*out = new(string)
		**out = **in
	}
	if in.ReValidate != nil {
		in, out := &in.ReValidate, &out.ReValidate
		*out = new(string)
		**out = **in
	}
	if in.RulePaths != nil {
		in, out := &in.RulePaths, &out.RulePaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RuleType != nil {
		in, out := &in.RuleType, &out.RuleType
		*out = new(string)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleCacheParameters.
func (in *RuleCacheParameters) DeepCopy() *RuleCacheParameters {
	if in == nil {
		return nil
	}
	out := new(RuleCacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerCertificateConfigObservation) DeepCopyInto(out *ServerCertificateConfigObservation) {
	*out = *in
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.DeployTime != nil {
		in, out := &in.DeployTime, &out.DeployTime
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerCertificateConfigObservation.
func (in *ServerCertificateConfigObservation) DeepCopy() *ServerCertificateConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ServerCertificateConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerCertificateConfigParameters) DeepCopyInto(out *ServerCertificateConfigParameters) {
	*out = *in
	if in.CertificateContent != nil {
		in, out := &in.CertificateContent, &out.CertificateContent
		*out = new(string)
		**out = **in
	}
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerCertificateConfigParameters.
func (in *ServerCertificateConfigParameters) DeepCopy() *ServerCertificateConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ServerCertificateConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatisticItemObservation) DeepCopyInto(out *StatisticItemObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatisticItemObservation.
func (in *StatisticItemObservation) DeepCopy() *StatisticItemObservation {
	if in == nil {
		return nil
	}
	out := new(StatisticItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatisticItemParameters) DeepCopyInto(out *StatisticItemParameters) {
	*out = *in
	if in.AlertPercentage != nil {
		in, out := &in.AlertPercentage, &out.AlertPercentage
		*out = new(float64)
		**out = **in
	}
	if in.AlertSwitch != nil {
		in, out := &in.AlertSwitch, &out.AlertSwitch
		*out = new(string)
		**out = **in
	}
	if in.BpsThreshold != nil {
		in, out := &in.BpsThreshold, &out.BpsThreshold
		*out = new(float64)
		**out = **in
	}
	if in.CounterMeasure != nil {
		in, out := &in.CounterMeasure, &out.CounterMeasure
		*out = new(string)
		**out = **in
	}
	if in.Cycle != nil {
		in, out := &in.Cycle, &out.Cycle
		*out = new(float64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UnblockTime != nil {
		in, out := &in.UnblockTime, &out.UnblockTime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatisticItemParameters.
func (in *StatisticItemParameters) DeepCopy() *StatisticItemParameters {
	if in == nil {
		return nil
	}
	out := new(StatisticItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCodeCacheObservation) DeepCopyInto(out *StatusCodeCacheObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCodeCacheObservation.
func (in *StatusCodeCacheObservation) DeepCopy() *StatusCodeCacheObservation {
	if in == nil {
		return nil
	}
	out := new(StatusCodeCacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCodeCacheParameters) DeepCopyInto(out *StatusCodeCacheParameters) {
	*out = *in
	if in.CacheRules != nil {
		in, out := &in.CacheRules, &out.CacheRules
		*out = make([]CacheRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Switch != nil {
		in, out := &in.Switch, &out.Switch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCodeCacheParameters.
func (in *StatusCodeCacheParameters) DeepCopy() *StatusCodeCacheParameters {
	if in == nil {
		return nil
	}
	out := new(StatusCodeCacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeAObservation) DeepCopyInto(out *TypeAObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeAObservation.
func (in *TypeAObservation) DeepCopy() *TypeAObservation {
	if in == nil {
		return nil
	}
	out := new(TypeAObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeAParameters) DeepCopyInto(out *TypeAParameters) {
	*out = *in
	if in.BackupSecretKey != nil {
		in, out := &in.BackupSecretKey, &out.BackupSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.FileExtensions != nil {
		in, out := &in.FileExtensions, &out.FileExtensions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.SignParam != nil {
		in, out := &in.SignParam, &out.SignParam
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeAParameters.
func (in *TypeAParameters) DeepCopy() *TypeAParameters {
	if in == nil {
		return nil
	}
	out := new(TypeAParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeBObservation) DeepCopyInto(out *TypeBObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeBObservation.
func (in *TypeBObservation) DeepCopy() *TypeBObservation {
	if in == nil {
		return nil
	}
	out := new(TypeBObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeBParameters) DeepCopyInto(out *TypeBParameters) {
	*out = *in
	if in.BackupSecretKey != nil {
		in, out := &in.BackupSecretKey, &out.BackupSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.FileExtensions != nil {
		in, out := &in.FileExtensions, &out.FileExtensions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeBParameters.
func (in *TypeBParameters) DeepCopy() *TypeBParameters {
	if in == nil {
		return nil
	}
	out := new(TypeBParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeCObservation) DeepCopyInto(out *TypeCObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeCObservation.
func (in *TypeCObservation) DeepCopy() *TypeCObservation {
	if in == nil {
		return nil
	}
	out := new(TypeCObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeCParameters) DeepCopyInto(out *TypeCParameters) {
	*out = *in
	if in.BackupSecretKey != nil {
		in, out := &in.BackupSecretKey, &out.BackupSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.FileExtensions != nil {
		in, out := &in.FileExtensions, &out.FileExtensions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeCParameters.
func (in *TypeCParameters) DeepCopy() *TypeCParameters {
	if in == nil {
		return nil
	}
	out := new(TypeCParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeDObservation) DeepCopyInto(out *TypeDObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeDObservation.
func (in *TypeDObservation) DeepCopy() *TypeDObservation {
	if in == nil {
		return nil
	}
	out := new(TypeDObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeDParameters) DeepCopyInto(out *TypeDParameters) {
	*out = *in
	if in.BackupSecretKey != nil {
		in, out := &in.BackupSecretKey, &out.BackupSecretKey
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(float64)
		**out = **in
	}
	if in.FileExtensions != nil {
		in, out := &in.FileExtensions, &out.FileExtensions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeParam != nil {
		in, out := &in.TimeParam, &out.TimeParam
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeDParameters.
func (in *TypeDParameters) DeepCopy() *TypeDParameters {
	if in == nil {
		return nil
	}
	out := new(TypeDParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPurge) DeepCopyInto(out *UrlPurge) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPurge.
func (in *UrlPurge) DeepCopy() *UrlPurge {
	if in == nil {
		return nil
	}
	out := new(UrlPurge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UrlPurge) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPurgeList) DeepCopyInto(out *UrlPurgeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UrlPurge, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPurgeList.
func (in *UrlPurgeList) DeepCopy() *UrlPurgeList {
	if in == nil {
		return nil
	}
	out := new(UrlPurgeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UrlPurgeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPurgeObservation) DeepCopyInto(out *UrlPurgeObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PurgeHistory != nil {
		in, out := &in.PurgeHistory, &out.PurgeHistory
		*out = make([]PurgeHistoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPurgeObservation.
func (in *UrlPurgeObservation) DeepCopy() *UrlPurgeObservation {
	if in == nil {
		return nil
	}
	out := new(UrlPurgeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPurgeParameters) DeepCopyInto(out *UrlPurgeParameters) {
	*out = *in
	if in.Area != nil {
		in, out := &in.Area, &out.Area
		*out = new(string)
		**out = **in
	}
	if in.Redo != nil {
		in, out := &in.Redo, &out.Redo
		*out = new(float64)
		**out = **in
	}
	if in.URLEncode != nil {
		in, out := &in.URLEncode, &out.URLEncode
		*out = new(bool)
		**out = **in
	}
	if in.Urls != nil {
		in, out := &in.Urls, &out.Urls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPurgeParameters.
func (in *UrlPurgeParameters) DeepCopy() *UrlPurgeParameters {
	if in == nil {
		return nil
	}
	out := new(UrlPurgeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPurgeSpec) DeepCopyInto(out *UrlPurgeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPurgeSpec.
func (in *UrlPurgeSpec) DeepCopy() *UrlPurgeSpec {
	if in == nil {
		return nil
	}
	out := new(UrlPurgeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPurgeStatus) DeepCopyInto(out *UrlPurgeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPurgeStatus.
func (in *UrlPurgeStatus) DeepCopy() *UrlPurgeStatus {
	if in == nil {
		return nil
	}
	out := new(UrlPurgeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPush) DeepCopyInto(out *UrlPush) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPush.
func (in *UrlPush) DeepCopy() *UrlPush {
	if in == nil {
		return nil
	}
	out := new(UrlPush)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UrlPush) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPushList) DeepCopyInto(out *UrlPushList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UrlPush, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPushList.
func (in *UrlPushList) DeepCopy() *UrlPushList {
	if in == nil {
		return nil
	}
	out := new(UrlPushList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UrlPushList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPushObservation) DeepCopyInto(out *UrlPushObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PushHistory != nil {
		in, out := &in.PushHistory, &out.PushHistory
		*out = make([]PushHistoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPushObservation.
func (in *UrlPushObservation) DeepCopy() *UrlPushObservation {
	if in == nil {
		return nil
	}
	out := new(UrlPushObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPushParameters) DeepCopyInto(out *UrlPushParameters) {
	*out = *in
	if in.Area != nil {
		in, out := &in.Area, &out.Area
		*out = new(string)
		**out = **in
	}
	if in.Layer != nil {
		in, out := &in.Layer, &out.Layer
		*out = new(string)
		**out = **in
	}
	if in.ParseM3U8 != nil {
		in, out := &in.ParseM3U8, &out.ParseM3U8
		*out = new(bool)
		**out = **in
	}
	if in.Redo != nil {
		in, out := &in.Redo, &out.Redo
		*out = new(float64)
		**out = **in
	}
	if in.Urls != nil {
		in, out := &in.Urls, &out.Urls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UserAgent != nil {
		in, out := &in.UserAgent, &out.UserAgent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPushParameters.
func (in *UrlPushParameters) DeepCopy() *UrlPushParameters {
	if in == nil {
		return nil
	}
	out := new(UrlPushParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPushSpec) DeepCopyInto(out *UrlPushSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPushSpec.
func (in *UrlPushSpec) DeepCopy() *UrlPushSpec {
	if in == nil {
		return nil
	}
	out := new(UrlPushSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UrlPushStatus) DeepCopyInto(out *UrlPushStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UrlPushStatus.
func (in *UrlPushStatus) DeepCopy() *UrlPushStatus {
	if in == nil {
		return nil
	}
	out := new(UrlPushStatus)
	in.DeepCopyInto(out)
	return out
}
