// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AutoscalerInitParameters struct {

	// name.
	// name.
	AutoscalerName *string `json:"autoscalerName,omitempty" tf:"autoscaler_name,omitempty"`

	// scaler based on cron configuration.
	// scaler based on cron configuration.
	CronHorizontalAutoscaler []CronHorizontalAutoscalerInitParameters `json:"cronHorizontalAutoscaler,omitempty" tf:"cron_horizontal_autoscaler,omitempty"`

	// description.
	// description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// enable AutoScaler.
	// enable AutoScaler.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// scaler based on metrics.
	// scaler based on metrics.
	HorizontalAutoscaler []HorizontalAutoscalerInitParameters `json:"horizontalAutoscaler,omitempty" tf:"horizontal_autoscaler,omitempty"`

	// maximal replica number.
	// maximal replica number.
	MaxReplicas *float64 `json:"maxReplicas,omitempty" tf:"max_replicas,omitempty"`

	// minimal replica number.
	// minimal replica number.
	MinReplicas *float64 `json:"minReplicas,omitempty" tf:"min_replicas,omitempty"`
}

type AutoscalerObservation struct {

	// name.
	// name.
	AutoscalerName *string `json:"autoscalerName,omitempty" tf:"autoscaler_name,omitempty"`

	// scaler based on cron configuration.
	// scaler based on cron configuration.
	CronHorizontalAutoscaler []CronHorizontalAutoscalerObservation `json:"cronHorizontalAutoscaler,omitempty" tf:"cron_horizontal_autoscaler,omitempty"`

	// description.
	// description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// enable AutoScaler.
	// enable AutoScaler.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// scaler based on metrics.
	// scaler based on metrics.
	HorizontalAutoscaler []HorizontalAutoscalerObservation `json:"horizontalAutoscaler,omitempty" tf:"horizontal_autoscaler,omitempty"`

	// maximal replica number.
	// maximal replica number.
	MaxReplicas *float64 `json:"maxReplicas,omitempty" tf:"max_replicas,omitempty"`

	// minimal replica number.
	// minimal replica number.
	MinReplicas *float64 `json:"minReplicas,omitempty" tf:"min_replicas,omitempty"`
}

type AutoscalerParameters struct {

	// name.
	// name.
	// +kubebuilder:validation:Optional
	AutoscalerName *string `json:"autoscalerName" tf:"autoscaler_name,omitempty"`

	// scaler based on cron configuration.
	// scaler based on cron configuration.
	// +kubebuilder:validation:Optional
	CronHorizontalAutoscaler []CronHorizontalAutoscalerParameters `json:"cronHorizontalAutoscaler,omitempty" tf:"cron_horizontal_autoscaler,omitempty"`

	// description.
	// description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// enable AutoScaler.
	// enable AutoScaler.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// scaler based on metrics.
	// scaler based on metrics.
	// +kubebuilder:validation:Optional
	HorizontalAutoscaler []HorizontalAutoscalerParameters `json:"horizontalAutoscaler,omitempty" tf:"horizontal_autoscaler,omitempty"`

	// maximal replica number.
	// maximal replica number.
	// +kubebuilder:validation:Optional
	MaxReplicas *float64 `json:"maxReplicas" tf:"max_replicas,omitempty"`

	// minimal replica number.
	// minimal replica number.
	// +kubebuilder:validation:Optional
	MinReplicas *float64 `json:"minReplicas" tf:"min_replicas,omitempty"`
}

type CronHorizontalAutoscalerInitParameters struct {

	// enable AutoScaler.
	// enable scaler.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// name.
	// name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// period.
	// period.
	Period *string `json:"period,omitempty" tf:"period,omitempty"`

	// priority.
	// priority.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// schedule payload.
	// schedule payload.
	Schedules []SchedulesInitParameters `json:"schedules,omitempty" tf:"schedules,omitempty"`
}

type CronHorizontalAutoscalerObservation struct {

	// enable AutoScaler.
	// enable scaler.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// name.
	// name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// period.
	// period.
	Period *string `json:"period,omitempty" tf:"period,omitempty"`

	// priority.
	// priority.
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// schedule payload.
	// schedule payload.
	Schedules []SchedulesObservation `json:"schedules,omitempty" tf:"schedules,omitempty"`
}

type CronHorizontalAutoscalerParameters struct {

	// enable AutoScaler.
	// enable scaler.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// name.
	// name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// period.
	// period.
	// +kubebuilder:validation:Optional
	Period *string `json:"period" tf:"period,omitempty"`

	// priority.
	// priority.
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority" tf:"priority,omitempty"`

	// schedule payload.
	// schedule payload.
	// +kubebuilder:validation:Optional
	Schedules []SchedulesParameters `json:"schedules" tf:"schedules,omitempty"`
}

type HorizontalAutoscalerInitParameters struct {

	// enable AutoScaler.
	// enable scaler.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// maximal replica number.
	// maximal replica number.
	MaxReplicas *float64 `json:"maxReplicas,omitempty" tf:"max_replicas,omitempty"`

	// metric name.
	// metric name.
	Metrics *string `json:"metrics,omitempty" tf:"metrics,omitempty"`

	// minimal replica number.
	// minimal replica number.
	MinReplicas *float64 `json:"minReplicas,omitempty" tf:"min_replicas,omitempty"`

	// metric threshold.
	// metric threshold.
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type HorizontalAutoscalerObservation struct {

	// enable AutoScaler.
	// enable scaler.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// maximal replica number.
	// maximal replica number.
	MaxReplicas *float64 `json:"maxReplicas,omitempty" tf:"max_replicas,omitempty"`

	// metric name.
	// metric name.
	Metrics *string `json:"metrics,omitempty" tf:"metrics,omitempty"`

	// minimal replica number.
	// minimal replica number.
	MinReplicas *float64 `json:"minReplicas,omitempty" tf:"min_replicas,omitempty"`

	// metric threshold.
	// metric threshold.
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold,omitempty"`
}

type HorizontalAutoscalerParameters struct {

	// enable AutoScaler.
	// enable scaler.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// maximal replica number.
	// maximal replica number.
	// +kubebuilder:validation:Optional
	MaxReplicas *float64 `json:"maxReplicas" tf:"max_replicas,omitempty"`

	// metric name.
	// metric name.
	// +kubebuilder:validation:Optional
	Metrics *string `json:"metrics" tf:"metrics,omitempty"`

	// minimal replica number.
	// minimal replica number.
	// +kubebuilder:validation:Optional
	MinReplicas *float64 `json:"minReplicas" tf:"min_replicas,omitempty"`

	// metric threshold.
	// metric threshold.
	// +kubebuilder:validation:Optional
	Threshold *float64 `json:"threshold" tf:"threshold,omitempty"`
}

type ScaleRuleInitParameters struct {

	// .
	// .
	Autoscaler []AutoscalerInitParameters `json:"autoscaler,omitempty" tf:"autoscaler,omitempty"`
}

type ScaleRuleObservation struct {

	// application ID.
	// application ID.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// .
	// .
	Autoscaler []AutoscalerObservation `json:"autoscaler,omitempty" tf:"autoscaler,omitempty"`

	// environment ID.
	// environment ID.
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// application ID, which is combined by environment ID and application ID, like en-o5edaepv#app-3j29aa2p.
	// application ID, which is combined by environment ID and application ID, like `en-o5edaepv#app-3j29aa2p`.
	WorkloadID *string `json:"workloadId,omitempty" tf:"workload_id,omitempty"`
}

type ScaleRuleParameters struct {

	// application ID.
	// application ID.
	// +crossplane:generate:reference:type=Application
	// +kubebuilder:validation:Optional
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// Reference to a Application to populate applicationId.
	// +kubebuilder:validation:Optional
	ApplicationIDRef *v1.Reference `json:"applicationIdRef,omitempty" tf:"-"`

	// Selector for a Application to populate applicationId.
	// +kubebuilder:validation:Optional
	ApplicationIDSelector *v1.Selector `json:"applicationIdSelector,omitempty" tf:"-"`

	// .
	// .
	// +kubebuilder:validation:Optional
	Autoscaler []AutoscalerParameters `json:"autoscaler,omitempty" tf:"autoscaler,omitempty"`

	// environment ID.
	// environment ID.
	// +crossplane:generate:reference:type=Environment
	// +kubebuilder:validation:Optional
	EnvironmentID *string `json:"environmentId,omitempty" tf:"environment_id,omitempty"`

	// Reference to a Environment to populate environmentId.
	// +kubebuilder:validation:Optional
	EnvironmentIDRef *v1.Reference `json:"environmentIdRef,omitempty" tf:"-"`

	// Selector for a Environment to populate environmentId.
	// +kubebuilder:validation:Optional
	EnvironmentIDSelector *v1.Selector `json:"environmentIdSelector,omitempty" tf:"-"`

	// application ID, which is combined by environment ID and application ID, like en-o5edaepv#app-3j29aa2p.
	// application ID, which is combined by environment ID and application ID, like `en-o5edaepv#app-3j29aa2p`.
	// +crossplane:generate:reference:type=Workload
	// +kubebuilder:validation:Optional
	WorkloadID *string `json:"workloadId,omitempty" tf:"workload_id,omitempty"`

	// Reference to a Workload to populate workloadId.
	// +kubebuilder:validation:Optional
	WorkloadIDRef *v1.Reference `json:"workloadIdRef,omitempty" tf:"-"`

	// Selector for a Workload to populate workloadId.
	// +kubebuilder:validation:Optional
	WorkloadIDSelector *v1.Selector `json:"workloadIdSelector,omitempty" tf:"-"`
}

type SchedulesInitParameters struct {

	// start time.
	// start time.
	StartAt *string `json:"startAt,omitempty" tf:"start_at,omitempty"`

	// target replica number.
	// target replica number.
	TargetReplicas *float64 `json:"targetReplicas,omitempty" tf:"target_replicas,omitempty"`
}

type SchedulesObservation struct {

	// start time.
	// start time.
	StartAt *string `json:"startAt,omitempty" tf:"start_at,omitempty"`

	// target replica number.
	// target replica number.
	TargetReplicas *float64 `json:"targetReplicas,omitempty" tf:"target_replicas,omitempty"`
}

type SchedulesParameters struct {

	// start time.
	// start time.
	// +kubebuilder:validation:Optional
	StartAt *string `json:"startAt" tf:"start_at,omitempty"`

	// target replica number.
	// target replica number.
	// +kubebuilder:validation:Optional
	TargetReplicas *float64 `json:"targetReplicas" tf:"target_replicas,omitempty"`
}

// ScaleRuleSpec defines the desired state of ScaleRule
type ScaleRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ScaleRuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ScaleRuleInitParameters `json:"initProvider,omitempty"`
}

// ScaleRuleStatus defines the observed state of ScaleRule.
type ScaleRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ScaleRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ScaleRule is the Schema for the ScaleRules API. Provides a resource to create a tem scaleRule
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ScaleRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.autoscaler) || (has(self.initProvider) && has(self.initProvider.autoscaler))",message="spec.forProvider.autoscaler is a required parameter"
	Spec   ScaleRuleSpec   `json:"spec"`
	Status ScaleRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ScaleRuleList contains a list of ScaleRules
type ScaleRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ScaleRule `json:"items"`
}

// Repository type metadata.
var (
	ScaleRule_Kind             = "ScaleRule"
	ScaleRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ScaleRule_Kind}.String()
	ScaleRule_KindAPIVersion   = ScaleRule_Kind + "." + CRDGroupVersion.String()
	ScaleRule_GroupVersionKind = CRDGroupVersion.WithKind(ScaleRule_Kind)
)

func init() {
	SchemeBuilder.Register(&ScaleRule{}, &ScaleRuleList{})
}
