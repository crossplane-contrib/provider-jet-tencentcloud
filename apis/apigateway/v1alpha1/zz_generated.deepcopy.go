//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIListInitParameters) DeepCopyInto(out *APIListInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIListInitParameters.
func (in *APIListInitParameters) DeepCopy() *APIListInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIListObservation) DeepCopyInto(out *APIListObservation) {
	*out = *in
	if in.APIDesc != nil {
		in, out := &in.APIDesc, &out.APIDesc
		*out = new(string)
		**out = **in
	}
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIName != nil {
		in, out := &in.APIName, &out.APIName
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIListObservation.
func (in *APIListObservation) DeepCopy() *APIListObservation {
	if in == nil {
		return nil
	}
	out := new(APIListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIListParameters) DeepCopyInto(out *APIListParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIListParameters.
func (in *APIListParameters) DeepCopy() *APIListParameters {
	if in == nil {
		return nil
	}
	out := new(APIListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Api) DeepCopyInto(out *Api) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Api.
func (in *Api) DeepCopy() *Api {
	if in == nil {
		return nil
	}
	out := new(Api)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Api) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiInitParameters) DeepCopyInto(out *ApiInitParameters) {
	*out = *in
	if in.APIBusinessType != nil {
		in, out := &in.APIBusinessType, &out.APIBusinessType
		*out = new(string)
		**out = **in
	}
	if in.APIDesc != nil {
		in, out := &in.APIDesc, &out.APIDesc
		*out = new(string)
		**out = **in
	}
	if in.APIName != nil {
		in, out := &in.APIName, &out.APIName
		*out = new(string)
		**out = **in
	}
	if in.APIType != nil {
		in, out := &in.APIType, &out.APIType
		*out = new(string)
		**out = **in
	}
	if in.AuthRelationAPIID != nil {
		in, out := &in.AuthRelationAPIID, &out.AuthRelationAPIID
		*out = new(string)
		**out = **in
	}
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ConstantParameters != nil {
		in, out := &in.ConstantParameters, &out.ConstantParameters
		*out = make([]ConstantParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EiamAppID != nil {
		in, out := &in.EiamAppID, &out.EiamAppID
		*out = new(string)
		**out = **in
	}
	if in.EiamAppType != nil {
		in, out := &in.EiamAppType, &out.EiamAppType
		*out = new(string)
		**out = **in
	}
	if in.EiamAuthType != nil {
		in, out := &in.EiamAuthType, &out.EiamAuthType
		*out = new(string)
		**out = **in
	}
	if in.EnableCors != nil {
		in, out := &in.EnableCors, &out.EnableCors
		*out = new(bool)
		**out = **in
	}
	if in.EventBusID != nil {
		in, out := &in.EventBusID, &out.EventBusID
		*out = new(string)
		**out = **in
	}
	if in.IsBase64Encoded != nil {
		in, out := &in.IsBase64Encoded, &out.IsBase64Encoded
		*out = new(bool)
		**out = **in
	}
	if in.IsDebugAfterCharge != nil {
		in, out := &in.IsDebugAfterCharge, &out.IsDebugAfterCharge
		*out = new(bool)
		**out = **in
	}
	if in.IsDeleteResponseErrorCodes != nil {
		in, out := &in.IsDeleteResponseErrorCodes, &out.IsDeleteResponseErrorCodes
		*out = new(bool)
		**out = **in
	}
	if in.MicroServices != nil {
		in, out := &in.MicroServices, &out.MicroServices
		*out = make([]MicroServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OauthConfig != nil {
		in, out := &in.OauthConfig, &out.OauthConfig
		*out = make([]OauthConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.PreLimit != nil {
		in, out := &in.PreLimit, &out.PreLimit
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ReleaseLimit != nil {
		in, out := &in.ReleaseLimit, &out.ReleaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.RequestConfigMethod != nil {
		in, out := &in.RequestConfigMethod, &out.RequestConfigMethod
		*out = new(string)
		**out = **in
	}
	if in.RequestConfigPath != nil {
		in, out := &in.RequestConfigPath, &out.RequestConfigPath
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make([]RequestParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseErrorCodes != nil {
		in, out := &in.ResponseErrorCodes, &out.ResponseErrorCodes
		*out = make([]ResponseErrorCodesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseFailExample != nil {
		in, out := &in.ResponseFailExample, &out.ResponseFailExample
		*out = new(string)
		**out = **in
	}
	if in.ResponseSuccessExample != nil {
		in, out := &in.ResponseSuccessExample, &out.ResponseSuccessExample
		*out = new(string)
		**out = **in
	}
	if in.ResponseType != nil {
		in, out := &in.ResponseType, &out.ResponseType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigCosConfig != nil {
		in, out := &in.ServiceConfigCosConfig, &out.ServiceConfigCosConfig
		*out = make([]ServiceConfigCosConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceConfigMethod != nil {
		in, out := &in.ServiceConfigMethod, &out.ServiceConfigMethod
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigMockReturnMessage != nil {
		in, out := &in.ServiceConfigMockReturnMessage, &out.ServiceConfigMockReturnMessage
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigPath != nil {
		in, out := &in.ServiceConfigPath, &out.ServiceConfigPath
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigProduct != nil {
		in, out := &in.ServiceConfigProduct, &out.ServiceConfigProduct
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionName != nil {
		in, out := &in.ServiceConfigScfFunctionName, &out.ServiceConfigScfFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionNamespace != nil {
		in, out := &in.ServiceConfigScfFunctionNamespace, &out.ServiceConfigScfFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionQualifier != nil {
		in, out := &in.ServiceConfigScfFunctionQualifier, &out.ServiceConfigScfFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionType != nil {
		in, out := &in.ServiceConfigScfFunctionType, &out.ServiceConfigScfFunctionType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfIsIntegratedResponse != nil {
		in, out := &in.ServiceConfigScfIsIntegratedResponse, &out.ServiceConfigScfIsIntegratedResponse
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConfigTimeout != nil {
		in, out := &in.ServiceConfigTimeout, &out.ServiceConfigTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ServiceConfigType != nil {
		in, out := &in.ServiceConfigType, &out.ServiceConfigType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigURL != nil {
		in, out := &in.ServiceConfigURL, &out.ServiceConfigURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigUpstreamID != nil {
		in, out := &in.ServiceConfigUpstreamID, &out.ServiceConfigUpstreamID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigVPCID != nil {
		in, out := &in.ServiceConfigVPCID, &out.ServiceConfigVPCID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionName, &out.ServiceConfigWebsocketCleanupFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionNamespace, &out.ServiceConfigWebsocketCleanupFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionQualifier, &out.ServiceConfigWebsocketCleanupFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionName, &out.ServiceConfigWebsocketRegisterFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionNamespace, &out.ServiceConfigWebsocketRegisterFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionQualifier, &out.ServiceConfigWebsocketRegisterFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionName, &out.ServiceConfigWebsocketTransportFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionNamespace, &out.ServiceConfigWebsocketTransportFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionQualifier, &out.ServiceConfigWebsocketTransportFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceParameters != nil {
		in, out := &in.ServiceParameters, &out.ServiceParameters
		*out = make([]ServiceParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceTsfHealthCheckConf != nil {
		in, out := &in.ServiceTsfHealthCheckConf, &out.ServiceTsfHealthCheckConf
		*out = make([]ServiceTsfHealthCheckConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceTsfLoadBalanceConf != nil {
		in, out := &in.ServiceTsfLoadBalanceConf, &out.ServiceTsfLoadBalanceConf
		*out = make([]ServiceTsfLoadBalanceConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetNamespaceID != nil {
		in, out := &in.TargetNamespaceID, &out.TargetNamespaceID
		*out = new(string)
		**out = **in
	}
	if in.TargetServices != nil {
		in, out := &in.TargetServices, &out.TargetServices
		*out = make([]TargetServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetServicesHealthCheckConf != nil {
		in, out := &in.TargetServicesHealthCheckConf, &out.TargetServicesHealthCheckConf
		*out = make([]TargetServicesHealthCheckConfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetServicesLoadBalanceConf != nil {
		in, out := &in.TargetServicesLoadBalanceConf, &out.TargetServicesLoadBalanceConf
		*out = new(float64)
		**out = **in
	}
	if in.TestLimit != nil {
		in, out := &in.TestLimit, &out.TestLimit
		*out = new(float64)
		**out = **in
	}
	if in.TokenTimeout != nil {
		in, out := &in.TokenTimeout, &out.TokenTimeout
		*out = new(float64)
		**out = **in
	}
	if in.UserType != nil {
		in, out := &in.UserType, &out.UserType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiInitParameters.
func (in *ApiInitParameters) DeepCopy() *ApiInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKey) DeepCopyInto(out *ApiKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKey.
func (in *ApiKey) DeepCopy() *ApiKey {
	if in == nil {
		return nil
	}
	out := new(ApiKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApiKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyAttachment) DeepCopyInto(out *ApiKeyAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyAttachment.
func (in *ApiKeyAttachment) DeepCopy() *ApiKeyAttachment {
	if in == nil {
		return nil
	}
	out := new(ApiKeyAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApiKeyAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyAttachmentInitParameters) DeepCopyInto(out *ApiKeyAttachmentInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyAttachmentInitParameters.
func (in *ApiKeyAttachmentInitParameters) DeepCopy() *ApiKeyAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApiKeyAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyAttachmentList) DeepCopyInto(out *ApiKeyAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApiKeyAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyAttachmentList.
func (in *ApiKeyAttachmentList) DeepCopy() *ApiKeyAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ApiKeyAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApiKeyAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyAttachmentObservation) DeepCopyInto(out *ApiKeyAttachmentObservation) {
	*out = *in
	if in.APIKeyID != nil {
		in, out := &in.APIKeyID, &out.APIKeyID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanID != nil {
		in, out := &in.UsagePlanID, &out.UsagePlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyAttachmentObservation.
func (in *ApiKeyAttachmentObservation) DeepCopy() *ApiKeyAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(ApiKeyAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyAttachmentParameters) DeepCopyInto(out *ApiKeyAttachmentParameters) {
	*out = *in
	if in.APIKeyID != nil {
		in, out := &in.APIKeyID, &out.APIKeyID
		*out = new(string)
		**out = **in
	}
	if in.APIKeyIDRef != nil {
		in, out := &in.APIKeyIDRef, &out.APIKeyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIKeyIDSelector != nil {
		in, out := &in.APIKeyIDSelector, &out.APIKeyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UsagePlanID != nil {
		in, out := &in.UsagePlanID, &out.UsagePlanID
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanIDRef != nil {
		in, out := &in.UsagePlanIDRef, &out.UsagePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsagePlanIDSelector != nil {
		in, out := &in.UsagePlanIDSelector, &out.UsagePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyAttachmentParameters.
func (in *ApiKeyAttachmentParameters) DeepCopy() *ApiKeyAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(ApiKeyAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyAttachmentSpec) DeepCopyInto(out *ApiKeyAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyAttachmentSpec.
func (in *ApiKeyAttachmentSpec) DeepCopy() *ApiKeyAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ApiKeyAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyAttachmentStatus) DeepCopyInto(out *ApiKeyAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyAttachmentStatus.
func (in *ApiKeyAttachmentStatus) DeepCopy() *ApiKeyAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ApiKeyAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyInitParameters) DeepCopyInto(out *ApiKeyInitParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKeySecret != nil {
		in, out := &in.AccessKeySecret, &out.AccessKeySecret
		*out = new(string)
		**out = **in
	}
	if in.AccessKeyType != nil {
		in, out := &in.AccessKeyType, &out.AccessKeyType
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyInitParameters.
func (in *ApiKeyInitParameters) DeepCopy() *ApiKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApiKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyList) DeepCopyInto(out *ApiKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApiKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyList.
func (in *ApiKeyList) DeepCopy() *ApiKeyList {
	if in == nil {
		return nil
	}
	out := new(ApiKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApiKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyObservation) DeepCopyInto(out *ApiKeyObservation) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKeySecret != nil {
		in, out := &in.AccessKeySecret, &out.AccessKeySecret
		*out = new(string)
		**out = **in
	}
	if in.AccessKeyType != nil {
		in, out := &in.AccessKeyType, &out.AccessKeyType
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ModifyTime != nil {
		in, out := &in.ModifyTime, &out.ModifyTime
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyObservation.
func (in *ApiKeyObservation) DeepCopy() *ApiKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ApiKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyParameters) DeepCopyInto(out *ApiKeyParameters) {
	*out = *in
	if in.AccessKeyID != nil {
		in, out := &in.AccessKeyID, &out.AccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKeySecret != nil {
		in, out := &in.AccessKeySecret, &out.AccessKeySecret
		*out = new(string)
		**out = **in
	}
	if in.AccessKeyType != nil {
		in, out := &in.AccessKeyType, &out.AccessKeyType
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyParameters.
func (in *ApiKeyParameters) DeepCopy() *ApiKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ApiKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeySpec) DeepCopyInto(out *ApiKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeySpec.
func (in *ApiKeySpec) DeepCopy() *ApiKeySpec {
	if in == nil {
		return nil
	}
	out := new(ApiKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyStatus) DeepCopyInto(out *ApiKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyStatus.
func (in *ApiKeyStatus) DeepCopy() *ApiKeyStatus {
	if in == nil {
		return nil
	}
	out := new(ApiKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiList) DeepCopyInto(out *ApiList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Api, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiList.
func (in *ApiList) DeepCopy() *ApiList {
	if in == nil {
		return nil
	}
	out := new(ApiList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApiList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiObservation) DeepCopyInto(out *ApiObservation) {
	*out = *in
	if in.APIBusinessType != nil {
		in, out := &in.APIBusinessType, &out.APIBusinessType
		*out = new(string)
		**out = **in
	}
	if in.APIDesc != nil {
		in, out := &in.APIDesc, &out.APIDesc
		*out = new(string)
		**out = **in
	}
	if in.APIName != nil {
		in, out := &in.APIName, &out.APIName
		*out = new(string)
		**out = **in
	}
	if in.APIType != nil {
		in, out := &in.APIType, &out.APIType
		*out = new(string)
		**out = **in
	}
	if in.AuthRelationAPIID != nil {
		in, out := &in.AuthRelationAPIID, &out.AuthRelationAPIID
		*out = new(string)
		**out = **in
	}
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ConstantParameters != nil {
		in, out := &in.ConstantParameters, &out.ConstantParameters
		*out = make([]ConstantParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.EiamAppID != nil {
		in, out := &in.EiamAppID, &out.EiamAppID
		*out = new(string)
		**out = **in
	}
	if in.EiamAppType != nil {
		in, out := &in.EiamAppType, &out.EiamAppType
		*out = new(string)
		**out = **in
	}
	if in.EiamAuthType != nil {
		in, out := &in.EiamAuthType, &out.EiamAuthType
		*out = new(string)
		**out = **in
	}
	if in.EnableCors != nil {
		in, out := &in.EnableCors, &out.EnableCors
		*out = new(bool)
		**out = **in
	}
	if in.EventBusID != nil {
		in, out := &in.EventBusID, &out.EventBusID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsBase64Encoded != nil {
		in, out := &in.IsBase64Encoded, &out.IsBase64Encoded
		*out = new(bool)
		**out = **in
	}
	if in.IsDebugAfterCharge != nil {
		in, out := &in.IsDebugAfterCharge, &out.IsDebugAfterCharge
		*out = new(bool)
		**out = **in
	}
	if in.IsDeleteResponseErrorCodes != nil {
		in, out := &in.IsDeleteResponseErrorCodes, &out.IsDeleteResponseErrorCodes
		*out = new(bool)
		**out = **in
	}
	if in.MicroServices != nil {
		in, out := &in.MicroServices, &out.MicroServices
		*out = make([]MicroServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OauthConfig != nil {
		in, out := &in.OauthConfig, &out.OauthConfig
		*out = make([]OauthConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.PreLimit != nil {
		in, out := &in.PreLimit, &out.PreLimit
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ReleaseLimit != nil {
		in, out := &in.ReleaseLimit, &out.ReleaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.RequestConfigMethod != nil {
		in, out := &in.RequestConfigMethod, &out.RequestConfigMethod
		*out = new(string)
		**out = **in
	}
	if in.RequestConfigPath != nil {
		in, out := &in.RequestConfigPath, &out.RequestConfigPath
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make([]RequestParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseErrorCodes != nil {
		in, out := &in.ResponseErrorCodes, &out.ResponseErrorCodes
		*out = make([]ResponseErrorCodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseFailExample != nil {
		in, out := &in.ResponseFailExample, &out.ResponseFailExample
		*out = new(string)
		**out = **in
	}
	if in.ResponseSuccessExample != nil {
		in, out := &in.ResponseSuccessExample, &out.ResponseSuccessExample
		*out = new(string)
		**out = **in
	}
	if in.ResponseType != nil {
		in, out := &in.ResponseType, &out.ResponseType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigCosConfig != nil {
		in, out := &in.ServiceConfigCosConfig, &out.ServiceConfigCosConfig
		*out = make([]ServiceConfigCosConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceConfigMethod != nil {
		in, out := &in.ServiceConfigMethod, &out.ServiceConfigMethod
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigMockReturnMessage != nil {
		in, out := &in.ServiceConfigMockReturnMessage, &out.ServiceConfigMockReturnMessage
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigPath != nil {
		in, out := &in.ServiceConfigPath, &out.ServiceConfigPath
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigProduct != nil {
		in, out := &in.ServiceConfigProduct, &out.ServiceConfigProduct
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionName != nil {
		in, out := &in.ServiceConfigScfFunctionName, &out.ServiceConfigScfFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionNamespace != nil {
		in, out := &in.ServiceConfigScfFunctionNamespace, &out.ServiceConfigScfFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionQualifier != nil {
		in, out := &in.ServiceConfigScfFunctionQualifier, &out.ServiceConfigScfFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionType != nil {
		in, out := &in.ServiceConfigScfFunctionType, &out.ServiceConfigScfFunctionType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfIsIntegratedResponse != nil {
		in, out := &in.ServiceConfigScfIsIntegratedResponse, &out.ServiceConfigScfIsIntegratedResponse
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConfigTimeout != nil {
		in, out := &in.ServiceConfigTimeout, &out.ServiceConfigTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ServiceConfigType != nil {
		in, out := &in.ServiceConfigType, &out.ServiceConfigType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigURL != nil {
		in, out := &in.ServiceConfigURL, &out.ServiceConfigURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigUpstreamID != nil {
		in, out := &in.ServiceConfigUpstreamID, &out.ServiceConfigUpstreamID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigVPCID != nil {
		in, out := &in.ServiceConfigVPCID, &out.ServiceConfigVPCID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionName, &out.ServiceConfigWebsocketCleanupFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionNamespace, &out.ServiceConfigWebsocketCleanupFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionQualifier, &out.ServiceConfigWebsocketCleanupFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionName, &out.ServiceConfigWebsocketRegisterFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionNamespace, &out.ServiceConfigWebsocketRegisterFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionQualifier, &out.ServiceConfigWebsocketRegisterFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionName, &out.ServiceConfigWebsocketTransportFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionNamespace, &out.ServiceConfigWebsocketTransportFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionQualifier, &out.ServiceConfigWebsocketTransportFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceParameters != nil {
		in, out := &in.ServiceParameters, &out.ServiceParameters
		*out = make([]ServiceParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceTsfHealthCheckConf != nil {
		in, out := &in.ServiceTsfHealthCheckConf, &out.ServiceTsfHealthCheckConf
		*out = make([]ServiceTsfHealthCheckConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceTsfLoadBalanceConf != nil {
		in, out := &in.ServiceTsfLoadBalanceConf, &out.ServiceTsfLoadBalanceConf
		*out = make([]ServiceTsfLoadBalanceConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetNamespaceID != nil {
		in, out := &in.TargetNamespaceID, &out.TargetNamespaceID
		*out = new(string)
		**out = **in
	}
	if in.TargetServices != nil {
		in, out := &in.TargetServices, &out.TargetServices
		*out = make([]TargetServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetServicesHealthCheckConf != nil {
		in, out := &in.TargetServicesHealthCheckConf, &out.TargetServicesHealthCheckConf
		*out = make([]TargetServicesHealthCheckConfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetServicesLoadBalanceConf != nil {
		in, out := &in.TargetServicesLoadBalanceConf, &out.TargetServicesLoadBalanceConf
		*out = new(float64)
		**out = **in
	}
	if in.TestLimit != nil {
		in, out := &in.TestLimit, &out.TestLimit
		*out = new(float64)
		**out = **in
	}
	if in.TokenTimeout != nil {
		in, out := &in.TokenTimeout, &out.TokenTimeout
		*out = new(float64)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.UserType != nil {
		in, out := &in.UserType, &out.UserType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiObservation.
func (in *ApiObservation) DeepCopy() *ApiObservation {
	if in == nil {
		return nil
	}
	out := new(ApiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiParameters) DeepCopyInto(out *ApiParameters) {
	*out = *in
	if in.APIBusinessType != nil {
		in, out := &in.APIBusinessType, &out.APIBusinessType
		*out = new(string)
		**out = **in
	}
	if in.APIDesc != nil {
		in, out := &in.APIDesc, &out.APIDesc
		*out = new(string)
		**out = **in
	}
	if in.APIName != nil {
		in, out := &in.APIName, &out.APIName
		*out = new(string)
		**out = **in
	}
	if in.APIType != nil {
		in, out := &in.APIType, &out.APIType
		*out = new(string)
		**out = **in
	}
	if in.AuthRelationAPIID != nil {
		in, out := &in.AuthRelationAPIID, &out.AuthRelationAPIID
		*out = new(string)
		**out = **in
	}
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ConstantParameters != nil {
		in, out := &in.ConstantParameters, &out.ConstantParameters
		*out = make([]ConstantParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EiamAppID != nil {
		in, out := &in.EiamAppID, &out.EiamAppID
		*out = new(string)
		**out = **in
	}
	if in.EiamAppType != nil {
		in, out := &in.EiamAppType, &out.EiamAppType
		*out = new(string)
		**out = **in
	}
	if in.EiamAuthType != nil {
		in, out := &in.EiamAuthType, &out.EiamAuthType
		*out = new(string)
		**out = **in
	}
	if in.EnableCors != nil {
		in, out := &in.EnableCors, &out.EnableCors
		*out = new(bool)
		**out = **in
	}
	if in.EventBusID != nil {
		in, out := &in.EventBusID, &out.EventBusID
		*out = new(string)
		**out = **in
	}
	if in.IsBase64Encoded != nil {
		in, out := &in.IsBase64Encoded, &out.IsBase64Encoded
		*out = new(bool)
		**out = **in
	}
	if in.IsDebugAfterCharge != nil {
		in, out := &in.IsDebugAfterCharge, &out.IsDebugAfterCharge
		*out = new(bool)
		**out = **in
	}
	if in.IsDeleteResponseErrorCodes != nil {
		in, out := &in.IsDeleteResponseErrorCodes, &out.IsDeleteResponseErrorCodes
		*out = new(bool)
		**out = **in
	}
	if in.MicroServices != nil {
		in, out := &in.MicroServices, &out.MicroServices
		*out = make([]MicroServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OauthConfig != nil {
		in, out := &in.OauthConfig, &out.OauthConfig
		*out = make([]OauthConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.PreLimit != nil {
		in, out := &in.PreLimit, &out.PreLimit
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ReleaseLimit != nil {
		in, out := &in.ReleaseLimit, &out.ReleaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.RequestConfigMethod != nil {
		in, out := &in.RequestConfigMethod, &out.RequestConfigMethod
		*out = new(string)
		**out = **in
	}
	if in.RequestConfigPath != nil {
		in, out := &in.RequestConfigPath, &out.RequestConfigPath
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make([]RequestParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseErrorCodes != nil {
		in, out := &in.ResponseErrorCodes, &out.ResponseErrorCodes
		*out = make([]ResponseErrorCodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseFailExample != nil {
		in, out := &in.ResponseFailExample, &out.ResponseFailExample
		*out = new(string)
		**out = **in
	}
	if in.ResponseSuccessExample != nil {
		in, out := &in.ResponseSuccessExample, &out.ResponseSuccessExample
		*out = new(string)
		**out = **in
	}
	if in.ResponseType != nil {
		in, out := &in.ResponseType, &out.ResponseType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigCosConfig != nil {
		in, out := &in.ServiceConfigCosConfig, &out.ServiceConfigCosConfig
		*out = make([]ServiceConfigCosConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceConfigMethod != nil {
		in, out := &in.ServiceConfigMethod, &out.ServiceConfigMethod
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigMockReturnMessage != nil {
		in, out := &in.ServiceConfigMockReturnMessage, &out.ServiceConfigMockReturnMessage
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigPath != nil {
		in, out := &in.ServiceConfigPath, &out.ServiceConfigPath
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigProduct != nil {
		in, out := &in.ServiceConfigProduct, &out.ServiceConfigProduct
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionName != nil {
		in, out := &in.ServiceConfigScfFunctionName, &out.ServiceConfigScfFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionNamespace != nil {
		in, out := &in.ServiceConfigScfFunctionNamespace, &out.ServiceConfigScfFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionQualifier != nil {
		in, out := &in.ServiceConfigScfFunctionQualifier, &out.ServiceConfigScfFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfFunctionType != nil {
		in, out := &in.ServiceConfigScfFunctionType, &out.ServiceConfigScfFunctionType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigScfIsIntegratedResponse != nil {
		in, out := &in.ServiceConfigScfIsIntegratedResponse, &out.ServiceConfigScfIsIntegratedResponse
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConfigTimeout != nil {
		in, out := &in.ServiceConfigTimeout, &out.ServiceConfigTimeout
		*out = new(float64)
		**out = **in
	}
	if in.ServiceConfigType != nil {
		in, out := &in.ServiceConfigType, &out.ServiceConfigType
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigURL != nil {
		in, out := &in.ServiceConfigURL, &out.ServiceConfigURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigUpstreamID != nil {
		in, out := &in.ServiceConfigUpstreamID, &out.ServiceConfigUpstreamID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigVPCID != nil {
		in, out := &in.ServiceConfigVPCID, &out.ServiceConfigVPCID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionName, &out.ServiceConfigWebsocketCleanupFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionNamespace, &out.ServiceConfigWebsocketCleanupFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketCleanupFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketCleanupFunctionQualifier, &out.ServiceConfigWebsocketCleanupFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionName, &out.ServiceConfigWebsocketRegisterFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionNamespace, &out.ServiceConfigWebsocketRegisterFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketRegisterFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketRegisterFunctionQualifier, &out.ServiceConfigWebsocketRegisterFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionName != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionName, &out.ServiceConfigWebsocketTransportFunctionName
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionNamespace != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionNamespace, &out.ServiceConfigWebsocketTransportFunctionNamespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceConfigWebsocketTransportFunctionQualifier != nil {
		in, out := &in.ServiceConfigWebsocketTransportFunctionQualifier, &out.ServiceConfigWebsocketTransportFunctionQualifier
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceIDRef != nil {
		in, out := &in.ServiceIDRef, &out.ServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceIDSelector != nil {
		in, out := &in.ServiceIDSelector, &out.ServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceParameters != nil {
		in, out := &in.ServiceParameters, &out.ServiceParameters
		*out = make([]ServiceParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceTsfHealthCheckConf != nil {
		in, out := &in.ServiceTsfHealthCheckConf, &out.ServiceTsfHealthCheckConf
		*out = make([]ServiceTsfHealthCheckConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceTsfLoadBalanceConf != nil {
		in, out := &in.ServiceTsfLoadBalanceConf, &out.ServiceTsfLoadBalanceConf
		*out = make([]ServiceTsfLoadBalanceConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetNamespaceID != nil {
		in, out := &in.TargetNamespaceID, &out.TargetNamespaceID
		*out = new(string)
		**out = **in
	}
	if in.TargetServices != nil {
		in, out := &in.TargetServices, &out.TargetServices
		*out = make([]TargetServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetServicesHealthCheckConf != nil {
		in, out := &in.TargetServicesHealthCheckConf, &out.TargetServicesHealthCheckConf
		*out = make([]TargetServicesHealthCheckConfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetServicesLoadBalanceConf != nil {
		in, out := &in.TargetServicesLoadBalanceConf, &out.TargetServicesLoadBalanceConf
		*out = new(float64)
		**out = **in
	}
	if in.TestLimit != nil {
		in, out := &in.TestLimit, &out.TestLimit
		*out = new(float64)
		**out = **in
	}
	if in.TokenTimeout != nil {
		in, out := &in.TokenTimeout, &out.TokenTimeout
		*out = new(float64)
		**out = **in
	}
	if in.UserType != nil {
		in, out := &in.UserType, &out.UserType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiParameters.
func (in *ApiParameters) DeepCopy() *ApiParameters {
	if in == nil {
		return nil
	}
	out := new(ApiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiSpec) DeepCopyInto(out *ApiSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiSpec.
func (in *ApiSpec) DeepCopy() *ApiSpec {
	if in == nil {
		return nil
	}
	out := new(ApiSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiStatus) DeepCopyInto(out *ApiStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiStatus.
func (in *ApiStatus) DeepCopy() *ApiStatus {
	if in == nil {
		return nil
	}
	out := new(ApiStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachListInitParameters) DeepCopyInto(out *AttachListInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachListInitParameters.
func (in *AttachListInitParameters) DeepCopy() *AttachListInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachListObservation) DeepCopyInto(out *AttachListObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIName != nil {
		in, out := &in.APIName, &out.APIName
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.ModifyTime != nil {
		in, out := &in.ModifyTime, &out.ModifyTime
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachListObservation.
func (in *AttachListObservation) DeepCopy() *AttachListObservation {
	if in == nil {
		return nil
	}
	out := new(AttachListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachListParameters) DeepCopyInto(out *AttachListParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachListParameters.
func (in *AttachListParameters) DeepCopy() *AttachListParameters {
	if in == nil {
		return nil
	}
	out := new(AttachListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstantParametersInitParameters) DeepCopyInto(out *ConstantParametersInitParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstantParametersInitParameters.
func (in *ConstantParametersInitParameters) DeepCopy() *ConstantParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConstantParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstantParametersObservation) DeepCopyInto(out *ConstantParametersObservation) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstantParametersObservation.
func (in *ConstantParametersObservation) DeepCopy() *ConstantParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ConstantParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConstantParametersParameters) DeepCopyInto(out *ConstantParametersParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConstantParametersParameters.
func (in *ConstantParametersParameters) DeepCopy() *ConstantParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ConstantParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomain) DeepCopyInto(out *CustomDomain) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomain.
func (in *CustomDomain) DeepCopy() *CustomDomain {
	if in == nil {
		return nil
	}
	out := new(CustomDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomDomain) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainInitParameters) DeepCopyInto(out *CustomDomainInitParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.DefaultDomain != nil {
		in, out := &in.DefaultDomain, &out.DefaultDomain
		*out = new(string)
		**out = **in
	}
	if in.IsDefaultMapping != nil {
		in, out := &in.IsDefaultMapping, &out.IsDefaultMapping
		*out = new(bool)
		**out = **in
	}
	if in.IsForcedHTTPS != nil {
		in, out := &in.IsForcedHTTPS, &out.IsForcedHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.NetType != nil {
		in, out := &in.NetType, &out.NetType
		*out = new(string)
		**out = **in
	}
	if in.PathMappings != nil {
		in, out := &in.PathMappings, &out.PathMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SubDomain != nil {
		in, out := &in.SubDomain, &out.SubDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainInitParameters.
func (in *CustomDomainInitParameters) DeepCopy() *CustomDomainInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDomainInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainList) DeepCopyInto(out *CustomDomainList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainList.
func (in *CustomDomainList) DeepCopy() *CustomDomainList {
	if in == nil {
		return nil
	}
	out := new(CustomDomainList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomDomainList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainObservation) DeepCopyInto(out *CustomDomainObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.DefaultDomain != nil {
		in, out := &in.DefaultDomain, &out.DefaultDomain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefaultMapping != nil {
		in, out := &in.IsDefaultMapping, &out.IsDefaultMapping
		*out = new(bool)
		**out = **in
	}
	if in.IsForcedHTTPS != nil {
		in, out := &in.IsForcedHTTPS, &out.IsForcedHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.NetType != nil {
		in, out := &in.NetType, &out.NetType
		*out = new(string)
		**out = **in
	}
	if in.PathMappings != nil {
		in, out := &in.PathMappings, &out.PathMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(float64)
		**out = **in
	}
	if in.SubDomain != nil {
		in, out := &in.SubDomain, &out.SubDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainObservation.
func (in *CustomDomainObservation) DeepCopy() *CustomDomainObservation {
	if in == nil {
		return nil
	}
	out := new(CustomDomainObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainParameters) DeepCopyInto(out *CustomDomainParameters) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(string)
		**out = **in
	}
	if in.DefaultDomain != nil {
		in, out := &in.DefaultDomain, &out.DefaultDomain
		*out = new(string)
		**out = **in
	}
	if in.IsDefaultMapping != nil {
		in, out := &in.IsDefaultMapping, &out.IsDefaultMapping
		*out = new(bool)
		**out = **in
	}
	if in.IsForcedHTTPS != nil {
		in, out := &in.IsForcedHTTPS, &out.IsForcedHTTPS
		*out = new(bool)
		**out = **in
	}
	if in.NetType != nil {
		in, out := &in.NetType, &out.NetType
		*out = new(string)
		**out = **in
	}
	if in.PathMappings != nil {
		in, out := &in.PathMappings, &out.PathMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceIDRef != nil {
		in, out := &in.ServiceIDRef, &out.ServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceIDSelector != nil {
		in, out := &in.ServiceIDSelector, &out.ServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubDomain != nil {
		in, out := &in.SubDomain, &out.SubDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainParameters.
func (in *CustomDomainParameters) DeepCopy() *CustomDomainParameters {
	if in == nil {
		return nil
	}
	out := new(CustomDomainParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainSpec) DeepCopyInto(out *CustomDomainSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainSpec.
func (in *CustomDomainSpec) DeepCopy() *CustomDomainSpec {
	if in == nil {
		return nil
	}
	out := new(CustomDomainSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomDomainStatus) DeepCopyInto(out *CustomDomainStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomDomainStatus.
func (in *CustomDomainStatus) DeepCopy() *CustomDomainStatus {
	if in == nil {
		return nil
	}
	out := new(CustomDomainStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpStrategy) DeepCopyInto(out *IpStrategy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpStrategy.
func (in *IpStrategy) DeepCopy() *IpStrategy {
	if in == nil {
		return nil
	}
	out := new(IpStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpStrategy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpStrategyInitParameters) DeepCopyInto(out *IpStrategyInitParameters) {
	*out = *in
	if in.StrategyData != nil {
		in, out := &in.StrategyData, &out.StrategyData
		*out = new(string)
		**out = **in
	}
	if in.StrategyName != nil {
		in, out := &in.StrategyName, &out.StrategyName
		*out = new(string)
		**out = **in
	}
	if in.StrategyType != nil {
		in, out := &in.StrategyType, &out.StrategyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpStrategyInitParameters.
func (in *IpStrategyInitParameters) DeepCopy() *IpStrategyInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpStrategyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpStrategyList) DeepCopyInto(out *IpStrategyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IpStrategy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpStrategyList.
func (in *IpStrategyList) DeepCopy() *IpStrategyList {
	if in == nil {
		return nil
	}
	out := new(IpStrategyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpStrategyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpStrategyObservation) DeepCopyInto(out *IpStrategyObservation) {
	*out = *in
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.StrategyData != nil {
		in, out := &in.StrategyData, &out.StrategyData
		*out = new(string)
		**out = **in
	}
	if in.StrategyID != nil {
		in, out := &in.StrategyID, &out.StrategyID
		*out = new(string)
		**out = **in
	}
	if in.StrategyName != nil {
		in, out := &in.StrategyName, &out.StrategyName
		*out = new(string)
		**out = **in
	}
	if in.StrategyType != nil {
		in, out := &in.StrategyType, &out.StrategyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpStrategyObservation.
func (in *IpStrategyObservation) DeepCopy() *IpStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(IpStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpStrategyParameters) DeepCopyInto(out *IpStrategyParameters) {
	*out = *in
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceIDRef != nil {
		in, out := &in.ServiceIDRef, &out.ServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceIDSelector != nil {
		in, out := &in.ServiceIDSelector, &out.ServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StrategyData != nil {
		in, out := &in.StrategyData, &out.StrategyData
		*out = new(string)
		**out = **in
	}
	if in.StrategyName != nil {
		in, out := &in.StrategyName, &out.StrategyName
		*out = new(string)
		**out = **in
	}
	if in.StrategyType != nil {
		in, out := &in.StrategyType, &out.StrategyType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpStrategyParameters.
func (in *IpStrategyParameters) DeepCopy() *IpStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(IpStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpStrategySpec) DeepCopyInto(out *IpStrategySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpStrategySpec.
func (in *IpStrategySpec) DeepCopy() *IpStrategySpec {
	if in == nil {
		return nil
	}
	out := new(IpStrategySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpStrategyStatus) DeepCopyInto(out *IpStrategyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpStrategyStatus.
func (in *IpStrategyStatus) DeepCopy() *IpStrategyStatus {
	if in == nil {
		return nil
	}
	out := new(IpStrategyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroServicesInitParameters) DeepCopyInto(out *MicroServicesInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.MicroServiceName != nil {
		in, out := &in.MicroServiceName, &out.MicroServiceName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroServicesInitParameters.
func (in *MicroServicesInitParameters) DeepCopy() *MicroServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MicroServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroServicesObservation) DeepCopyInto(out *MicroServicesObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.MicroServiceName != nil {
		in, out := &in.MicroServiceName, &out.MicroServiceName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroServicesObservation.
func (in *MicroServicesObservation) DeepCopy() *MicroServicesObservation {
	if in == nil {
		return nil
	}
	out := new(MicroServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MicroServicesParameters) DeepCopyInto(out *MicroServicesParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.MicroServiceName != nil {
		in, out := &in.MicroServiceName, &out.MicroServiceName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MicroServicesParameters.
func (in *MicroServicesParameters) DeepCopy() *MicroServicesParameters {
	if in == nil {
		return nil
	}
	out := new(MicroServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthConfigInitParameters) DeepCopyInto(out *OauthConfigInitParameters) {
	*out = *in
	if in.LoginRedirectURL != nil {
		in, out := &in.LoginRedirectURL, &out.LoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.TokenLocation != nil {
		in, out := &in.TokenLocation, &out.TokenLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthConfigInitParameters.
func (in *OauthConfigInitParameters) DeepCopy() *OauthConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OauthConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthConfigObservation) DeepCopyInto(out *OauthConfigObservation) {
	*out = *in
	if in.LoginRedirectURL != nil {
		in, out := &in.LoginRedirectURL, &out.LoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.TokenLocation != nil {
		in, out := &in.TokenLocation, &out.TokenLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthConfigObservation.
func (in *OauthConfigObservation) DeepCopy() *OauthConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OauthConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OauthConfigParameters) DeepCopyInto(out *OauthConfigParameters) {
	*out = *in
	if in.LoginRedirectURL != nil {
		in, out := &in.LoginRedirectURL, &out.LoginRedirectURL
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.TokenLocation != nil {
		in, out := &in.TokenLocation, &out.TokenLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OauthConfigParameters.
func (in *OauthConfigParameters) DeepCopy() *OauthConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OauthConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParametersInitParameters) DeepCopyInto(out *RequestParametersInitParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParametersInitParameters.
func (in *RequestParametersInitParameters) DeepCopy() *RequestParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParametersObservation) DeepCopyInto(out *RequestParametersObservation) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParametersObservation.
func (in *RequestParametersObservation) DeepCopy() *RequestParametersObservation {
	if in == nil {
		return nil
	}
	out := new(RequestParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParametersParameters) DeepCopyInto(out *RequestParametersParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParametersParameters.
func (in *RequestParametersParameters) DeepCopy() *RequestParametersParameters {
	if in == nil {
		return nil
	}
	out := new(RequestParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseErrorCodesInitParameters) DeepCopyInto(out *ResponseErrorCodesInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.ConvertedCode != nil {
		in, out := &in.ConvertedCode, &out.ConvertedCode
		*out = new(float64)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Msg != nil {
		in, out := &in.Msg, &out.Msg
		*out = new(string)
		**out = **in
	}
	if in.NeedConvert != nil {
		in, out := &in.NeedConvert, &out.NeedConvert
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseErrorCodesInitParameters.
func (in *ResponseErrorCodesInitParameters) DeepCopy() *ResponseErrorCodesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseErrorCodesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseErrorCodesObservation) DeepCopyInto(out *ResponseErrorCodesObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.ConvertedCode != nil {
		in, out := &in.ConvertedCode, &out.ConvertedCode
		*out = new(float64)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Msg != nil {
		in, out := &in.Msg, &out.Msg
		*out = new(string)
		**out = **in
	}
	if in.NeedConvert != nil {
		in, out := &in.NeedConvert, &out.NeedConvert
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseErrorCodesObservation.
func (in *ResponseErrorCodesObservation) DeepCopy() *ResponseErrorCodesObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseErrorCodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseErrorCodesParameters) DeepCopyInto(out *ResponseErrorCodesParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.ConvertedCode != nil {
		in, out := &in.ConvertedCode, &out.ConvertedCode
		*out = new(float64)
		**out = **in
	}
	if in.Desc != nil {
		in, out := &in.Desc, &out.Desc
		*out = new(string)
		**out = **in
	}
	if in.Msg != nil {
		in, out := &in.Msg, &out.Msg
		*out = new(string)
		**out = **in
	}
	if in.NeedConvert != nil {
		in, out := &in.NeedConvert, &out.NeedConvert
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseErrorCodesParameters.
func (in *ResponseErrorCodesParameters) DeepCopy() *ResponseErrorCodesParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseErrorCodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Service) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigCosConfigInitParameters) DeepCopyInto(out *ServiceConfigCosConfigInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(bool)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.PathMatchMode != nil {
		in, out := &in.PathMatchMode, &out.PathMatchMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigCosConfigInitParameters.
func (in *ServiceConfigCosConfigInitParameters) DeepCopy() *ServiceConfigCosConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigCosConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigCosConfigObservation) DeepCopyInto(out *ServiceConfigCosConfigObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(bool)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.PathMatchMode != nil {
		in, out := &in.PathMatchMode, &out.PathMatchMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigCosConfigObservation.
func (in *ServiceConfigCosConfigObservation) DeepCopy() *ServiceConfigCosConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigCosConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigCosConfigParameters) DeepCopyInto(out *ServiceConfigCosConfigParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = new(bool)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.PathMatchMode != nil {
		in, out := &in.PathMatchMode, &out.PathMatchMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigCosConfigParameters.
func (in *ServiceConfigCosConfigParameters) DeepCopy() *ServiceConfigCosConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigCosConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceInitParameters) DeepCopyInto(out *ServiceInitParameters) {
	*out = *in
	if in.ExclusiveSetName != nil {
		in, out := &in.ExclusiveSetName, &out.ExclusiveSetName
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NetType != nil {
		in, out := &in.NetType, &out.NetType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PreLimit != nil {
		in, out := &in.PreLimit, &out.PreLimit
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ReleaseLimit != nil {
		in, out := &in.ReleaseLimit, &out.ReleaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.ServiceDesc != nil {
		in, out := &in.ServiceDesc, &out.ServiceDesc
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TestLimit != nil {
		in, out := &in.TestLimit, &out.TestLimit
		*out = new(float64)
		**out = **in
	}
	if in.UniqVPCID != nil {
		in, out := &in.UniqVPCID, &out.UniqVPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceInitParameters.
func (in *ServiceInitParameters) DeepCopy() *ServiceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceList) DeepCopyInto(out *ServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Service, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceList.
func (in *ServiceList) DeepCopy() *ServiceList {
	if in == nil {
		return nil
	}
	out := new(ServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceObservation) DeepCopyInto(out *ServiceObservation) {
	*out = *in
	if in.APIList != nil {
		in, out := &in.APIList, &out.APIList
		*out = make([]APIListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ExclusiveSetName != nil {
		in, out := &in.ExclusiveSetName, &out.ExclusiveSetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.InnerHTTPPort != nil {
		in, out := &in.InnerHTTPPort, &out.InnerHTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.InnerHTTPSPort != nil {
		in, out := &in.InnerHTTPSPort, &out.InnerHTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InternalSubDomain != nil {
		in, out := &in.InternalSubDomain, &out.InternalSubDomain
		*out = new(string)
		**out = **in
	}
	if in.ModifyTime != nil {
		in, out := &in.ModifyTime, &out.ModifyTime
		*out = new(string)
		**out = **in
	}
	if in.NetType != nil {
		in, out := &in.NetType, &out.NetType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OuterSubDomain != nil {
		in, out := &in.OuterSubDomain, &out.OuterSubDomain
		*out = new(string)
		**out = **in
	}
	if in.PreLimit != nil {
		in, out := &in.PreLimit, &out.PreLimit
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ReleaseLimit != nil {
		in, out := &in.ReleaseLimit, &out.ReleaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.ServiceDesc != nil {
		in, out := &in.ServiceDesc, &out.ServiceDesc
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TestLimit != nil {
		in, out := &in.TestLimit, &out.TestLimit
		*out = new(float64)
		**out = **in
	}
	if in.UniqVPCID != nil {
		in, out := &in.UniqVPCID, &out.UniqVPCID
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanList != nil {
		in, out := &in.UsagePlanList, &out.UsagePlanList
		*out = make([]UsagePlanListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceObservation.
func (in *ServiceObservation) DeepCopy() *ServiceObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceParameters) DeepCopyInto(out *ServiceParameters) {
	*out = *in
	if in.ExclusiveSetName != nil {
		in, out := &in.ExclusiveSetName, &out.ExclusiveSetName
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NetType != nil {
		in, out := &in.NetType, &out.NetType
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PreLimit != nil {
		in, out := &in.PreLimit, &out.PreLimit
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ReleaseLimit != nil {
		in, out := &in.ReleaseLimit, &out.ReleaseLimit
		*out = new(float64)
		**out = **in
	}
	if in.ServiceDesc != nil {
		in, out := &in.ServiceDesc, &out.ServiceDesc
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TestLimit != nil {
		in, out := &in.TestLimit, &out.TestLimit
		*out = new(float64)
		**out = **in
	}
	if in.UniqVPCID != nil {
		in, out := &in.UniqVPCID, &out.UniqVPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceParameters.
func (in *ServiceParameters) DeepCopy() *ServiceParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceParametersInitParameters) DeepCopyInto(out *ServiceParametersInitParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterDesc != nil {
		in, out := &in.RelevantRequestParameterDesc, &out.RelevantRequestParameterDesc
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterName != nil {
		in, out := &in.RelevantRequestParameterName, &out.RelevantRequestParameterName
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterPosition != nil {
		in, out := &in.RelevantRequestParameterPosition, &out.RelevantRequestParameterPosition
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterType != nil {
		in, out := &in.RelevantRequestParameterType, &out.RelevantRequestParameterType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceParametersInitParameters.
func (in *ServiceParametersInitParameters) DeepCopy() *ServiceParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceParametersObservation) DeepCopyInto(out *ServiceParametersObservation) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterDesc != nil {
		in, out := &in.RelevantRequestParameterDesc, &out.RelevantRequestParameterDesc
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterName != nil {
		in, out := &in.RelevantRequestParameterName, &out.RelevantRequestParameterName
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterPosition != nil {
		in, out := &in.RelevantRequestParameterPosition, &out.RelevantRequestParameterPosition
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterType != nil {
		in, out := &in.RelevantRequestParameterType, &out.RelevantRequestParameterType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceParametersObservation.
func (in *ServiceParametersObservation) DeepCopy() *ServiceParametersObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceParametersParameters) DeepCopyInto(out *ServiceParametersParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterDesc != nil {
		in, out := &in.RelevantRequestParameterDesc, &out.RelevantRequestParameterDesc
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterName != nil {
		in, out := &in.RelevantRequestParameterName, &out.RelevantRequestParameterName
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterPosition != nil {
		in, out := &in.RelevantRequestParameterPosition, &out.RelevantRequestParameterPosition
		*out = new(string)
		**out = **in
	}
	if in.RelevantRequestParameterType != nil {
		in, out := &in.RelevantRequestParameterType, &out.RelevantRequestParameterType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceParametersParameters.
func (in *ServiceParametersParameters) DeepCopy() *ServiceParametersParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRelease) DeepCopyInto(out *ServiceRelease) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRelease.
func (in *ServiceRelease) DeepCopy() *ServiceRelease {
	if in == nil {
		return nil
	}
	out := new(ServiceRelease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceRelease) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceReleaseInitParameters) DeepCopyInto(out *ServiceReleaseInitParameters) {
	*out = *in
	if in.EnvironmentName != nil {
		in, out := &in.EnvironmentName, &out.EnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.ReleaseDesc != nil {
		in, out := &in.ReleaseDesc, &out.ReleaseDesc
		*out = new(string)
		**out = **in
	}
	if in.ReleaseVersion != nil {
		in, out := &in.ReleaseVersion, &out.ReleaseVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceReleaseInitParameters.
func (in *ServiceReleaseInitParameters) DeepCopy() *ServiceReleaseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceReleaseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceReleaseList) DeepCopyInto(out *ServiceReleaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceRelease, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceReleaseList.
func (in *ServiceReleaseList) DeepCopy() *ServiceReleaseList {
	if in == nil {
		return nil
	}
	out := new(ServiceReleaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceReleaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceReleaseObservation) DeepCopyInto(out *ServiceReleaseObservation) {
	*out = *in
	if in.EnvironmentName != nil {
		in, out := &in.EnvironmentName, &out.EnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ReleaseDesc != nil {
		in, out := &in.ReleaseDesc, &out.ReleaseDesc
		*out = new(string)
		**out = **in
	}
	if in.ReleaseVersion != nil {
		in, out := &in.ReleaseVersion, &out.ReleaseVersion
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceReleaseObservation.
func (in *ServiceReleaseObservation) DeepCopy() *ServiceReleaseObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceReleaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceReleaseParameters) DeepCopyInto(out *ServiceReleaseParameters) {
	*out = *in
	if in.EnvironmentName != nil {
		in, out := &in.EnvironmentName, &out.EnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.ReleaseDesc != nil {
		in, out := &in.ReleaseDesc, &out.ReleaseDesc
		*out = new(string)
		**out = **in
	}
	if in.ReleaseVersion != nil {
		in, out := &in.ReleaseVersion, &out.ReleaseVersion
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceIDRef != nil {
		in, out := &in.ServiceIDRef, &out.ServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceIDSelector != nil {
		in, out := &in.ServiceIDSelector, &out.ServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceReleaseParameters.
func (in *ServiceReleaseParameters) DeepCopy() *ServiceReleaseParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceReleaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceReleaseSpec) DeepCopyInto(out *ServiceReleaseSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceReleaseSpec.
func (in *ServiceReleaseSpec) DeepCopy() *ServiceReleaseSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceReleaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceReleaseStatus) DeepCopyInto(out *ServiceReleaseStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceReleaseStatus.
func (in *ServiceReleaseStatus) DeepCopy() *ServiceReleaseStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceReleaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceStatus) DeepCopyInto(out *ServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceStatus.
func (in *ServiceStatus) DeepCopy() *ServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTsfHealthCheckConfInitParameters) DeepCopyInto(out *ServiceTsfHealthCheckConfInitParameters) {
	*out = *in
	if in.ErrorThresholdPercentage != nil {
		in, out := &in.ErrorThresholdPercentage, &out.ErrorThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.IsHealthCheck != nil {
		in, out := &in.IsHealthCheck, &out.IsHealthCheck
		*out = new(bool)
		**out = **in
	}
	if in.RequestVolumeThreshold != nil {
		in, out := &in.RequestVolumeThreshold, &out.RequestVolumeThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SleepWindowInMilliseconds != nil {
		in, out := &in.SleepWindowInMilliseconds, &out.SleepWindowInMilliseconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTsfHealthCheckConfInitParameters.
func (in *ServiceTsfHealthCheckConfInitParameters) DeepCopy() *ServiceTsfHealthCheckConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceTsfHealthCheckConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTsfHealthCheckConfObservation) DeepCopyInto(out *ServiceTsfHealthCheckConfObservation) {
	*out = *in
	if in.ErrorThresholdPercentage != nil {
		in, out := &in.ErrorThresholdPercentage, &out.ErrorThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.IsHealthCheck != nil {
		in, out := &in.IsHealthCheck, &out.IsHealthCheck
		*out = new(bool)
		**out = **in
	}
	if in.RequestVolumeThreshold != nil {
		in, out := &in.RequestVolumeThreshold, &out.RequestVolumeThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SleepWindowInMilliseconds != nil {
		in, out := &in.SleepWindowInMilliseconds, &out.SleepWindowInMilliseconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTsfHealthCheckConfObservation.
func (in *ServiceTsfHealthCheckConfObservation) DeepCopy() *ServiceTsfHealthCheckConfObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceTsfHealthCheckConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTsfHealthCheckConfParameters) DeepCopyInto(out *ServiceTsfHealthCheckConfParameters) {
	*out = *in
	if in.ErrorThresholdPercentage != nil {
		in, out := &in.ErrorThresholdPercentage, &out.ErrorThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.IsHealthCheck != nil {
		in, out := &in.IsHealthCheck, &out.IsHealthCheck
		*out = new(bool)
		**out = **in
	}
	if in.RequestVolumeThreshold != nil {
		in, out := &in.RequestVolumeThreshold, &out.RequestVolumeThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SleepWindowInMilliseconds != nil {
		in, out := &in.SleepWindowInMilliseconds, &out.SleepWindowInMilliseconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTsfHealthCheckConfParameters.
func (in *ServiceTsfHealthCheckConfParameters) DeepCopy() *ServiceTsfHealthCheckConfParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceTsfHealthCheckConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTsfLoadBalanceConfInitParameters) DeepCopyInto(out *ServiceTsfLoadBalanceConfInitParameters) {
	*out = *in
	if in.IsLoadBalance != nil {
		in, out := &in.IsLoadBalance, &out.IsLoadBalance
		*out = new(bool)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SessionStickRequired != nil {
		in, out := &in.SessionStickRequired, &out.SessionStickRequired
		*out = new(bool)
		**out = **in
	}
	if in.SessionStickTimeout != nil {
		in, out := &in.SessionStickTimeout, &out.SessionStickTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTsfLoadBalanceConfInitParameters.
func (in *ServiceTsfLoadBalanceConfInitParameters) DeepCopy() *ServiceTsfLoadBalanceConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceTsfLoadBalanceConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTsfLoadBalanceConfObservation) DeepCopyInto(out *ServiceTsfLoadBalanceConfObservation) {
	*out = *in
	if in.IsLoadBalance != nil {
		in, out := &in.IsLoadBalance, &out.IsLoadBalance
		*out = new(bool)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SessionStickRequired != nil {
		in, out := &in.SessionStickRequired, &out.SessionStickRequired
		*out = new(bool)
		**out = **in
	}
	if in.SessionStickTimeout != nil {
		in, out := &in.SessionStickTimeout, &out.SessionStickTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTsfLoadBalanceConfObservation.
func (in *ServiceTsfLoadBalanceConfObservation) DeepCopy() *ServiceTsfLoadBalanceConfObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceTsfLoadBalanceConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTsfLoadBalanceConfParameters) DeepCopyInto(out *ServiceTsfLoadBalanceConfParameters) {
	*out = *in
	if in.IsLoadBalance != nil {
		in, out := &in.IsLoadBalance, &out.IsLoadBalance
		*out = new(bool)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SessionStickRequired != nil {
		in, out := &in.SessionStickRequired, &out.SessionStickRequired
		*out = new(bool)
		**out = **in
	}
	if in.SessionStickTimeout != nil {
		in, out := &in.SessionStickTimeout, &out.SessionStickTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTsfLoadBalanceConfParameters.
func (in *ServiceTsfLoadBalanceConfParameters) DeepCopy() *ServiceTsfLoadBalanceConfParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceTsfLoadBalanceConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyAttachment) DeepCopyInto(out *StrategyAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyAttachment.
func (in *StrategyAttachment) DeepCopy() *StrategyAttachment {
	if in == nil {
		return nil
	}
	out := new(StrategyAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StrategyAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyAttachmentInitParameters) DeepCopyInto(out *StrategyAttachmentInitParameters) {
	*out = *in
	if in.EnvironmentName != nil {
		in, out := &in.EnvironmentName, &out.EnvironmentName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyAttachmentInitParameters.
func (in *StrategyAttachmentInitParameters) DeepCopy() *StrategyAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(StrategyAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyAttachmentList) DeepCopyInto(out *StrategyAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StrategyAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyAttachmentList.
func (in *StrategyAttachmentList) DeepCopy() *StrategyAttachmentList {
	if in == nil {
		return nil
	}
	out := new(StrategyAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StrategyAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyAttachmentObservation) DeepCopyInto(out *StrategyAttachmentObservation) {
	*out = *in
	if in.BindAPIID != nil {
		in, out := &in.BindAPIID, &out.BindAPIID
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentName != nil {
		in, out := &in.EnvironmentName, &out.EnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.StrategyID != nil {
		in, out := &in.StrategyID, &out.StrategyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyAttachmentObservation.
func (in *StrategyAttachmentObservation) DeepCopy() *StrategyAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(StrategyAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyAttachmentParameters) DeepCopyInto(out *StrategyAttachmentParameters) {
	*out = *in
	if in.BindAPIID != nil {
		in, out := &in.BindAPIID, &out.BindAPIID
		*out = new(string)
		**out = **in
	}
	if in.BindAPIIDRef != nil {
		in, out := &in.BindAPIIDRef, &out.BindAPIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BindAPIIDSelector != nil {
		in, out := &in.BindAPIIDSelector, &out.BindAPIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EnvironmentName != nil {
		in, out := &in.EnvironmentName, &out.EnvironmentName
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceIDRef != nil {
		in, out := &in.ServiceIDRef, &out.ServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceIDSelector != nil {
		in, out := &in.ServiceIDSelector, &out.ServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StrategyID != nil {
		in, out := &in.StrategyID, &out.StrategyID
		*out = new(string)
		**out = **in
	}
	if in.StrategyIDRef != nil {
		in, out := &in.StrategyIDRef, &out.StrategyIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StrategyIDSelector != nil {
		in, out := &in.StrategyIDSelector, &out.StrategyIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyAttachmentParameters.
func (in *StrategyAttachmentParameters) DeepCopy() *StrategyAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(StrategyAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyAttachmentSpec) DeepCopyInto(out *StrategyAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyAttachmentSpec.
func (in *StrategyAttachmentSpec) DeepCopy() *StrategyAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(StrategyAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StrategyAttachmentStatus) DeepCopyInto(out *StrategyAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StrategyAttachmentStatus.
func (in *StrategyAttachmentStatus) DeepCopy() *StrategyAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(StrategyAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetServicesHealthCheckConfInitParameters) DeepCopyInto(out *TargetServicesHealthCheckConfInitParameters) {
	*out = *in
	if in.ErrorThresholdPercentage != nil {
		in, out := &in.ErrorThresholdPercentage, &out.ErrorThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.IsHealthCheck != nil {
		in, out := &in.IsHealthCheck, &out.IsHealthCheck
		*out = new(bool)
		**out = **in
	}
	if in.RequestVolumeThreshold != nil {
		in, out := &in.RequestVolumeThreshold, &out.RequestVolumeThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SleepWindowInMilliseconds != nil {
		in, out := &in.SleepWindowInMilliseconds, &out.SleepWindowInMilliseconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetServicesHealthCheckConfInitParameters.
func (in *TargetServicesHealthCheckConfInitParameters) DeepCopy() *TargetServicesHealthCheckConfInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetServicesHealthCheckConfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetServicesHealthCheckConfObservation) DeepCopyInto(out *TargetServicesHealthCheckConfObservation) {
	*out = *in
	if in.ErrorThresholdPercentage != nil {
		in, out := &in.ErrorThresholdPercentage, &out.ErrorThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.IsHealthCheck != nil {
		in, out := &in.IsHealthCheck, &out.IsHealthCheck
		*out = new(bool)
		**out = **in
	}
	if in.RequestVolumeThreshold != nil {
		in, out := &in.RequestVolumeThreshold, &out.RequestVolumeThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SleepWindowInMilliseconds != nil {
		in, out := &in.SleepWindowInMilliseconds, &out.SleepWindowInMilliseconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetServicesHealthCheckConfObservation.
func (in *TargetServicesHealthCheckConfObservation) DeepCopy() *TargetServicesHealthCheckConfObservation {
	if in == nil {
		return nil
	}
	out := new(TargetServicesHealthCheckConfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetServicesHealthCheckConfParameters) DeepCopyInto(out *TargetServicesHealthCheckConfParameters) {
	*out = *in
	if in.ErrorThresholdPercentage != nil {
		in, out := &in.ErrorThresholdPercentage, &out.ErrorThresholdPercentage
		*out = new(float64)
		**out = **in
	}
	if in.IsHealthCheck != nil {
		in, out := &in.IsHealthCheck, &out.IsHealthCheck
		*out = new(bool)
		**out = **in
	}
	if in.RequestVolumeThreshold != nil {
		in, out := &in.RequestVolumeThreshold, &out.RequestVolumeThreshold
		*out = new(float64)
		**out = **in
	}
	if in.SleepWindowInMilliseconds != nil {
		in, out := &in.SleepWindowInMilliseconds, &out.SleepWindowInMilliseconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetServicesHealthCheckConfParameters.
func (in *TargetServicesHealthCheckConfParameters) DeepCopy() *TargetServicesHealthCheckConfParameters {
	if in == nil {
		return nil
	}
	out := new(TargetServicesHealthCheckConfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetServicesInitParameters) DeepCopyInto(out *TargetServicesInitParameters) {
	*out = *in
	if in.DockerIP != nil {
		in, out := &in.DockerIP, &out.DockerIP
		*out = new(string)
		**out = **in
	}
	if in.HostIP != nil {
		in, out := &in.HostIP, &out.HostIP
		*out = new(string)
		**out = **in
	}
	if in.VMIP != nil {
		in, out := &in.VMIP, &out.VMIP
		*out = new(string)
		**out = **in
	}
	if in.VMPort != nil {
		in, out := &in.VMPort, &out.VMPort
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetServicesInitParameters.
func (in *TargetServicesInitParameters) DeepCopy() *TargetServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetServicesObservation) DeepCopyInto(out *TargetServicesObservation) {
	*out = *in
	if in.DockerIP != nil {
		in, out := &in.DockerIP, &out.DockerIP
		*out = new(string)
		**out = **in
	}
	if in.HostIP != nil {
		in, out := &in.HostIP, &out.HostIP
		*out = new(string)
		**out = **in
	}
	if in.VMIP != nil {
		in, out := &in.VMIP, &out.VMIP
		*out = new(string)
		**out = **in
	}
	if in.VMPort != nil {
		in, out := &in.VMPort, &out.VMPort
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetServicesObservation.
func (in *TargetServicesObservation) DeepCopy() *TargetServicesObservation {
	if in == nil {
		return nil
	}
	out := new(TargetServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetServicesParameters) DeepCopyInto(out *TargetServicesParameters) {
	*out = *in
	if in.DockerIP != nil {
		in, out := &in.DockerIP, &out.DockerIP
		*out = new(string)
		**out = **in
	}
	if in.HostIP != nil {
		in, out := &in.HostIP, &out.HostIP
		*out = new(string)
		**out = **in
	}
	if in.VMIP != nil {
		in, out := &in.VMIP, &out.VMIP
		*out = new(string)
		**out = **in
	}
	if in.VMPort != nil {
		in, out := &in.VMPort, &out.VMPort
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetServicesParameters.
func (in *TargetServicesParameters) DeepCopy() *TargetServicesParameters {
	if in == nil {
		return nil
	}
	out := new(TargetServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlan) DeepCopyInto(out *UsagePlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlan.
func (in *UsagePlan) DeepCopy() *UsagePlan {
	if in == nil {
		return nil
	}
	out := new(UsagePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UsagePlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanAttachment) DeepCopyInto(out *UsagePlanAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanAttachment.
func (in *UsagePlanAttachment) DeepCopy() *UsagePlanAttachment {
	if in == nil {
		return nil
	}
	out := new(UsagePlanAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UsagePlanAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanAttachmentInitParameters) DeepCopyInto(out *UsagePlanAttachmentInitParameters) {
	*out = *in
	if in.AccessKeyIds != nil {
		in, out := &in.AccessKeyIds, &out.AccessKeyIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BindType != nil {
		in, out := &in.BindType, &out.BindType
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanAttachmentInitParameters.
func (in *UsagePlanAttachmentInitParameters) DeepCopy() *UsagePlanAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanAttachmentList) DeepCopyInto(out *UsagePlanAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UsagePlanAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanAttachmentList.
func (in *UsagePlanAttachmentList) DeepCopy() *UsagePlanAttachmentList {
	if in == nil {
		return nil
	}
	out := new(UsagePlanAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UsagePlanAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanAttachmentObservation) DeepCopyInto(out *UsagePlanAttachmentObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.AccessKeyIds != nil {
		in, out := &in.AccessKeyIds, &out.AccessKeyIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BindType != nil {
		in, out := &in.BindType, &out.BindType
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanID != nil {
		in, out := &in.UsagePlanID, &out.UsagePlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanAttachmentObservation.
func (in *UsagePlanAttachmentObservation) DeepCopy() *UsagePlanAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(UsagePlanAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanAttachmentParameters) DeepCopyInto(out *UsagePlanAttachmentParameters) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.APIIDRef != nil {
		in, out := &in.APIIDRef, &out.APIIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.APIIDSelector != nil {
		in, out := &in.APIIDSelector, &out.APIIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AccessKeyIds != nil {
		in, out := &in.AccessKeyIds, &out.AccessKeyIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BindType != nil {
		in, out := &in.BindType, &out.BindType
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceIDRef != nil {
		in, out := &in.ServiceIDRef, &out.ServiceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceIDSelector != nil {
		in, out := &in.ServiceIDSelector, &out.ServiceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.UsagePlanID != nil {
		in, out := &in.UsagePlanID, &out.UsagePlanID
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanIDRef != nil {
		in, out := &in.UsagePlanIDRef, &out.UsagePlanIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UsagePlanIDSelector != nil {
		in, out := &in.UsagePlanIDSelector, &out.UsagePlanIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanAttachmentParameters.
func (in *UsagePlanAttachmentParameters) DeepCopy() *UsagePlanAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanAttachmentSpec) DeepCopyInto(out *UsagePlanAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanAttachmentSpec.
func (in *UsagePlanAttachmentSpec) DeepCopy() *UsagePlanAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(UsagePlanAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanAttachmentStatus) DeepCopyInto(out *UsagePlanAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanAttachmentStatus.
func (in *UsagePlanAttachmentStatus) DeepCopy() *UsagePlanAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(UsagePlanAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanInitParameters) DeepCopyInto(out *UsagePlanInitParameters) {
	*out = *in
	if in.MaxRequestNum != nil {
		in, out := &in.MaxRequestNum, &out.MaxRequestNum
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestNumPreSec != nil {
		in, out := &in.MaxRequestNumPreSec, &out.MaxRequestNumPreSec
		*out = new(float64)
		**out = **in
	}
	if in.UsagePlanDesc != nil {
		in, out := &in.UsagePlanDesc, &out.UsagePlanDesc
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanName != nil {
		in, out := &in.UsagePlanName, &out.UsagePlanName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanInitParameters.
func (in *UsagePlanInitParameters) DeepCopy() *UsagePlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanList) DeepCopyInto(out *UsagePlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UsagePlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanList.
func (in *UsagePlanList) DeepCopy() *UsagePlanList {
	if in == nil {
		return nil
	}
	out := new(UsagePlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UsagePlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanListInitParameters) DeepCopyInto(out *UsagePlanListInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanListInitParameters.
func (in *UsagePlanListInitParameters) DeepCopy() *UsagePlanListInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanListObservation) DeepCopyInto(out *UsagePlanListObservation) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.BindType != nil {
		in, out := &in.BindType, &out.BindType
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanID != nil {
		in, out := &in.UsagePlanID, &out.UsagePlanID
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanName != nil {
		in, out := &in.UsagePlanName, &out.UsagePlanName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanListObservation.
func (in *UsagePlanListObservation) DeepCopy() *UsagePlanListObservation {
	if in == nil {
		return nil
	}
	out := new(UsagePlanListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanListParameters) DeepCopyInto(out *UsagePlanListParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanListParameters.
func (in *UsagePlanListParameters) DeepCopy() *UsagePlanListParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanObservation) DeepCopyInto(out *UsagePlanObservation) {
	*out = *in
	if in.AttachAPIKeys != nil {
		in, out := &in.AttachAPIKeys, &out.AttachAPIKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AttachList != nil {
		in, out := &in.AttachList, &out.AttachList
		*out = make([]AttachListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxRequestNum != nil {
		in, out := &in.MaxRequestNum, &out.MaxRequestNum
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestNumPreSec != nil {
		in, out := &in.MaxRequestNumPreSec, &out.MaxRequestNumPreSec
		*out = new(float64)
		**out = **in
	}
	if in.ModifyTime != nil {
		in, out := &in.ModifyTime, &out.ModifyTime
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanDesc != nil {
		in, out := &in.UsagePlanDesc, &out.UsagePlanDesc
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanName != nil {
		in, out := &in.UsagePlanName, &out.UsagePlanName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanObservation.
func (in *UsagePlanObservation) DeepCopy() *UsagePlanObservation {
	if in == nil {
		return nil
	}
	out := new(UsagePlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanParameters) DeepCopyInto(out *UsagePlanParameters) {
	*out = *in
	if in.MaxRequestNum != nil {
		in, out := &in.MaxRequestNum, &out.MaxRequestNum
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestNumPreSec != nil {
		in, out := &in.MaxRequestNumPreSec, &out.MaxRequestNumPreSec
		*out = new(float64)
		**out = **in
	}
	if in.UsagePlanDesc != nil {
		in, out := &in.UsagePlanDesc, &out.UsagePlanDesc
		*out = new(string)
		**out = **in
	}
	if in.UsagePlanName != nil {
		in, out := &in.UsagePlanName, &out.UsagePlanName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanParameters.
func (in *UsagePlanParameters) DeepCopy() *UsagePlanParameters {
	if in == nil {
		return nil
	}
	out := new(UsagePlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanSpec) DeepCopyInto(out *UsagePlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanSpec.
func (in *UsagePlanSpec) DeepCopy() *UsagePlanSpec {
	if in == nil {
		return nil
	}
	out := new(UsagePlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanStatus) DeepCopyInto(out *UsagePlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanStatus.
func (in *UsagePlanStatus) DeepCopy() *UsagePlanStatus {
	if in == nil {
		return nil
	}
	out := new(UsagePlanStatus)
	in.DeepCopyInto(out)
	return out
}
