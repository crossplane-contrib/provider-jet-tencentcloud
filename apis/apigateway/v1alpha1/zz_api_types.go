// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ApiInitParameters struct {

	// When auth_type is OAUTH, this field is valid, NORMAL: Business API, OAUTH: Authorization API.
	// When `auth_type` is OAUTH, this field is valid, NORMAL: Business API, OAUTH: Authorization API.
	APIBusinessType *string `json:"apiBusinessType,omitempty" tf:"api_business_type,omitempty"`

	// Custom API description.
	// Custom API description.
	APIDesc *string `json:"apiDesc,omitempty" tf:"api_desc,omitempty"`

	// Custom API name.
	// Custom API name.
	APIName *string `json:"apiName,omitempty" tf:"api_name,omitempty"`

	// API type, supports NORMAL (regular API) and TSF (microservice API), defaults to NORMAL.
	// API type, supports NORMAL (regular API) and TSF (microservice API), defaults to NORMAL.
	APIType *string `json:"apiType,omitempty" tf:"api_type,omitempty"`

	// The unique ID of the associated authorization API takes effect when AuthType is OAUTH and ApiBusinessType is NORMAL. The unique ID of the oauth2.0 authorized API that identifies the business API binding.
	// The unique ID of the associated authorization API takes effect when AuthType is OAUTH and ApiBusinessType is NORMAL. The unique ID of the oauth2.0 authorized API that identifies the business API binding.
	AuthRelationAPIID *string `json:"authRelationApiId,omitempty" tf:"auth_relation_api_id,omitempty"`

	// API authentication type. Support SECRET (Key Pair Authentication), NONE (Authentication Exemption), OAUTH, APP (Application Authentication). The default is NONE.
	// API authentication type. Support SECRET (Key Pair Authentication), NONE (Authentication Exemption), OAUTH, APP (Application Authentication). The default is NONE.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// Constant parameter.
	// Constant parameter.
	ConstantParameters []ConstantParametersInitParameters `json:"constantParameters,omitempty" tf:"constant_parameters,omitempty"`

	// EIAM application ID.
	// EIAM application ID.
	EiamAppID *string `json:"eiamAppId,omitempty" tf:"eiam_app_id,omitempty"`

	// EIAM application type.
	// EIAM application type.
	EiamAppType *string `json:"eiamAppType,omitempty" tf:"eiam_app_type,omitempty"`

	// The EIAM application authentication type supports AuthenticationOnly, Authentication, and Authorization.
	// The EIAM application authentication type supports AuthenticationOnly, Authentication, and Authorization.
	EiamAuthType *string `json:"eiamAuthType,omitempty" tf:"eiam_auth_type,omitempty"`

	// Whether to enable CORS. Default value: true.
	// Whether to enable CORS. Default value: `true`.
	EnableCors *bool `json:"enableCors,omitempty" tf:"enable_cors,omitempty"`

	// Event bus ID.
	// Event bus ID.
	EventBusID *string `json:"eventBusId,omitempty" tf:"event_bus_id,omitempty"`

	// Whether to enable Base64 encoding will only take effect when the backend is scf.
	// Whether to enable Base64 encoding will only take effect when the backend is scf.
	IsBase64Encoded *bool `json:"isBase64Encoded,omitempty" tf:"is_base64_encoded,omitempty"`

	// Charge after starting debugging. (Cloud Market Reserved Fields).
	// Charge after starting debugging. (Cloud Market Reserved Fields).
	IsDebugAfterCharge *bool `json:"isDebugAfterCharge,omitempty" tf:"is_debug_after_charge,omitempty"`

	// Do you want to delete the custom response configuration error code? If it is not passed or False is passed, it will not be deleted. If True is passed, all custom response configuration error codes for this API will be deleted.
	// Do you want to delete the custom response configuration error code? If it is not passed or False is passed, it will not be deleted. If True is passed, all custom response configuration error codes for this API will be deleted.
	IsDeleteResponseErrorCodes *bool `json:"isDeleteResponseErrorCodes,omitempty" tf:"is_delete_response_error_codes,omitempty"`

	// API bound microservice list.
	// API bound microservice list.
	MicroServices []MicroServicesInitParameters `json:"microServices,omitempty" tf:"micro_services,omitempty"`

	// OAuth configuration. Effective when AuthType is OAUTH.
	// OAuth configuration. Effective when AuthType is OAUTH.
	OauthConfig []OauthConfigInitParameters `json:"oauthConfig,omitempty" tf:"oauth_config,omitempty"`

	// Owner of resources.
	// Owner of resources.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	PreLimit *float64 `json:"preLimit,omitempty" tf:"pre_limit,omitempty"`

	// API frontend request type. Valid values: HTTP, WEBSOCKET. Default value: HTTP.
	// API frontend request type. Valid values: `HTTP`, `WEBSOCKET`. Default value: `HTTP`.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	ReleaseLimit *float64 `json:"releaseLimit,omitempty" tf:"release_limit,omitempty"`

	// Request frontend method configuration. Valid values: GET,POST,PUT,DELETE,HEAD,ANY. Default value: GET.
	// Request frontend method configuration. Valid values: `GET`,`POST`,`PUT`,`DELETE`,`HEAD`,`ANY`. Default value: `GET`.
	RequestConfigMethod *string `json:"requestConfigMethod,omitempty" tf:"request_config_method,omitempty"`

	// Request frontend path configuration. Like /user/getinfo.
	// Request frontend path configuration. Like `/user/getinfo`.
	RequestConfigPath *string `json:"requestConfigPath,omitempty" tf:"request_config_path,omitempty"`

	// Frontend request parameters.
	// Frontend request parameters.
	RequestParameters []RequestParametersInitParameters `json:"requestParameters,omitempty" tf:"request_parameters,omitempty"`

	// Custom error code configuration. Must keep at least one after set.
	// Custom error code configuration. Must keep at least one after set.
	ResponseErrorCodes []ResponseErrorCodesInitParameters `json:"responseErrorCodes,omitempty" tf:"response_error_codes,omitempty"`

	// Response failure sample of custom response configuration.
	// Response failure sample of custom response configuration.
	ResponseFailExample *string `json:"responseFailExample,omitempty" tf:"response_fail_example,omitempty"`

	// Successful response sample of custom response configuration.
	// Successful response sample of custom response configuration.
	ResponseSuccessExample *string `json:"responseSuccessExample,omitempty" tf:"response_success_example,omitempty"`

	// Return type. Valid values: HTML, JSON, TEXT, BINARY, XML. Default value: HTML.
	// Return type. Valid values: `HTML`, `JSON`, `TEXT`, `BINARY`, `XML`. Default value: `HTML`.
	ResponseType *string `json:"responseType,omitempty" tf:"response_type,omitempty"`

	// API backend COS configuration. If ServiceType is COS, then this parameter must be passed.Note: This field may return null, indicating that a valid value cannot be obtained.
	// API backend COS configuration. If ServiceType is COS, then this parameter must be passed.Note: This field may return null, indicating that a valid value cannot be obtained.
	ServiceConfigCosConfig []ServiceConfigCosConfigInitParameters `json:"serviceConfigCosConfig,omitempty" tf:"service_config_cos_config,omitempty"`

	// API backend service request method, such as GET. If service_config_type is HTTP, this parameter will be required. The frontend request_config_method and backend method service_config_method can be different.
	// API backend service request method, such as `GET`. If `service_config_type` is `HTTP`, this parameter will be required. The frontend `request_config_method` and backend method `service_config_method` can be different.
	ServiceConfigMethod *string `json:"serviceConfigMethod,omitempty" tf:"service_config_method,omitempty"`

	// Returned information of API backend mocking. This parameter is required when service_config_type is MOCK.
	// Returned information of API backend mocking. This parameter is required when `service_config_type` is `MOCK`.
	ServiceConfigMockReturnMessage *string `json:"serviceConfigMockReturnMessage,omitempty" tf:"service_config_mock_return_message,omitempty"`

	// API backend service path, such as /path. If service_config_type is HTTP, this parameter will be required. The frontend request_config_path and backend path service_config_path can be different.
	// API backend service path, such as /path. If `service_config_type` is `HTTP`, this parameter will be required. The frontend `request_config_path` and backend path `service_config_path` can be different.
	ServiceConfigPath *string `json:"serviceConfigPath,omitempty" tf:"service_config_path,omitempty"`

	// Backend type. Effective when enabling vpc, currently supported types are clb, cvm, and upstream.
	// Backend type. Effective when enabling vpc, currently supported types are clb, cvm, and upstream.
	ServiceConfigProduct *string `json:"serviceConfigProduct,omitempty" tf:"service_config_product,omitempty"`

	// SCF function name. This parameter takes effect when service_config_type is SCF.
	// SCF function name. This parameter takes effect when `service_config_type` is `SCF`.
	ServiceConfigScfFunctionName *string `json:"serviceConfigScfFunctionName,omitempty" tf:"service_config_scf_function_name,omitempty"`

	// SCF function namespace. This parameter takes effect when service_config_type is SCF.
	// SCF function namespace. This parameter takes effect when `service_config_type` is `SCF`.
	ServiceConfigScfFunctionNamespace *string `json:"serviceConfigScfFunctionNamespace,omitempty" tf:"service_config_scf_function_namespace,omitempty"`

	// SCF function version. This parameter takes effect when service_config_type is SCF.
	// SCF function version. This parameter takes effect when `service_config_type` is `SCF`.
	ServiceConfigScfFunctionQualifier *string `json:"serviceConfigScfFunctionQualifier,omitempty" tf:"service_config_scf_function_qualifier,omitempty"`

	// Scf function type. Effective when the backend type is SCF. Support Event Triggering (EVENT) and HTTP Direct Cloud Function (HTTP).
	// Scf function type. Effective when the backend type is SCF. Support Event Triggering (EVENT) and HTTP Direct Cloud Function (HTTP).
	ServiceConfigScfFunctionType *string `json:"serviceConfigScfFunctionType,omitempty" tf:"service_config_scf_function_type,omitempty"`

	// Whether to enable response integration. Effective when the backend type is SCF.
	// Whether to enable response integration. Effective when the backend type is SCF.
	ServiceConfigScfIsIntegratedResponse *bool `json:"serviceConfigScfIsIntegratedResponse,omitempty" tf:"service_config_scf_is_integrated_response,omitempty"`

	// API backend service timeout period in seconds. Default value: 5.
	// API backend service timeout period in seconds. Default value: `5`.
	ServiceConfigTimeout *float64 `json:"serviceConfigTimeout,omitempty" tf:"service_config_timeout,omitempty"`

	// The backend service type of the API. Supports HTTP, MOCK, TSF, SCF, WEBSOCKET, COS, TARGET (internal testing).
	// The backend service type of the API. Supports HTTP, MOCK, TSF, SCF, WEBSOCKET, COS, TARGET (internal testing).
	ServiceConfigType *string `json:"serviceConfigType,omitempty" tf:"service_config_type,omitempty"`

	// The backend service URL of the API. If the ServiceType is HTTP, this parameter must be passed.
	// The backend service URL of the API. If the ServiceType is HTTP, this parameter must be passed.
	ServiceConfigURL *string `json:"serviceConfigUrl,omitempty" tf:"service_config_url,omitempty"`

	// Only required when binding to VPC channelsNote: This field may return null, indicating that a valid value cannot be obtained.
	// Only required when binding to VPC channelsNote: This field may return null, indicating that a valid value cannot be obtained.
	ServiceConfigUpstreamID *string `json:"serviceConfigUpstreamId,omitempty" tf:"service_config_upstream_id,omitempty"`

	// Unique VPC ID.
	// Unique VPC ID.
	ServiceConfigVPCID *string `json:"serviceConfigVpcId,omitempty" tf:"service_config_vpc_id,omitempty"`

	// Scf websocket cleaning function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleaning function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketCleanupFunctionName *string `json:"serviceConfigWebsocketCleanupFunctionName,omitempty" tf:"service_config_websocket_cleanup_function_name,omitempty"`

	// Scf websocket cleans up the function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleans up the function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketCleanupFunctionNamespace *string `json:"serviceConfigWebsocketCleanupFunctionNamespace,omitempty" tf:"service_config_websocket_cleanup_function_namespace,omitempty"`

	// Scf websocket cleaning function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleaning function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketCleanupFunctionQualifier *string `json:"serviceConfigWebsocketCleanupFunctionQualifier,omitempty" tf:"service_config_websocket_cleanup_function_qualifier,omitempty"`

	// Scf websocket registration function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket registration function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketRegisterFunctionName *string `json:"serviceConfigWebsocketRegisterFunctionName,omitempty" tf:"service_config_websocket_register_function_name,omitempty"`

	// Scf websocket registers function namespaces. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket registers function namespaces. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketRegisterFunctionNamespace *string `json:"serviceConfigWebsocketRegisterFunctionNamespace,omitempty" tf:"service_config_websocket_register_function_namespace,omitempty"`

	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketRegisterFunctionQualifier *string `json:"serviceConfigWebsocketRegisterFunctionQualifier,omitempty" tf:"service_config_websocket_register_function_qualifier,omitempty"`

	// Scf websocket transfer function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketTransportFunctionName *string `json:"serviceConfigWebsocketTransportFunctionName,omitempty" tf:"service_config_websocket_transport_function_name,omitempty"`

	// Scf websocket transfer function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketTransportFunctionNamespace *string `json:"serviceConfigWebsocketTransportFunctionNamespace,omitempty" tf:"service_config_websocket_transport_function_namespace,omitempty"`

	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketTransportFunctionQualifier *string `json:"serviceConfigWebsocketTransportFunctionQualifier,omitempty" tf:"service_config_websocket_transport_function_qualifier,omitempty"`

	// The backend service parameters of the API.
	// The backend service parameters of the API.
	ServiceParameters []ServiceParametersInitParameters `json:"serviceParameters,omitempty" tf:"service_parameters,omitempty"`

	// Health check configuration for microservices.
	// Health check configuration for microservices.
	ServiceTsfHealthCheckConf []ServiceTsfHealthCheckConfInitParameters `json:"serviceTsfHealthCheckConf,omitempty" tf:"service_tsf_health_check_conf,omitempty"`

	// Load balancing configuration for microservices.
	// Load balancing configuration for microservices.
	ServiceTsfLoadBalanceConf []ServiceTsfLoadBalanceConfInitParameters `json:"serviceTsfLoadBalanceConf,omitempty" tf:"service_tsf_load_balance_conf,omitempty"`

	// Tsf serverless namespace ID. (In internal testing).
	// Tsf serverless namespace ID. (In internal testing).
	TargetNamespaceID *string `json:"targetNamespaceId,omitempty" tf:"target_namespace_id,omitempty"`

	// Target type backend resource information. (Internal testing stage).
	// Target type backend resource information. (Internal testing stage).
	TargetServices []TargetServicesInitParameters `json:"targetServices,omitempty" tf:"target_services,omitempty"`

	// Target health check configuration. (Internal testing stage).
	// Target health check configuration. (Internal testing stage).
	TargetServicesHealthCheckConf []TargetServicesHealthCheckConfInitParameters `json:"targetServicesHealthCheckConf,omitempty" tf:"target_services_health_check_conf,omitempty"`

	// Target type load balancing configuration. (Internal testing stage).
	// Target type load balancing configuration. (Internal testing stage).
	TargetServicesLoadBalanceConf *float64 `json:"targetServicesLoadBalanceConf,omitempty" tf:"target_services_load_balance_conf,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	TestLimit *float64 `json:"testLimit,omitempty" tf:"test_limit,omitempty"`

	// The effective time of the EIAM application token, measured in seconds, defaults to 7200 seconds.
	// The effective time of the EIAM application token, measured in seconds, defaults to 7200 seconds.
	TokenTimeout *float64 `json:"tokenTimeout,omitempty" tf:"token_timeout,omitempty"`

	// User type.
	// User type.
	UserType *string `json:"userType,omitempty" tf:"user_type,omitempty"`
}

type ApiObservation struct {

	// When auth_type is OAUTH, this field is valid, NORMAL: Business API, OAUTH: Authorization API.
	// When `auth_type` is OAUTH, this field is valid, NORMAL: Business API, OAUTH: Authorization API.
	APIBusinessType *string `json:"apiBusinessType,omitempty" tf:"api_business_type,omitempty"`

	// Custom API description.
	// Custom API description.
	APIDesc *string `json:"apiDesc,omitempty" tf:"api_desc,omitempty"`

	// Custom API name.
	// Custom API name.
	APIName *string `json:"apiName,omitempty" tf:"api_name,omitempty"`

	// API type, supports NORMAL (regular API) and TSF (microservice API), defaults to NORMAL.
	// API type, supports NORMAL (regular API) and TSF (microservice API), defaults to NORMAL.
	APIType *string `json:"apiType,omitempty" tf:"api_type,omitempty"`

	// The unique ID of the associated authorization API takes effect when AuthType is OAUTH and ApiBusinessType is NORMAL. The unique ID of the oauth2.0 authorized API that identifies the business API binding.
	// The unique ID of the associated authorization API takes effect when AuthType is OAUTH and ApiBusinessType is NORMAL. The unique ID of the oauth2.0 authorized API that identifies the business API binding.
	AuthRelationAPIID *string `json:"authRelationApiId,omitempty" tf:"auth_relation_api_id,omitempty"`

	// API authentication type. Support SECRET (Key Pair Authentication), NONE (Authentication Exemption), OAUTH, APP (Application Authentication). The default is NONE.
	// API authentication type. Support SECRET (Key Pair Authentication), NONE (Authentication Exemption), OAUTH, APP (Application Authentication). The default is NONE.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// Constant parameter.
	// Constant parameter.
	ConstantParameters []ConstantParametersObservation `json:"constantParameters,omitempty" tf:"constant_parameters,omitempty"`

	// Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	// Creation time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// EIAM application ID.
	// EIAM application ID.
	EiamAppID *string `json:"eiamAppId,omitempty" tf:"eiam_app_id,omitempty"`

	// EIAM application type.
	// EIAM application type.
	EiamAppType *string `json:"eiamAppType,omitempty" tf:"eiam_app_type,omitempty"`

	// The EIAM application authentication type supports AuthenticationOnly, Authentication, and Authorization.
	// The EIAM application authentication type supports AuthenticationOnly, Authentication, and Authorization.
	EiamAuthType *string `json:"eiamAuthType,omitempty" tf:"eiam_auth_type,omitempty"`

	// Whether to enable CORS. Default value: true.
	// Whether to enable CORS. Default value: `true`.
	EnableCors *bool `json:"enableCors,omitempty" tf:"enable_cors,omitempty"`

	// Event bus ID.
	// Event bus ID.
	EventBusID *string `json:"eventBusId,omitempty" tf:"event_bus_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Whether to enable Base64 encoding will only take effect when the backend is scf.
	// Whether to enable Base64 encoding will only take effect when the backend is scf.
	IsBase64Encoded *bool `json:"isBase64Encoded,omitempty" tf:"is_base64_encoded,omitempty"`

	// Charge after starting debugging. (Cloud Market Reserved Fields).
	// Charge after starting debugging. (Cloud Market Reserved Fields).
	IsDebugAfterCharge *bool `json:"isDebugAfterCharge,omitempty" tf:"is_debug_after_charge,omitempty"`

	// Do you want to delete the custom response configuration error code? If it is not passed or False is passed, it will not be deleted. If True is passed, all custom response configuration error codes for this API will be deleted.
	// Do you want to delete the custom response configuration error code? If it is not passed or False is passed, it will not be deleted. If True is passed, all custom response configuration error codes for this API will be deleted.
	IsDeleteResponseErrorCodes *bool `json:"isDeleteResponseErrorCodes,omitempty" tf:"is_delete_response_error_codes,omitempty"`

	// API bound microservice list.
	// API bound microservice list.
	MicroServices []MicroServicesObservation `json:"microServices,omitempty" tf:"micro_services,omitempty"`

	// OAuth configuration. Effective when AuthType is OAUTH.
	// OAuth configuration. Effective when AuthType is OAUTH.
	OauthConfig []OauthConfigObservation `json:"oauthConfig,omitempty" tf:"oauth_config,omitempty"`

	// Owner of resources.
	// Owner of resources.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	PreLimit *float64 `json:"preLimit,omitempty" tf:"pre_limit,omitempty"`

	// API frontend request type. Valid values: HTTP, WEBSOCKET. Default value: HTTP.
	// API frontend request type. Valid values: `HTTP`, `WEBSOCKET`. Default value: `HTTP`.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	ReleaseLimit *float64 `json:"releaseLimit,omitempty" tf:"release_limit,omitempty"`

	// Request frontend method configuration. Valid values: GET,POST,PUT,DELETE,HEAD,ANY. Default value: GET.
	// Request frontend method configuration. Valid values: `GET`,`POST`,`PUT`,`DELETE`,`HEAD`,`ANY`. Default value: `GET`.
	RequestConfigMethod *string `json:"requestConfigMethod,omitempty" tf:"request_config_method,omitempty"`

	// Request frontend path configuration. Like /user/getinfo.
	// Request frontend path configuration. Like `/user/getinfo`.
	RequestConfigPath *string `json:"requestConfigPath,omitempty" tf:"request_config_path,omitempty"`

	// Frontend request parameters.
	// Frontend request parameters.
	RequestParameters []RequestParametersObservation `json:"requestParameters,omitempty" tf:"request_parameters,omitempty"`

	// Custom error code configuration. Must keep at least one after set.
	// Custom error code configuration. Must keep at least one after set.
	ResponseErrorCodes []ResponseErrorCodesObservation `json:"responseErrorCodes,omitempty" tf:"response_error_codes,omitempty"`

	// Response failure sample of custom response configuration.
	// Response failure sample of custom response configuration.
	ResponseFailExample *string `json:"responseFailExample,omitempty" tf:"response_fail_example,omitempty"`

	// Successful response sample of custom response configuration.
	// Successful response sample of custom response configuration.
	ResponseSuccessExample *string `json:"responseSuccessExample,omitempty" tf:"response_success_example,omitempty"`

	// Return type. Valid values: HTML, JSON, TEXT, BINARY, XML. Default value: HTML.
	// Return type. Valid values: `HTML`, `JSON`, `TEXT`, `BINARY`, `XML`. Default value: `HTML`.
	ResponseType *string `json:"responseType,omitempty" tf:"response_type,omitempty"`

	// API backend COS configuration. If ServiceType is COS, then this parameter must be passed.Note: This field may return null, indicating that a valid value cannot be obtained.
	// API backend COS configuration. If ServiceType is COS, then this parameter must be passed.Note: This field may return null, indicating that a valid value cannot be obtained.
	ServiceConfigCosConfig []ServiceConfigCosConfigObservation `json:"serviceConfigCosConfig,omitempty" tf:"service_config_cos_config,omitempty"`

	// API backend service request method, such as GET. If service_config_type is HTTP, this parameter will be required. The frontend request_config_method and backend method service_config_method can be different.
	// API backend service request method, such as `GET`. If `service_config_type` is `HTTP`, this parameter will be required. The frontend `request_config_method` and backend method `service_config_method` can be different.
	ServiceConfigMethod *string `json:"serviceConfigMethod,omitempty" tf:"service_config_method,omitempty"`

	// Returned information of API backend mocking. This parameter is required when service_config_type is MOCK.
	// Returned information of API backend mocking. This parameter is required when `service_config_type` is `MOCK`.
	ServiceConfigMockReturnMessage *string `json:"serviceConfigMockReturnMessage,omitempty" tf:"service_config_mock_return_message,omitempty"`

	// API backend service path, such as /path. If service_config_type is HTTP, this parameter will be required. The frontend request_config_path and backend path service_config_path can be different.
	// API backend service path, such as /path. If `service_config_type` is `HTTP`, this parameter will be required. The frontend `request_config_path` and backend path `service_config_path` can be different.
	ServiceConfigPath *string `json:"serviceConfigPath,omitempty" tf:"service_config_path,omitempty"`

	// Backend type. Effective when enabling vpc, currently supported types are clb, cvm, and upstream.
	// Backend type. Effective when enabling vpc, currently supported types are clb, cvm, and upstream.
	ServiceConfigProduct *string `json:"serviceConfigProduct,omitempty" tf:"service_config_product,omitempty"`

	// SCF function name. This parameter takes effect when service_config_type is SCF.
	// SCF function name. This parameter takes effect when `service_config_type` is `SCF`.
	ServiceConfigScfFunctionName *string `json:"serviceConfigScfFunctionName,omitempty" tf:"service_config_scf_function_name,omitempty"`

	// SCF function namespace. This parameter takes effect when service_config_type is SCF.
	// SCF function namespace. This parameter takes effect when `service_config_type` is `SCF`.
	ServiceConfigScfFunctionNamespace *string `json:"serviceConfigScfFunctionNamespace,omitempty" tf:"service_config_scf_function_namespace,omitempty"`

	// SCF function version. This parameter takes effect when service_config_type is SCF.
	// SCF function version. This parameter takes effect when `service_config_type` is `SCF`.
	ServiceConfigScfFunctionQualifier *string `json:"serviceConfigScfFunctionQualifier,omitempty" tf:"service_config_scf_function_qualifier,omitempty"`

	// Scf function type. Effective when the backend type is SCF. Support Event Triggering (EVENT) and HTTP Direct Cloud Function (HTTP).
	// Scf function type. Effective when the backend type is SCF. Support Event Triggering (EVENT) and HTTP Direct Cloud Function (HTTP).
	ServiceConfigScfFunctionType *string `json:"serviceConfigScfFunctionType,omitempty" tf:"service_config_scf_function_type,omitempty"`

	// Whether to enable response integration. Effective when the backend type is SCF.
	// Whether to enable response integration. Effective when the backend type is SCF.
	ServiceConfigScfIsIntegratedResponse *bool `json:"serviceConfigScfIsIntegratedResponse,omitempty" tf:"service_config_scf_is_integrated_response,omitempty"`

	// API backend service timeout period in seconds. Default value: 5.
	// API backend service timeout period in seconds. Default value: `5`.
	ServiceConfigTimeout *float64 `json:"serviceConfigTimeout,omitempty" tf:"service_config_timeout,omitempty"`

	// The backend service type of the API. Supports HTTP, MOCK, TSF, SCF, WEBSOCKET, COS, TARGET (internal testing).
	// The backend service type of the API. Supports HTTP, MOCK, TSF, SCF, WEBSOCKET, COS, TARGET (internal testing).
	ServiceConfigType *string `json:"serviceConfigType,omitempty" tf:"service_config_type,omitempty"`

	// The backend service URL of the API. If the ServiceType is HTTP, this parameter must be passed.
	// The backend service URL of the API. If the ServiceType is HTTP, this parameter must be passed.
	ServiceConfigURL *string `json:"serviceConfigUrl,omitempty" tf:"service_config_url,omitempty"`

	// Only required when binding to VPC channelsNote: This field may return null, indicating that a valid value cannot be obtained.
	// Only required when binding to VPC channelsNote: This field may return null, indicating that a valid value cannot be obtained.
	ServiceConfigUpstreamID *string `json:"serviceConfigUpstreamId,omitempty" tf:"service_config_upstream_id,omitempty"`

	// Unique VPC ID.
	// Unique VPC ID.
	ServiceConfigVPCID *string `json:"serviceConfigVpcId,omitempty" tf:"service_config_vpc_id,omitempty"`

	// Scf websocket cleaning function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleaning function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketCleanupFunctionName *string `json:"serviceConfigWebsocketCleanupFunctionName,omitempty" tf:"service_config_websocket_cleanup_function_name,omitempty"`

	// Scf websocket cleans up the function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleans up the function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketCleanupFunctionNamespace *string `json:"serviceConfigWebsocketCleanupFunctionNamespace,omitempty" tf:"service_config_websocket_cleanup_function_namespace,omitempty"`

	// Scf websocket cleaning function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleaning function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketCleanupFunctionQualifier *string `json:"serviceConfigWebsocketCleanupFunctionQualifier,omitempty" tf:"service_config_websocket_cleanup_function_qualifier,omitempty"`

	// Scf websocket registration function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket registration function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketRegisterFunctionName *string `json:"serviceConfigWebsocketRegisterFunctionName,omitempty" tf:"service_config_websocket_register_function_name,omitempty"`

	// Scf websocket registers function namespaces. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket registers function namespaces. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketRegisterFunctionNamespace *string `json:"serviceConfigWebsocketRegisterFunctionNamespace,omitempty" tf:"service_config_websocket_register_function_namespace,omitempty"`

	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketRegisterFunctionQualifier *string `json:"serviceConfigWebsocketRegisterFunctionQualifier,omitempty" tf:"service_config_websocket_register_function_qualifier,omitempty"`

	// Scf websocket transfer function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketTransportFunctionName *string `json:"serviceConfigWebsocketTransportFunctionName,omitempty" tf:"service_config_websocket_transport_function_name,omitempty"`

	// Scf websocket transfer function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketTransportFunctionNamespace *string `json:"serviceConfigWebsocketTransportFunctionNamespace,omitempty" tf:"service_config_websocket_transport_function_namespace,omitempty"`

	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	ServiceConfigWebsocketTransportFunctionQualifier *string `json:"serviceConfigWebsocketTransportFunctionQualifier,omitempty" tf:"service_config_websocket_transport_function_qualifier,omitempty"`

	// The unique ID of the service where the API is located. Refer to resource tencentcloud_api_gateway_service.
	// The unique ID of the service where the API is located. Refer to resource `tencentcloud_api_gateway_service`.
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`

	// The backend service parameters of the API.
	// The backend service parameters of the API.
	ServiceParameters []ServiceParametersObservation `json:"serviceParameters,omitempty" tf:"service_parameters,omitempty"`

	// Health check configuration for microservices.
	// Health check configuration for microservices.
	ServiceTsfHealthCheckConf []ServiceTsfHealthCheckConfObservation `json:"serviceTsfHealthCheckConf,omitempty" tf:"service_tsf_health_check_conf,omitempty"`

	// Load balancing configuration for microservices.
	// Load balancing configuration for microservices.
	ServiceTsfLoadBalanceConf []ServiceTsfLoadBalanceConfObservation `json:"serviceTsfLoadBalanceConf,omitempty" tf:"service_tsf_load_balance_conf,omitempty"`

	// Tsf serverless namespace ID. (In internal testing).
	// Tsf serverless namespace ID. (In internal testing).
	TargetNamespaceID *string `json:"targetNamespaceId,omitempty" tf:"target_namespace_id,omitempty"`

	// Target type backend resource information. (Internal testing stage).
	// Target type backend resource information. (Internal testing stage).
	TargetServices []TargetServicesObservation `json:"targetServices,omitempty" tf:"target_services,omitempty"`

	// Target health check configuration. (Internal testing stage).
	// Target health check configuration. (Internal testing stage).
	TargetServicesHealthCheckConf []TargetServicesHealthCheckConfObservation `json:"targetServicesHealthCheckConf,omitempty" tf:"target_services_health_check_conf,omitempty"`

	// Target type load balancing configuration. (Internal testing stage).
	// Target type load balancing configuration. (Internal testing stage).
	TargetServicesLoadBalanceConf *float64 `json:"targetServicesLoadBalanceConf,omitempty" tf:"target_services_load_balance_conf,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	TestLimit *float64 `json:"testLimit,omitempty" tf:"test_limit,omitempty"`

	// The effective time of the EIAM application token, measured in seconds, defaults to 7200 seconds.
	// The effective time of the EIAM application token, measured in seconds, defaults to 7200 seconds.
	TokenTimeout *float64 `json:"tokenTimeout,omitempty" tf:"token_timeout,omitempty"`

	// Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	// Last modified time in the format of YYYY-MM-DDThh:mm:ssZ according to ISO 8601 standard. UTC time is used.
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`

	// User type.
	// User type.
	UserType *string `json:"userType,omitempty" tf:"user_type,omitempty"`
}

type ApiParameters struct {

	// When auth_type is OAUTH, this field is valid, NORMAL: Business API, OAUTH: Authorization API.
	// When `auth_type` is OAUTH, this field is valid, NORMAL: Business API, OAUTH: Authorization API.
	// +kubebuilder:validation:Optional
	APIBusinessType *string `json:"apiBusinessType,omitempty" tf:"api_business_type,omitempty"`

	// Custom API description.
	// Custom API description.
	// +kubebuilder:validation:Optional
	APIDesc *string `json:"apiDesc,omitempty" tf:"api_desc,omitempty"`

	// Custom API name.
	// Custom API name.
	// +kubebuilder:validation:Optional
	APIName *string `json:"apiName,omitempty" tf:"api_name,omitempty"`

	// API type, supports NORMAL (regular API) and TSF (microservice API), defaults to NORMAL.
	// API type, supports NORMAL (regular API) and TSF (microservice API), defaults to NORMAL.
	// +kubebuilder:validation:Optional
	APIType *string `json:"apiType,omitempty" tf:"api_type,omitempty"`

	// The unique ID of the associated authorization API takes effect when AuthType is OAUTH and ApiBusinessType is NORMAL. The unique ID of the oauth2.0 authorized API that identifies the business API binding.
	// The unique ID of the associated authorization API takes effect when AuthType is OAUTH and ApiBusinessType is NORMAL. The unique ID of the oauth2.0 authorized API that identifies the business API binding.
	// +kubebuilder:validation:Optional
	AuthRelationAPIID *string `json:"authRelationApiId,omitempty" tf:"auth_relation_api_id,omitempty"`

	// API authentication type. Support SECRET (Key Pair Authentication), NONE (Authentication Exemption), OAUTH, APP (Application Authentication). The default is NONE.
	// API authentication type. Support SECRET (Key Pair Authentication), NONE (Authentication Exemption), OAUTH, APP (Application Authentication). The default is NONE.
	// +kubebuilder:validation:Optional
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// Constant parameter.
	// Constant parameter.
	// +kubebuilder:validation:Optional
	ConstantParameters []ConstantParametersParameters `json:"constantParameters,omitempty" tf:"constant_parameters,omitempty"`

	// EIAM application ID.
	// EIAM application ID.
	// +kubebuilder:validation:Optional
	EiamAppID *string `json:"eiamAppId,omitempty" tf:"eiam_app_id,omitempty"`

	// EIAM application type.
	// EIAM application type.
	// +kubebuilder:validation:Optional
	EiamAppType *string `json:"eiamAppType,omitempty" tf:"eiam_app_type,omitempty"`

	// The EIAM application authentication type supports AuthenticationOnly, Authentication, and Authorization.
	// The EIAM application authentication type supports AuthenticationOnly, Authentication, and Authorization.
	// +kubebuilder:validation:Optional
	EiamAuthType *string `json:"eiamAuthType,omitempty" tf:"eiam_auth_type,omitempty"`

	// Whether to enable CORS. Default value: true.
	// Whether to enable CORS. Default value: `true`.
	// +kubebuilder:validation:Optional
	EnableCors *bool `json:"enableCors,omitempty" tf:"enable_cors,omitempty"`

	// Event bus ID.
	// Event bus ID.
	// +kubebuilder:validation:Optional
	EventBusID *string `json:"eventBusId,omitempty" tf:"event_bus_id,omitempty"`

	// Whether to enable Base64 encoding will only take effect when the backend is scf.
	// Whether to enable Base64 encoding will only take effect when the backend is scf.
	// +kubebuilder:validation:Optional
	IsBase64Encoded *bool `json:"isBase64Encoded,omitempty" tf:"is_base64_encoded,omitempty"`

	// Charge after starting debugging. (Cloud Market Reserved Fields).
	// Charge after starting debugging. (Cloud Market Reserved Fields).
	// +kubebuilder:validation:Optional
	IsDebugAfterCharge *bool `json:"isDebugAfterCharge,omitempty" tf:"is_debug_after_charge,omitempty"`

	// Do you want to delete the custom response configuration error code? If it is not passed or False is passed, it will not be deleted. If True is passed, all custom response configuration error codes for this API will be deleted.
	// Do you want to delete the custom response configuration error code? If it is not passed or False is passed, it will not be deleted. If True is passed, all custom response configuration error codes for this API will be deleted.
	// +kubebuilder:validation:Optional
	IsDeleteResponseErrorCodes *bool `json:"isDeleteResponseErrorCodes,omitempty" tf:"is_delete_response_error_codes,omitempty"`

	// API bound microservice list.
	// API bound microservice list.
	// +kubebuilder:validation:Optional
	MicroServices []MicroServicesParameters `json:"microServices,omitempty" tf:"micro_services,omitempty"`

	// OAuth configuration. Effective when AuthType is OAUTH.
	// OAuth configuration. Effective when AuthType is OAUTH.
	// +kubebuilder:validation:Optional
	OauthConfig []OauthConfigParameters `json:"oauthConfig,omitempty" tf:"oauth_config,omitempty"`

	// Owner of resources.
	// Owner of resources.
	// +kubebuilder:validation:Optional
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	// +kubebuilder:validation:Optional
	PreLimit *float64 `json:"preLimit,omitempty" tf:"pre_limit,omitempty"`

	// API frontend request type. Valid values: HTTP, WEBSOCKET. Default value: HTTP.
	// API frontend request type. Valid values: `HTTP`, `WEBSOCKET`. Default value: `HTTP`.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	// +kubebuilder:validation:Optional
	ReleaseLimit *float64 `json:"releaseLimit,omitempty" tf:"release_limit,omitempty"`

	// Request frontend method configuration. Valid values: GET,POST,PUT,DELETE,HEAD,ANY. Default value: GET.
	// Request frontend method configuration. Valid values: `GET`,`POST`,`PUT`,`DELETE`,`HEAD`,`ANY`. Default value: `GET`.
	// +kubebuilder:validation:Optional
	RequestConfigMethod *string `json:"requestConfigMethod,omitempty" tf:"request_config_method,omitempty"`

	// Request frontend path configuration. Like /user/getinfo.
	// Request frontend path configuration. Like `/user/getinfo`.
	// +kubebuilder:validation:Optional
	RequestConfigPath *string `json:"requestConfigPath,omitempty" tf:"request_config_path,omitempty"`

	// Frontend request parameters.
	// Frontend request parameters.
	// +kubebuilder:validation:Optional
	RequestParameters []RequestParametersParameters `json:"requestParameters,omitempty" tf:"request_parameters,omitempty"`

	// Custom error code configuration. Must keep at least one after set.
	// Custom error code configuration. Must keep at least one after set.
	// +kubebuilder:validation:Optional
	ResponseErrorCodes []ResponseErrorCodesParameters `json:"responseErrorCodes,omitempty" tf:"response_error_codes,omitempty"`

	// Response failure sample of custom response configuration.
	// Response failure sample of custom response configuration.
	// +kubebuilder:validation:Optional
	ResponseFailExample *string `json:"responseFailExample,omitempty" tf:"response_fail_example,omitempty"`

	// Successful response sample of custom response configuration.
	// Successful response sample of custom response configuration.
	// +kubebuilder:validation:Optional
	ResponseSuccessExample *string `json:"responseSuccessExample,omitempty" tf:"response_success_example,omitempty"`

	// Return type. Valid values: HTML, JSON, TEXT, BINARY, XML. Default value: HTML.
	// Return type. Valid values: `HTML`, `JSON`, `TEXT`, `BINARY`, `XML`. Default value: `HTML`.
	// +kubebuilder:validation:Optional
	ResponseType *string `json:"responseType,omitempty" tf:"response_type,omitempty"`

	// API backend COS configuration. If ServiceType is COS, then this parameter must be passed.Note: This field may return null, indicating that a valid value cannot be obtained.
	// API backend COS configuration. If ServiceType is COS, then this parameter must be passed.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	ServiceConfigCosConfig []ServiceConfigCosConfigParameters `json:"serviceConfigCosConfig,omitempty" tf:"service_config_cos_config,omitempty"`

	// API backend service request method, such as GET. If service_config_type is HTTP, this parameter will be required. The frontend request_config_method and backend method service_config_method can be different.
	// API backend service request method, such as `GET`. If `service_config_type` is `HTTP`, this parameter will be required. The frontend `request_config_method` and backend method `service_config_method` can be different.
	// +kubebuilder:validation:Optional
	ServiceConfigMethod *string `json:"serviceConfigMethod,omitempty" tf:"service_config_method,omitempty"`

	// Returned information of API backend mocking. This parameter is required when service_config_type is MOCK.
	// Returned information of API backend mocking. This parameter is required when `service_config_type` is `MOCK`.
	// +kubebuilder:validation:Optional
	ServiceConfigMockReturnMessage *string `json:"serviceConfigMockReturnMessage,omitempty" tf:"service_config_mock_return_message,omitempty"`

	// API backend service path, such as /path. If service_config_type is HTTP, this parameter will be required. The frontend request_config_path and backend path service_config_path can be different.
	// API backend service path, such as /path. If `service_config_type` is `HTTP`, this parameter will be required. The frontend `request_config_path` and backend path `service_config_path` can be different.
	// +kubebuilder:validation:Optional
	ServiceConfigPath *string `json:"serviceConfigPath,omitempty" tf:"service_config_path,omitempty"`

	// Backend type. Effective when enabling vpc, currently supported types are clb, cvm, and upstream.
	// Backend type. Effective when enabling vpc, currently supported types are clb, cvm, and upstream.
	// +kubebuilder:validation:Optional
	ServiceConfigProduct *string `json:"serviceConfigProduct,omitempty" tf:"service_config_product,omitempty"`

	// SCF function name. This parameter takes effect when service_config_type is SCF.
	// SCF function name. This parameter takes effect when `service_config_type` is `SCF`.
	// +kubebuilder:validation:Optional
	ServiceConfigScfFunctionName *string `json:"serviceConfigScfFunctionName,omitempty" tf:"service_config_scf_function_name,omitempty"`

	// SCF function namespace. This parameter takes effect when service_config_type is SCF.
	// SCF function namespace. This parameter takes effect when `service_config_type` is `SCF`.
	// +kubebuilder:validation:Optional
	ServiceConfigScfFunctionNamespace *string `json:"serviceConfigScfFunctionNamespace,omitempty" tf:"service_config_scf_function_namespace,omitempty"`

	// SCF function version. This parameter takes effect when service_config_type is SCF.
	// SCF function version. This parameter takes effect when `service_config_type` is `SCF`.
	// +kubebuilder:validation:Optional
	ServiceConfigScfFunctionQualifier *string `json:"serviceConfigScfFunctionQualifier,omitempty" tf:"service_config_scf_function_qualifier,omitempty"`

	// Scf function type. Effective when the backend type is SCF. Support Event Triggering (EVENT) and HTTP Direct Cloud Function (HTTP).
	// Scf function type. Effective when the backend type is SCF. Support Event Triggering (EVENT) and HTTP Direct Cloud Function (HTTP).
	// +kubebuilder:validation:Optional
	ServiceConfigScfFunctionType *string `json:"serviceConfigScfFunctionType,omitempty" tf:"service_config_scf_function_type,omitempty"`

	// Whether to enable response integration. Effective when the backend type is SCF.
	// Whether to enable response integration. Effective when the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigScfIsIntegratedResponse *bool `json:"serviceConfigScfIsIntegratedResponse,omitempty" tf:"service_config_scf_is_integrated_response,omitempty"`

	// API backend service timeout period in seconds. Default value: 5.
	// API backend service timeout period in seconds. Default value: `5`.
	// +kubebuilder:validation:Optional
	ServiceConfigTimeout *float64 `json:"serviceConfigTimeout,omitempty" tf:"service_config_timeout,omitempty"`

	// The backend service type of the API. Supports HTTP, MOCK, TSF, SCF, WEBSOCKET, COS, TARGET (internal testing).
	// The backend service type of the API. Supports HTTP, MOCK, TSF, SCF, WEBSOCKET, COS, TARGET (internal testing).
	// +kubebuilder:validation:Optional
	ServiceConfigType *string `json:"serviceConfigType,omitempty" tf:"service_config_type,omitempty"`

	// The backend service URL of the API. If the ServiceType is HTTP, this parameter must be passed.
	// The backend service URL of the API. If the ServiceType is HTTP, this parameter must be passed.
	// +kubebuilder:validation:Optional
	ServiceConfigURL *string `json:"serviceConfigUrl,omitempty" tf:"service_config_url,omitempty"`

	// Only required when binding to VPC channelsNote: This field may return null, indicating that a valid value cannot be obtained.
	// Only required when binding to VPC channelsNote: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	ServiceConfigUpstreamID *string `json:"serviceConfigUpstreamId,omitempty" tf:"service_config_upstream_id,omitempty"`

	// Unique VPC ID.
	// Unique VPC ID.
	// +kubebuilder:validation:Optional
	ServiceConfigVPCID *string `json:"serviceConfigVpcId,omitempty" tf:"service_config_vpc_id,omitempty"`

	// Scf websocket cleaning function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleaning function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketCleanupFunctionName *string `json:"serviceConfigWebsocketCleanupFunctionName,omitempty" tf:"service_config_websocket_cleanup_function_name,omitempty"`

	// Scf websocket cleans up the function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleans up the function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketCleanupFunctionNamespace *string `json:"serviceConfigWebsocketCleanupFunctionNamespace,omitempty" tf:"service_config_websocket_cleanup_function_namespace,omitempty"`

	// Scf websocket cleaning function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket cleaning function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketCleanupFunctionQualifier *string `json:"serviceConfigWebsocketCleanupFunctionQualifier,omitempty" tf:"service_config_websocket_cleanup_function_qualifier,omitempty"`

	// Scf websocket registration function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket registration function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketRegisterFunctionName *string `json:"serviceConfigWebsocketRegisterFunctionName,omitempty" tf:"service_config_websocket_register_function_name,omitempty"`

	// Scf websocket registers function namespaces. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket registers function namespaces. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketRegisterFunctionNamespace *string `json:"serviceConfigWebsocketRegisterFunctionNamespace,omitempty" tf:"service_config_websocket_register_function_namespace,omitempty"`

	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketRegisterFunctionQualifier *string `json:"serviceConfigWebsocketRegisterFunctionQualifier,omitempty" tf:"service_config_websocket_register_function_qualifier,omitempty"`

	// Scf websocket transfer function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketTransportFunctionName *string `json:"serviceConfigWebsocketTransportFunctionName,omitempty" tf:"service_config_websocket_transport_function_name,omitempty"`

	// Scf websocket transfer function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function namespace. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketTransportFunctionNamespace *string `json:"serviceConfigWebsocketTransportFunctionNamespace,omitempty" tf:"service_config_websocket_transport_function_namespace,omitempty"`

	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// Scf websocket transfer function version. It takes effect when the current end type is WEBSOCKET and the backend type is SCF.
	// +kubebuilder:validation:Optional
	ServiceConfigWebsocketTransportFunctionQualifier *string `json:"serviceConfigWebsocketTransportFunctionQualifier,omitempty" tf:"service_config_websocket_transport_function_qualifier,omitempty"`

	// The unique ID of the service where the API is located. Refer to resource tencentcloud_api_gateway_service.
	// The unique ID of the service where the API is located. Refer to resource `tencentcloud_api_gateway_service`.
	// +crossplane:generate:reference:type=Service
	// +kubebuilder:validation:Optional
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`

	// Reference to a Service to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDRef *v1.Reference `json:"serviceIdRef,omitempty" tf:"-"`

	// Selector for a Service to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDSelector *v1.Selector `json:"serviceIdSelector,omitempty" tf:"-"`

	// The backend service parameters of the API.
	// The backend service parameters of the API.
	// +kubebuilder:validation:Optional
	ServiceParameters []ServiceParametersParameters `json:"serviceParameters,omitempty" tf:"service_parameters,omitempty"`

	// Health check configuration for microservices.
	// Health check configuration for microservices.
	// +kubebuilder:validation:Optional
	ServiceTsfHealthCheckConf []ServiceTsfHealthCheckConfParameters `json:"serviceTsfHealthCheckConf,omitempty" tf:"service_tsf_health_check_conf,omitempty"`

	// Load balancing configuration for microservices.
	// Load balancing configuration for microservices.
	// +kubebuilder:validation:Optional
	ServiceTsfLoadBalanceConf []ServiceTsfLoadBalanceConfParameters `json:"serviceTsfLoadBalanceConf,omitempty" tf:"service_tsf_load_balance_conf,omitempty"`

	// Tsf serverless namespace ID. (In internal testing).
	// Tsf serverless namespace ID. (In internal testing).
	// +kubebuilder:validation:Optional
	TargetNamespaceID *string `json:"targetNamespaceId,omitempty" tf:"target_namespace_id,omitempty"`

	// Target type backend resource information. (Internal testing stage).
	// Target type backend resource information. (Internal testing stage).
	// +kubebuilder:validation:Optional
	TargetServices []TargetServicesParameters `json:"targetServices,omitempty" tf:"target_services,omitempty"`

	// Target health check configuration. (Internal testing stage).
	// Target health check configuration. (Internal testing stage).
	// +kubebuilder:validation:Optional
	TargetServicesHealthCheckConf []TargetServicesHealthCheckConfParameters `json:"targetServicesHealthCheckConf,omitempty" tf:"target_services_health_check_conf,omitempty"`

	// Target type load balancing configuration. (Internal testing stage).
	// Target type load balancing configuration. (Internal testing stage).
	// +kubebuilder:validation:Optional
	TargetServicesLoadBalanceConf *float64 `json:"targetServicesLoadBalanceConf,omitempty" tf:"target_services_load_balance_conf,omitempty"`

	// API QPS value. Enter a positive number to limit the API query rate per second QPS.
	// API QPS value. Enter a positive number to limit the API query rate per second `QPS`.
	// +kubebuilder:validation:Optional
	TestLimit *float64 `json:"testLimit,omitempty" tf:"test_limit,omitempty"`

	// The effective time of the EIAM application token, measured in seconds, defaults to 7200 seconds.
	// The effective time of the EIAM application token, measured in seconds, defaults to 7200 seconds.
	// +kubebuilder:validation:Optional
	TokenTimeout *float64 `json:"tokenTimeout,omitempty" tf:"token_timeout,omitempty"`

	// User type.
	// User type.
	// +kubebuilder:validation:Optional
	UserType *string `json:"userType,omitempty" tf:"user_type,omitempty"`
}

type ConstantParametersInitParameters struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`
}

type ConstantParametersObservation struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`
}

type ConstantParametersParameters struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Position *string `json:"position,omitempty" tf:"position,omitempty"`
}

type MicroServicesInitParameters struct {

	// Micro service cluster.
	// Micro service cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Microservice name.
	// Microservice name.
	MicroServiceName *string `json:"microServiceName,omitempty" tf:"micro_service_name,omitempty"`

	// Microservice namespace.
	// Microservice namespace.
	NamespaceID *string `json:"namespaceId,omitempty" tf:"namespace_id,omitempty"`
}

type MicroServicesObservation struct {

	// Micro service cluster.
	// Micro service cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Microservice name.
	// Microservice name.
	MicroServiceName *string `json:"microServiceName,omitempty" tf:"micro_service_name,omitempty"`

	// Microservice namespace.
	// Microservice namespace.
	NamespaceID *string `json:"namespaceId,omitempty" tf:"namespace_id,omitempty"`
}

type MicroServicesParameters struct {

	// Micro service cluster.
	// Micro service cluster.
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId" tf:"cluster_id,omitempty"`

	// Microservice name.
	// Microservice name.
	// +kubebuilder:validation:Optional
	MicroServiceName *string `json:"microServiceName" tf:"micro_service_name,omitempty"`

	// Microservice namespace.
	// Microservice namespace.
	// +kubebuilder:validation:Optional
	NamespaceID *string `json:"namespaceId" tf:"namespace_id,omitempty"`
}

type OauthConfigInitParameters struct {

	// Redirect address, used to guide users in login operations.
	// Redirect address, used to guide users in login operations.
	LoginRedirectURL *string `json:"loginRedirectUrl,omitempty" tf:"login_redirect_url,omitempty"`

	// Public key, used to verify user tokens.
	// Public key, used to verify user tokens.
	PublicKey *string `json:"publicKey,omitempty" tf:"public_key,omitempty"`

	// Token passes the position.
	// Token passes the position.
	TokenLocation *string `json:"tokenLocation,omitempty" tf:"token_location,omitempty"`
}

type OauthConfigObservation struct {

	// Redirect address, used to guide users in login operations.
	// Redirect address, used to guide users in login operations.
	LoginRedirectURL *string `json:"loginRedirectUrl,omitempty" tf:"login_redirect_url,omitempty"`

	// Public key, used to verify user tokens.
	// Public key, used to verify user tokens.
	PublicKey *string `json:"publicKey,omitempty" tf:"public_key,omitempty"`

	// Token passes the position.
	// Token passes the position.
	TokenLocation *string `json:"tokenLocation,omitempty" tf:"token_location,omitempty"`
}

type OauthConfigParameters struct {

	// Redirect address, used to guide users in login operations.
	// Redirect address, used to guide users in login operations.
	// +kubebuilder:validation:Optional
	LoginRedirectURL *string `json:"loginRedirectUrl,omitempty" tf:"login_redirect_url,omitempty"`

	// Public key, used to verify user tokens.
	// Public key, used to verify user tokens.
	// +kubebuilder:validation:Optional
	PublicKey *string `json:"publicKey" tf:"public_key,omitempty"`

	// Token passes the position.
	// Token passes the position.
	// +kubebuilder:validation:Optional
	TokenLocation *string `json:"tokenLocation" tf:"token_location,omitempty"`
}

type RequestParametersInitParameters struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter default value.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter description.
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter location.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// If this parameter required. Default value: false.
	// If this parameter required. Default value: `false`.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`

	// Parameter type.
	// Parameter type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RequestParametersObservation struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter default value.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter description.
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter location.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// If this parameter required. Default value: false.
	// If this parameter required. Default value: `false`.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`

	// Parameter type.
	// Parameter type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RequestParametersParameters struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter default value.
	// +kubebuilder:validation:Optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter description.
	// +kubebuilder:validation:Optional
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter location.
	// +kubebuilder:validation:Optional
	Position *string `json:"position" tf:"position,omitempty"`

	// If this parameter required. Default value: false.
	// If this parameter required. Default value: `false`.
	// +kubebuilder:validation:Optional
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`

	// Parameter type.
	// Parameter type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type ResponseErrorCodesInitParameters struct {

	// Custom response configuration error code.
	// Custom response configuration error code.
	Code *float64 `json:"code,omitempty" tf:"code,omitempty"`

	// Custom error code conversion.
	// Custom error code conversion.
	ConvertedCode *float64 `json:"convertedCode,omitempty" tf:"converted_code,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter description.
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Custom response configuration error message.
	// Custom response configuration error message.
	Msg *string `json:"msg,omitempty" tf:"msg,omitempty"`

	// Whether to enable error code conversion. Default value: false.
	// Whether to enable error code conversion. Default value: `false`.
	NeedConvert *bool `json:"needConvert,omitempty" tf:"need_convert,omitempty"`
}

type ResponseErrorCodesObservation struct {

	// Custom response configuration error code.
	// Custom response configuration error code.
	Code *float64 `json:"code,omitempty" tf:"code,omitempty"`

	// Custom error code conversion.
	// Custom error code conversion.
	ConvertedCode *float64 `json:"convertedCode,omitempty" tf:"converted_code,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter description.
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Custom response configuration error message.
	// Custom response configuration error message.
	Msg *string `json:"msg,omitempty" tf:"msg,omitempty"`

	// Whether to enable error code conversion. Default value: false.
	// Whether to enable error code conversion. Default value: `false`.
	NeedConvert *bool `json:"needConvert,omitempty" tf:"need_convert,omitempty"`
}

type ResponseErrorCodesParameters struct {

	// Custom response configuration error code.
	// Custom response configuration error code.
	// +kubebuilder:validation:Optional
	Code *float64 `json:"code" tf:"code,omitempty"`

	// Custom error code conversion.
	// Custom error code conversion.
	// +kubebuilder:validation:Optional
	ConvertedCode *float64 `json:"convertedCode,omitempty" tf:"converted_code,omitempty"`

	// Constant parameter description. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Parameter description.
	// +kubebuilder:validation:Optional
	Desc *string `json:"desc,omitempty" tf:"desc,omitempty"`

	// Custom response configuration error message.
	// Custom response configuration error message.
	// +kubebuilder:validation:Optional
	Msg *string `json:"msg" tf:"msg,omitempty"`

	// Whether to enable error code conversion. Default value: false.
	// Whether to enable error code conversion. Default value: `false`.
	// +kubebuilder:validation:Optional
	NeedConvert *bool `json:"needConvert,omitempty" tf:"need_convert,omitempty"`
}

type ServiceConfigCosConfigInitParameters struct {

	// The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
	Authorization *bool `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
	// Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
	PathMatchMode *string `json:"pathMatchMode,omitempty" tf:"path_match_mode,omitempty"`
}

type ServiceConfigCosConfigObservation struct {

	// The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
	Authorization *bool `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name,omitempty"`

	// Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
	// Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
	PathMatchMode *string `json:"pathMatchMode,omitempty" tf:"path_match_mode,omitempty"`
}

type ServiceConfigCosConfigParameters struct {

	// The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The API calls the backend COS method, and the optional values for the front-end request method and Action are:GET: GetObjectPUT: PutObjectPOST: PostObject, AppendObjectHEAD: HeadObjectDELETE: DeleteObject.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The API calls the signature switch of the backend COS, which defaults to false.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Authorization *bool `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The bucket name of the API backend COS.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	BucketName *string `json:"bucketName" tf:"bucket_name,omitempty"`

	// Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
	// Path matching mode for API backend COS, optional values:BackEndPath: Backend path matchingFullPath: Full Path MatchingThe default value is: BackEndPathNote: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	PathMatchMode *string `json:"pathMatchMode,omitempty" tf:"path_match_mode,omitempty"`
}

type ServiceParametersInitParameters struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The default value for the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter name of the API. This parameter is only used when ServiceType is HTTP. The front and rear parameter names can be different.Note: This field may return null, indicating that a valid value cannot be obtained.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter location of the API, such as head. This parameter is only used when ServiceType is HTTP. The parameter positions at the front and rear ends can be configured differently.Note: This field may return null, indicating that a valid value cannot be obtained.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterDesc *string `json:"relevantRequestParameterDesc,omitempty" tf:"relevant_request_parameter_desc,omitempty"`

	// The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterName *string `json:"relevantRequestParameterName,omitempty" tf:"relevant_request_parameter_name,omitempty"`

	// The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterPosition *string `json:"relevantRequestParameterPosition,omitempty" tf:"relevant_request_parameter_position,omitempty"`

	// The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterType *string `json:"relevantRequestParameterType,omitempty" tf:"relevant_request_parameter_type,omitempty"`
}

type ServiceParametersObservation struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The default value for the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter name of the API. This parameter is only used when ServiceType is HTTP. The front and rear parameter names can be different.Note: This field may return null, indicating that a valid value cannot be obtained.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter location of the API, such as head. This parameter is only used when ServiceType is HTTP. The parameter positions at the front and rear ends can be configured differently.Note: This field may return null, indicating that a valid value cannot be obtained.
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterDesc *string `json:"relevantRequestParameterDesc,omitempty" tf:"relevant_request_parameter_desc,omitempty"`

	// The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterName *string `json:"relevantRequestParameterName,omitempty" tf:"relevant_request_parameter_name,omitempty"`

	// The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterPosition *string `json:"relevantRequestParameterPosition,omitempty" tf:"relevant_request_parameter_position,omitempty"`

	// The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	RelevantRequestParameterType *string `json:"relevantRequestParameterType,omitempty" tf:"relevant_request_parameter_type,omitempty"`
}

type ServiceParametersParameters struct {

	// Default value for constant parameters. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The default value for the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Constant parameter name. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter name of the API. This parameter is only used when ServiceType is HTTP. The front and rear parameter names can be different.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Constant parameter position. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter location of the API, such as head. This parameter is only used when ServiceType is HTTP. The parameter positions at the front and rear ends can be configured differently.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Position *string `json:"position,omitempty" tf:"position,omitempty"`

	// Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Remarks on the backend service parameters of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	RelevantRequestParameterDesc *string `json:"relevantRequestParameterDesc,omitempty" tf:"relevant_request_parameter_desc,omitempty"`

	// The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The name of the front-end parameter corresponding to the backend service parameter of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	RelevantRequestParameterName *string `json:"relevantRequestParameterName,omitempty" tf:"relevant_request_parameter_name,omitempty"`

	// The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The location of the front-end parameters corresponding to the backend service parameters of the API, such as head. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	RelevantRequestParameterPosition *string `json:"relevantRequestParameterPosition,omitempty" tf:"relevant_request_parameter_position,omitempty"`

	// The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// The backend service parameter type of the API. This parameter is only used when ServiceType is HTTP.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	RelevantRequestParameterType *string `json:"relevantRequestParameterType,omitempty" tf:"relevant_request_parameter_type,omitempty"`
}

type ServiceTsfHealthCheckConfInitParameters struct {

	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	ErrorThresholdPercentage *float64 `json:"errorThresholdPercentage,omitempty" tf:"error_threshold_percentage,omitempty"`

	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	IsHealthCheck *bool `json:"isHealthCheck,omitempty" tf:"is_health_check,omitempty"`

	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	RequestVolumeThreshold *float64 `json:"requestVolumeThreshold,omitempty" tf:"request_volume_threshold,omitempty"`

	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	SleepWindowInMilliseconds *float64 `json:"sleepWindowInMilliseconds,omitempty" tf:"sleep_window_in_milliseconds,omitempty"`
}

type ServiceTsfHealthCheckConfObservation struct {

	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	ErrorThresholdPercentage *float64 `json:"errorThresholdPercentage,omitempty" tf:"error_threshold_percentage,omitempty"`

	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	IsHealthCheck *bool `json:"isHealthCheck,omitempty" tf:"is_health_check,omitempty"`

	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	RequestVolumeThreshold *float64 `json:"requestVolumeThreshold,omitempty" tf:"request_volume_threshold,omitempty"`

	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	SleepWindowInMilliseconds *float64 `json:"sleepWindowInMilliseconds,omitempty" tf:"sleep_window_in_milliseconds,omitempty"`
}

type ServiceTsfHealthCheckConfParameters struct {

	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	ErrorThresholdPercentage *float64 `json:"errorThresholdPercentage,omitempty" tf:"error_threshold_percentage,omitempty"`

	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	IsHealthCheck *bool `json:"isHealthCheck,omitempty" tf:"is_health_check,omitempty"`

	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	RequestVolumeThreshold *float64 `json:"requestVolumeThreshold,omitempty" tf:"request_volume_threshold,omitempty"`

	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	SleepWindowInMilliseconds *float64 `json:"sleepWindowInMilliseconds,omitempty" tf:"sleep_window_in_milliseconds,omitempty"`
}

type ServiceTsfLoadBalanceConfInitParameters struct {

	// Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
	IsLoadBalance *bool `json:"isLoadBalance,omitempty" tf:"is_load_balance,omitempty"`

	// Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
	SessionStickRequired *bool `json:"sessionStickRequired,omitempty" tf:"session_stick_required,omitempty"`

	// Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
	SessionStickTimeout *float64 `json:"sessionStickTimeout,omitempty" tf:"session_stick_timeout,omitempty"`
}

type ServiceTsfLoadBalanceConfObservation struct {

	// Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
	IsLoadBalance *bool `json:"isLoadBalance,omitempty" tf:"is_load_balance,omitempty"`

	// Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
	SessionStickRequired *bool `json:"sessionStickRequired,omitempty" tf:"session_stick_required,omitempty"`

	// Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
	SessionStickTimeout *float64 `json:"sessionStickTimeout,omitempty" tf:"session_stick_timeout,omitempty"`
}

type ServiceTsfLoadBalanceConfParameters struct {

	// Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Is load balancing enabled.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	IsLoadBalance *bool `json:"isLoadBalance,omitempty" tf:"is_load_balance,omitempty"`

	// Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Load balancing method.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to enable session persistence.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	SessionStickRequired *bool `json:"sessionStickRequired,omitempty" tf:"session_stick_required,omitempty"`

	// Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Session hold timeout.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	SessionStickTimeout *float64 `json:"sessionStickTimeout,omitempty" tf:"session_stick_timeout,omitempty"`
}

type TargetServicesHealthCheckConfInitParameters struct {

	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	ErrorThresholdPercentage *float64 `json:"errorThresholdPercentage,omitempty" tf:"error_threshold_percentage,omitempty"`

	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	IsHealthCheck *bool `json:"isHealthCheck,omitempty" tf:"is_health_check,omitempty"`

	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	RequestVolumeThreshold *float64 `json:"requestVolumeThreshold,omitempty" tf:"request_volume_threshold,omitempty"`

	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	SleepWindowInMilliseconds *float64 `json:"sleepWindowInMilliseconds,omitempty" tf:"sleep_window_in_milliseconds,omitempty"`
}

type TargetServicesHealthCheckConfObservation struct {

	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	ErrorThresholdPercentage *float64 `json:"errorThresholdPercentage,omitempty" tf:"error_threshold_percentage,omitempty"`

	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	IsHealthCheck *bool `json:"isHealthCheck,omitempty" tf:"is_health_check,omitempty"`

	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	RequestVolumeThreshold *float64 `json:"requestVolumeThreshold,omitempty" tf:"request_volume_threshold,omitempty"`

	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	SleepWindowInMilliseconds *float64 `json:"sleepWindowInMilliseconds,omitempty" tf:"sleep_window_in_milliseconds,omitempty"`
}

type TargetServicesHealthCheckConfParameters struct {

	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Threshold percentage.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	ErrorThresholdPercentage *float64 `json:"errorThresholdPercentage,omitempty" tf:"error_threshold_percentage,omitempty"`

	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Whether to initiate a health check.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	IsHealthCheck *bool `json:"isHealthCheck,omitempty" tf:"is_health_check,omitempty"`

	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Health check threshold.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	RequestVolumeThreshold *float64 `json:"requestVolumeThreshold,omitempty" tf:"request_volume_threshold,omitempty"`

	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// Window size.Note: This field may return null, indicating that a valid value cannot be obtained.
	// +kubebuilder:validation:Optional
	SleepWindowInMilliseconds *float64 `json:"sleepWindowInMilliseconds,omitempty" tf:"sleep_window_in_milliseconds,omitempty"`
}

type TargetServicesInitParameters struct {

	// docker ip.
	// docker ip.
	DockerIP *string `json:"dockerIp,omitempty" tf:"docker_ip,omitempty"`

	// Host IP of the CVM.
	// Host IP of the CVM.
	HostIP *string `json:"hostIp,omitempty" tf:"host_ip,omitempty"`

	// vm ip.
	// vm ip.
	VMIP *string `json:"vmIp,omitempty" tf:"vm_ip,omitempty"`

	// vm port.
	// vm port.
	VMPort *float64 `json:"vmPort,omitempty" tf:"vm_port,omitempty"`

	// vpc id.
	// vpc id.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type TargetServicesObservation struct {

	// docker ip.
	// docker ip.
	DockerIP *string `json:"dockerIp,omitempty" tf:"docker_ip,omitempty"`

	// Host IP of the CVM.
	// Host IP of the CVM.
	HostIP *string `json:"hostIp,omitempty" tf:"host_ip,omitempty"`

	// vm ip.
	// vm ip.
	VMIP *string `json:"vmIp,omitempty" tf:"vm_ip,omitempty"`

	// vm port.
	// vm port.
	VMPort *float64 `json:"vmPort,omitempty" tf:"vm_port,omitempty"`

	// vpc id.
	// vpc id.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type TargetServicesParameters struct {

	// docker ip.
	// docker ip.
	// +kubebuilder:validation:Optional
	DockerIP *string `json:"dockerIp,omitempty" tf:"docker_ip,omitempty"`

	// Host IP of the CVM.
	// Host IP of the CVM.
	// +kubebuilder:validation:Optional
	HostIP *string `json:"hostIp" tf:"host_ip,omitempty"`

	// vm ip.
	// vm ip.
	// +kubebuilder:validation:Optional
	VMIP *string `json:"vmIp" tf:"vm_ip,omitempty"`

	// vm port.
	// vm port.
	// +kubebuilder:validation:Optional
	VMPort *float64 `json:"vmPort" tf:"vm_port,omitempty"`

	// vpc id.
	// vpc id.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId" tf:"vpc_id,omitempty"`
}

// ApiSpec defines the desired state of Api
type ApiSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ApiParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ApiInitParameters `json:"initProvider,omitempty"`
}

// ApiStatus defines the observed state of Api.
type ApiStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ApiObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Api is the Schema for the Apis API. Use this resource to create API of API gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type Api struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.apiName) || (has(self.initProvider) && has(self.initProvider.apiName))",message="spec.forProvider.apiName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.requestConfigPath) || (has(self.initProvider) && has(self.initProvider.requestConfigPath))",message="spec.forProvider.requestConfigPath is a required parameter"
	Spec   ApiSpec   `json:"spec"`
	Status ApiStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiList contains a list of Apis
type ApiList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Api `json:"items"`
}

// Repository type metadata.
var (
	Api_Kind             = "Api"
	Api_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Api_Kind}.String()
	Api_KindAPIVersion   = Api_Kind + "." + CRDGroupVersion.String()
	Api_GroupVersionKind = CRDGroupVersion.WithKind(Api_Kind)
)

func init() {
	SchemeBuilder.Register(&Api{}, &ApiList{})
}
