// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MariadbAccountInitParameters struct {

	// account description.
	// account description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// host.
	// host.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// instance id.
	// instance id.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// wether account is read only, 0 means not a read only account.
	// wether account is read only, 0 means not a read only account.
	ReadOnly *float64 `json:"readOnly,omitempty" tf:"read_only,omitempty"`

	// user name.
	// user name.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type MariadbAccountObservation struct {

	// account description.
	// account description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// host.
	// host.
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// instance id.
	// instance id.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// wether account is read only, 0 means not a read only account.
	// wether account is read only, 0 means not a read only account.
	ReadOnly *float64 `json:"readOnly,omitempty" tf:"read_only,omitempty"`

	// user name.
	// user name.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type MariadbAccountParameters struct {

	// account description.
	// account description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// host.
	// host.
	// +kubebuilder:validation:Optional
	Host *string `json:"host,omitempty" tf:"host,omitempty"`

	// instance id.
	// instance id.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// account password.
	// account password.
	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// wether account is read only, 0 means not a read only account.
	// wether account is read only, 0 means not a read only account.
	// +kubebuilder:validation:Optional
	ReadOnly *float64 `json:"readOnly,omitempty" tf:"read_only,omitempty"`

	// user name.
	// user name.
	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

// MariadbAccountSpec defines the desired state of MariadbAccount
type MariadbAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MariadbAccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MariadbAccountInitParameters `json:"initProvider,omitempty"`
}

// MariadbAccountStatus defines the observed state of MariadbAccount.
type MariadbAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MariadbAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MariadbAccount is the Schema for the MariadbAccounts API. Provides a resource to create a mariadb account
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type MariadbAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.host) || (has(self.initProvider) && has(self.initProvider.host))",message="spec.forProvider.host is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceId) || (has(self.initProvider) && has(self.initProvider.instanceId))",message="spec.forProvider.instanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.passwordSecretRef)",message="spec.forProvider.passwordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.userName) || (has(self.initProvider) && has(self.initProvider.userName))",message="spec.forProvider.userName is a required parameter"
	Spec   MariadbAccountSpec   `json:"spec"`
	Status MariadbAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MariadbAccountList contains a list of MariadbAccounts
type MariadbAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MariadbAccount `json:"items"`
}

// Repository type metadata.
var (
	MariadbAccount_Kind             = "MariadbAccount"
	MariadbAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MariadbAccount_Kind}.String()
	MariadbAccount_KindAPIVersion   = MariadbAccount_Kind + "." + CRDGroupVersion.String()
	MariadbAccount_GroupVersionKind = CRDGroupVersion.WithKind(MariadbAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&MariadbAccount{}, &MariadbAccountList{})
}
