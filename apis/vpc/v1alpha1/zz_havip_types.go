// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HaVipInitParameters struct {

	// Name of the HA VIP. The length of character is limited to 1-60.
	// Name of the HA VIP. The length of character is limited to 1-60.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Virtual IP address, it must not be occupied and in this VPC network segment. If not set, it will be assigned after resource created automatically.
	// Virtual IP address, it must not be occupied and in this VPC network segment. If not set, it will be assigned after resource created automatically.
	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`
}

type HaVipObservation struct {

	// EIP that is associated.
	// EIP that is associated.
	AddressIP *string `json:"addressIp,omitempty" tf:"address_ip,omitempty"`

	// Create time of the HA VIP.
	// Create time of the HA VIP.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Instance ID that is associated.
	// Instance ID that is associated.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Name of the HA VIP. The length of character is limited to 1-60.
	// Name of the HA VIP. The length of character is limited to 1-60.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Network interface ID that is associated.
	// Network interface ID that is associated.
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// State of the HA VIP. Valid value: AVAILABLE, UNBIND.
	// State of the HA VIP. Valid value: `AVAILABLE`, `UNBIND`.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Subnet ID.
	// Subnet ID.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// VPC ID.
	// VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Virtual IP address, it must not be occupied and in this VPC network segment. If not set, it will be assigned after resource created automatically.
	// Virtual IP address, it must not be occupied and in this VPC network segment. If not set, it will be assigned after resource created automatically.
	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`
}

type HaVipParameters struct {

	// Name of the HA VIP. The length of character is limited to 1-60.
	// Name of the HA VIP. The length of character is limited to 1-60.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Subnet ID.
	// Subnet ID.
	// +crossplane:generate:reference:type=Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// VPC ID.
	// VPC ID.
	// +crossplane:generate:reference:type=VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Virtual IP address, it must not be occupied and in this VPC network segment. If not set, it will be assigned after resource created automatically.
	// Virtual IP address, it must not be occupied and in this VPC network segment. If not set, it will be assigned after resource created automatically.
	// +kubebuilder:validation:Optional
	Vip *string `json:"vip,omitempty" tf:"vip,omitempty"`
}

// HaVipSpec defines the desired state of HaVip
type HaVipSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HaVipParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider HaVipInitParameters `json:"initProvider,omitempty"`
}

// HaVipStatus defines the observed state of HaVip.
type HaVipStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HaVipObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HaVip is the Schema for the HaVips API. Provides a resource to create a HA VIP.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type HaVip struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   HaVipSpec   `json:"spec"`
	Status HaVipStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HaVipList contains a list of HaVips
type HaVipList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HaVip `json:"items"`
}

// Repository type metadata.
var (
	HaVip_Kind             = "HaVip"
	HaVip_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HaVip_Kind}.String()
	HaVip_KindAPIVersion   = HaVip_Kind + "." + CRDGroupVersion.String()
	HaVip_GroupVersionKind = CRDGroupVersion.WithKind(HaVip_Kind)
)

func init() {
	SchemeBuilder.Register(&HaVip{}, &HaVipList{})
}
