// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProtocolTemplateGroupInitParameters struct {

	// Name of the protocol template group.
	// Name of the protocol template group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type ProtocolTemplateGroupObservation struct {

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the protocol template group.
	// Name of the protocol template group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Service template ID list.
	// Service template ID list.
	TemplateIds []*string `json:"templateIds,omitempty" tf:"template_ids,omitempty"`
}

type ProtocolTemplateGroupParameters struct {

	// Name of the protocol template group.
	// Name of the protocol template group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Service template ID list.
	// Service template ID list.
	// +crossplane:generate:reference:type=ProtocolTemplate
	// +kubebuilder:validation:Optional
	TemplateIds []*string `json:"templateIds,omitempty" tf:"template_ids,omitempty"`

	// References to ProtocolTemplate to populate templateIds.
	// +kubebuilder:validation:Optional
	TemplateIdsRefs []v1.Reference `json:"templateIdsRefs,omitempty" tf:"-"`

	// Selector for a list of ProtocolTemplate to populate templateIds.
	// +kubebuilder:validation:Optional
	TemplateIdsSelector *v1.Selector `json:"templateIdsSelector,omitempty" tf:"-"`
}

// ProtocolTemplateGroupSpec defines the desired state of ProtocolTemplateGroup
type ProtocolTemplateGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProtocolTemplateGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ProtocolTemplateGroupInitParameters `json:"initProvider,omitempty"`
}

// ProtocolTemplateGroupStatus defines the observed state of ProtocolTemplateGroup.
type ProtocolTemplateGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProtocolTemplateGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ProtocolTemplateGroup is the Schema for the ProtocolTemplateGroups API. Provides a resource to manage protocol template group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ProtocolTemplateGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ProtocolTemplateGroupSpec   `json:"spec"`
	Status ProtocolTemplateGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProtocolTemplateGroupList contains a list of ProtocolTemplateGroups
type ProtocolTemplateGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProtocolTemplateGroup `json:"items"`
}

// Repository type metadata.
var (
	ProtocolTemplateGroup_Kind             = "ProtocolTemplateGroup"
	ProtocolTemplateGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProtocolTemplateGroup_Kind}.String()
	ProtocolTemplateGroup_KindAPIVersion   = ProtocolTemplateGroup_Kind + "." + CRDGroupVersion.String()
	ProtocolTemplateGroup_GroupVersionKind = CRDGroupVersion.WithKind(ProtocolTemplateGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&ProtocolTemplateGroup{}, &ProtocolTemplateGroupList{})
}
