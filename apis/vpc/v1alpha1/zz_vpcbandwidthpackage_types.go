// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPCBandwidthPackageInitParameters struct {

	// Bandwidth package name.
	// Bandwidth package name.
	BandwidthPackageName *string `json:"bandwidthPackageName,omitempty" tf:"bandwidth_package_name,omitempty"`

	// Bandwidth package billing type, default: TOP5_POSTPAID_BY_MONTH. Optional value: TOP5_POSTPAID_BY_MONTH: TOP5 billed by monthly postpaid; PERCENT95_POSTPAID_BY_MONTH: 95 billed monthly postpaid; FIXED_PREPAID_BY_MONTH: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); BANDWIDTH_POSTPAID_BY_DAY: bandwidth billed by daily postpaid; ENHANCED95_POSTPAID_BY_MONTH: enhanced 95 billed monthly postpaid.
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Network egress. It defaults to center_egress1. If you want to try the egress feature, please submit a ticket.
	// Network egress. It defaults to `center_egress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	Egress *string `json:"egress,omitempty" tf:"egress,omitempty"`

	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	InternetMaxBandwidth *float64 `json:"internetMaxBandwidth,omitempty" tf:"internet_max_bandwidth,omitempty"`

	// Bandwidth packet type, default: BGP. Optional value: BGP: common BGP shared bandwidth package; HIGH_QUALITY_BGP: High Quality BGP Shared Bandwidth Package; SINGLEISP_CMCC: CMCC shared bandwidth package; SINGLEISP_CTCC:: CTCC shared bandwidth package; SINGLEISP_CUCC: CUCC shared bandwidth package.
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Tag description list.
	// Tag description list.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	TimeSpan *float64 `json:"timeSpan,omitempty" tf:"time_span,omitempty"`
}

type VPCBandwidthPackageObservation struct {

	// Bandwidth package name.
	// Bandwidth package name.
	BandwidthPackageName *string `json:"bandwidthPackageName,omitempty" tf:"bandwidth_package_name,omitempty"`

	// Bandwidth package billing type, default: TOP5_POSTPAID_BY_MONTH. Optional value: TOP5_POSTPAID_BY_MONTH: TOP5 billed by monthly postpaid; PERCENT95_POSTPAID_BY_MONTH: 95 billed monthly postpaid; FIXED_PREPAID_BY_MONTH: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); BANDWIDTH_POSTPAID_BY_DAY: bandwidth billed by daily postpaid; ENHANCED95_POSTPAID_BY_MONTH: enhanced 95 billed monthly postpaid.
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Network egress. It defaults to center_egress1. If you want to try the egress feature, please submit a ticket.
	// Network egress. It defaults to `center_egress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	Egress *string `json:"egress,omitempty" tf:"egress,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	InternetMaxBandwidth *float64 `json:"internetMaxBandwidth,omitempty" tf:"internet_max_bandwidth,omitempty"`

	// Bandwidth packet type, default: BGP. Optional value: BGP: common BGP shared bandwidth package; HIGH_QUALITY_BGP: High Quality BGP Shared Bandwidth Package; SINGLEISP_CMCC: CMCC shared bandwidth package; SINGLEISP_CTCC:: CTCC shared bandwidth package; SINGLEISP_CUCC: CUCC shared bandwidth package.
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Tag description list.
	// Tag description list.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	TimeSpan *float64 `json:"timeSpan,omitempty" tf:"time_span,omitempty"`
}

type VPCBandwidthPackageParameters struct {

	// Bandwidth package name.
	// Bandwidth package name.
	// +kubebuilder:validation:Optional
	BandwidthPackageName *string `json:"bandwidthPackageName,omitempty" tf:"bandwidth_package_name,omitempty"`

	// Bandwidth package billing type, default: TOP5_POSTPAID_BY_MONTH. Optional value: TOP5_POSTPAID_BY_MONTH: TOP5 billed by monthly postpaid; PERCENT95_POSTPAID_BY_MONTH: 95 billed monthly postpaid; FIXED_PREPAID_BY_MONTH: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); BANDWIDTH_POSTPAID_BY_DAY: bandwidth billed by daily postpaid; ENHANCED95_POSTPAID_BY_MONTH: enhanced 95 billed monthly postpaid.
	// Bandwidth package billing type, default: `TOP5_POSTPAID_BY_MONTH`. Optional value: `TOP5_POSTPAID_BY_MONTH`: TOP5 billed by monthly postpaid; `PERCENT95_POSTPAID_BY_MONTH`: 95 billed monthly postpaid; `FIXED_PREPAID_BY_MONTH`: Monthly prepaid billing (Type FIXED_PREPAID_BY_MONTH product API capability is under construction); `BANDWIDTH_POSTPAID_BY_DAY`: bandwidth billed by daily postpaid; `ENHANCED95_POSTPAID_BY_MONTH`: enhanced 95 billed monthly postpaid.
	// +kubebuilder:validation:Optional
	ChargeType *string `json:"chargeType,omitempty" tf:"charge_type,omitempty"`

	// Network egress. It defaults to center_egress1. If you want to try the egress feature, please submit a ticket.
	// Network egress. It defaults to `center_egress1`. If you want to try the egress feature, please [submit a ticket](https://console.cloud.tencent.com/workorder/category).
	// +kubebuilder:validation:Optional
	Egress *string `json:"egress,omitempty" tf:"egress,omitempty"`

	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	// Bandwidth packet speed limit size. Unit: Mbps, -1 means no speed limit.
	// +kubebuilder:validation:Optional
	InternetMaxBandwidth *float64 `json:"internetMaxBandwidth,omitempty" tf:"internet_max_bandwidth,omitempty"`

	// Bandwidth packet type, default: BGP. Optional value: BGP: common BGP shared bandwidth package; HIGH_QUALITY_BGP: High Quality BGP Shared Bandwidth Package; SINGLEISP_CMCC: CMCC shared bandwidth package; SINGLEISP_CTCC:: CTCC shared bandwidth package; SINGLEISP_CUCC: CUCC shared bandwidth package.
	// Bandwidth packet type, default: `BGP`. Optional value: `BGP`: common BGP shared bandwidth package; `HIGH_QUALITY_BGP`: High Quality BGP Shared Bandwidth Package; `SINGLEISP_CMCC`: CMCC shared bandwidth package; `SINGLEISP_CTCC:`: CTCC shared bandwidth package; `SINGLEISP_CUCC`: CUCC shared bandwidth package.
	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// Tag description list.
	// Tag description list.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	// The purchase duration of the prepaid monthly bandwidth package, unit: month, value range: 1~60.
	// +kubebuilder:validation:Optional
	TimeSpan *float64 `json:"timeSpan,omitempty" tf:"time_span,omitempty"`
}

// VPCBandwidthPackageSpec defines the desired state of VPCBandwidthPackage
type VPCBandwidthPackageSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPCBandwidthPackageParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VPCBandwidthPackageInitParameters `json:"initProvider,omitempty"`
}

// VPCBandwidthPackageStatus defines the observed state of VPCBandwidthPackage.
type VPCBandwidthPackageStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPCBandwidthPackageObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VPCBandwidthPackage is the Schema for the VPCBandwidthPackages API. Provides a resource to create a vpc bandwidth_package
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type VPCBandwidthPackage struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VPCBandwidthPackageSpec   `json:"spec"`
	Status            VPCBandwidthPackageStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPCBandwidthPackageList contains a list of VPCBandwidthPackages
type VPCBandwidthPackageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPCBandwidthPackage `json:"items"`
}

// Repository type metadata.
var (
	VPCBandwidthPackage_Kind             = "VPCBandwidthPackage"
	VPCBandwidthPackage_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPCBandwidthPackage_Kind}.String()
	VPCBandwidthPackage_KindAPIVersion   = VPCBandwidthPackage_Kind + "." + CRDGroupVersion.String()
	VPCBandwidthPackage_GroupVersionKind = CRDGroupVersion.WithKind(VPCBandwidthPackage_Kind)
)

func init() {
	SchemeBuilder.Register(&VPCBandwidthPackage{}, &VPCBandwidthPackageList{})
}
