// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AddonAttachmentInitParameters struct {

	// Name of addon.
	// Name of addon.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Raw Values. Conflict with request_body. Required with raw_values_type.
	// Raw Values. Conflict with `request_body`. Required with `raw_values_type`.
	RawValues *string `json:"rawValues,omitempty" tf:"raw_values,omitempty"`

	// The type of raw Values. Required with raw_values.
	// The type of raw Values. Required with `raw_values`.
	RawValuesType *string `json:"rawValuesType,omitempty" tf:"raw_values_type,omitempty"`

	// Serialized json string as request body of addon spec. If set, will ignore version and values.
	// Serialized json string as request body of addon spec. If set, will ignore `version` and `values`.
	RequestBody *string `json:"requestBody,omitempty" tf:"request_body,omitempty"`

	// Values the addon passthroughs. Conflict with request_body.
	// Values the addon passthroughs. Conflict with `request_body`.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`

	// Addon version, default latest version. Conflict with request_body.
	// Addon version, default latest version. Conflict with `request_body`.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type AddonAttachmentObservation struct {

	// ID of cluster.
	// ID of cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of addon.
	// Name of addon.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Raw Values. Conflict with request_body. Required with raw_values_type.
	// Raw Values. Conflict with `request_body`. Required with `raw_values_type`.
	RawValues *string `json:"rawValues,omitempty" tf:"raw_values,omitempty"`

	// The type of raw Values. Required with raw_values.
	// The type of raw Values. Required with `raw_values`.
	RawValuesType *string `json:"rawValuesType,omitempty" tf:"raw_values_type,omitempty"`

	// Serialized json string as request body of addon spec. If set, will ignore version and values.
	// Serialized json string as request body of addon spec. If set, will ignore `version` and `values`.
	RequestBody *string `json:"requestBody,omitempty" tf:"request_body,omitempty"`

	// Addon response body.
	// Addon response body.
	ResponseBody *string `json:"responseBody,omitempty" tf:"response_body,omitempty"`

	// Addon current status.
	// Addon current status.
	Status map[string]*string `json:"status,omitempty" tf:"status,omitempty"`

	// Values the addon passthroughs. Conflict with request_body.
	// Values the addon passthroughs. Conflict with `request_body`.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`

	// Addon version, default latest version. Conflict with request_body.
	// Addon version, default latest version. Conflict with `request_body`.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type AddonAttachmentParameters struct {

	// ID of cluster.
	// ID of cluster.
	// +crossplane:generate:reference:type=Cluster
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a Cluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// Name of addon.
	// Name of addon.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Raw Values. Conflict with request_body. Required with raw_values_type.
	// Raw Values. Conflict with `request_body`. Required with `raw_values_type`.
	// +kubebuilder:validation:Optional
	RawValues *string `json:"rawValues,omitempty" tf:"raw_values,omitempty"`

	// The type of raw Values. Required with raw_values.
	// The type of raw Values. Required with `raw_values`.
	// +kubebuilder:validation:Optional
	RawValuesType *string `json:"rawValuesType,omitempty" tf:"raw_values_type,omitempty"`

	// Serialized json string as request body of addon spec. If set, will ignore version and values.
	// Serialized json string as request body of addon spec. If set, will ignore `version` and `values`.
	// +kubebuilder:validation:Optional
	RequestBody *string `json:"requestBody,omitempty" tf:"request_body,omitempty"`

	// Values the addon passthroughs. Conflict with request_body.
	// Values the addon passthroughs. Conflict with `request_body`.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`

	// Addon version, default latest version. Conflict with request_body.
	// Addon version, default latest version. Conflict with `request_body`.
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

// AddonAttachmentSpec defines the desired state of AddonAttachment
type AddonAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AddonAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AddonAttachmentInitParameters `json:"initProvider,omitempty"`
}

// AddonAttachmentStatus defines the observed state of AddonAttachment.
type AddonAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AddonAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AddonAttachment is the Schema for the AddonAttachments API. Provide a resource to configure kubernetes cluster app addons.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type AddonAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   AddonAttachmentSpec   `json:"spec"`
	Status AddonAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AddonAttachmentList contains a list of AddonAttachments
type AddonAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AddonAttachment `json:"items"`
}

// Repository type metadata.
var (
	AddonAttachment_Kind             = "AddonAttachment"
	AddonAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AddonAttachment_Kind}.String()
	AddonAttachment_KindAPIVersion   = AddonAttachment_Kind + "." + CRDGroupVersion.String()
	AddonAttachment_GroupVersionKind = CRDGroupVersion.WithKind(AddonAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&AddonAttachment{}, &AddonAttachmentList{})
}
