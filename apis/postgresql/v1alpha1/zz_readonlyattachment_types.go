// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ReadonlyAttachmentInitParameters struct {
}

type ReadonlyAttachmentObservation struct {

	// Read only instance ID.
	// Read only instance ID.
	DBInstanceID *string `json:"dbInstanceId,omitempty" tf:"db_instance_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Read only group ID.
	// Read only group ID.
	ReadOnlyGroupID *string `json:"readOnlyGroupId,omitempty" tf:"read_only_group_id,omitempty"`
}

type ReadonlyAttachmentParameters struct {

	// Read only instance ID.
	// Read only instance ID.
	// +crossplane:generate:reference:type=ReadonlyInstance
	// +kubebuilder:validation:Optional
	DBInstanceID *string `json:"dbInstanceId,omitempty" tf:"db_instance_id,omitempty"`

	// Reference to a ReadonlyInstance to populate dbInstanceId.
	// +kubebuilder:validation:Optional
	DBInstanceIDRef *v1.Reference `json:"dbInstanceIdRef,omitempty" tf:"-"`

	// Selector for a ReadonlyInstance to populate dbInstanceId.
	// +kubebuilder:validation:Optional
	DBInstanceIDSelector *v1.Selector `json:"dbInstanceIdSelector,omitempty" tf:"-"`

	// Read only group ID.
	// Read only group ID.
	// +crossplane:generate:reference:type=ReadonlyGroup
	// +kubebuilder:validation:Optional
	ReadOnlyGroupID *string `json:"readOnlyGroupId,omitempty" tf:"read_only_group_id,omitempty"`

	// Reference to a ReadonlyGroup to populate readOnlyGroupId.
	// +kubebuilder:validation:Optional
	ReadOnlyGroupIDRef *v1.Reference `json:"readOnlyGroupIdRef,omitempty" tf:"-"`

	// Selector for a ReadonlyGroup to populate readOnlyGroupId.
	// +kubebuilder:validation:Optional
	ReadOnlyGroupIDSelector *v1.Selector `json:"readOnlyGroupIdSelector,omitempty" tf:"-"`
}

// ReadonlyAttachmentSpec defines the desired state of ReadonlyAttachment
type ReadonlyAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReadonlyAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ReadonlyAttachmentInitParameters `json:"initProvider,omitempty"`
}

// ReadonlyAttachmentStatus defines the observed state of ReadonlyAttachment.
type ReadonlyAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReadonlyAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ReadonlyAttachment is the Schema for the ReadonlyAttachments API. Use this resource to create postgresql readonly attachment.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ReadonlyAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ReadonlyAttachmentSpec   `json:"spec"`
	Status            ReadonlyAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReadonlyAttachmentList contains a list of ReadonlyAttachments
type ReadonlyAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReadonlyAttachment `json:"items"`
}

// Repository type metadata.
var (
	ReadonlyAttachment_Kind             = "ReadonlyAttachment"
	ReadonlyAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReadonlyAttachment_Kind}.String()
	ReadonlyAttachment_KindAPIVersion   = ReadonlyAttachment_Kind + "." + CRDGroupVersion.String()
	ReadonlyAttachment_GroupVersionKind = CRDGroupVersion.WithKind(ReadonlyAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&ReadonlyAttachment{}, &ReadonlyAttachmentList{})
}
