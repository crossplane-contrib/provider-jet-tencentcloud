// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type LogSetInitParameters struct {

	// Logset retention period in days. Maximun value is 90.
	// Logset retention period in days. Maximun value is `90`.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`
}

type LogSetObservation struct {

	// Logset creation time.
	// Logset creation time.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Logset name, which unique and fixed clb_logset among all CLS logsets.
	// Logset name, which unique and fixed `clb_logset` among all CLS logsets.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Logset retention period in days. Maximun value is 90.
	// Logset retention period in days. Maximun value is `90`.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Number of log topics in logset.
	// Number of log topics in logset.
	TopicCount *string `json:"topicCount,omitempty" tf:"topic_count,omitempty"`
}

type LogSetParameters struct {

	// Logset retention period in days. Maximun value is 90.
	// Logset retention period in days. Maximun value is `90`.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`
}

// LogSetSpec defines the desired state of LogSet
type LogSetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     LogSetParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider LogSetInitParameters `json:"initProvider,omitempty"`
}

// LogSetStatus defines the observed state of LogSet.
type LogSetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        LogSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LogSet is the Schema for the LogSets API. Provides a resource to create an exclusive CLB Logset.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type LogSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LogSetSpec   `json:"spec"`
	Status            LogSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LogSetList contains a list of LogSets
type LogSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LogSet `json:"items"`
}

// Repository type metadata.
var (
	LogSet_Kind             = "LogSet"
	LogSet_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LogSet_Kind}.String()
	LogSet_KindAPIVersion   = LogSet_Kind + "." + CRDGroupVersion.String()
	LogSet_GroupVersionKind = CRDGroupVersion.WithKind(LogSet_Kind)
)

func init() {
	SchemeBuilder.Register(&LogSet{}, &LogSetList{})
}
