// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TargetGroupInstanceAttachmentInitParameters struct {

	// The Intranet IP of the target group instance.
	// The Intranet IP of the target group instance.
	BindIP *string `json:"bindIp,omitempty" tf:"bind_ip,omitempty"`

	// Port of the target group instance.
	// Port of the target group instance.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// The weight of the target group instance.
	// The weight of the target group instance.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type TargetGroupInstanceAttachmentObservation struct {

	// The Intranet IP of the target group instance.
	// The Intranet IP of the target group instance.
	BindIP *string `json:"bindIp,omitempty" tf:"bind_ip,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Port of the target group instance.
	// Port of the target group instance.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Target group ID.
	// Target group ID.
	TargetGroupID *string `json:"targetGroupId,omitempty" tf:"target_group_id,omitempty"`

	// The weight of the target group instance.
	// The weight of the target group instance.
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type TargetGroupInstanceAttachmentParameters struct {

	// The Intranet IP of the target group instance.
	// The Intranet IP of the target group instance.
	// +kubebuilder:validation:Optional
	BindIP *string `json:"bindIp,omitempty" tf:"bind_ip,omitempty"`

	// Port of the target group instance.
	// Port of the target group instance.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Target group ID.
	// Target group ID.
	// +crossplane:generate:reference:type=TargetGroup
	// +kubebuilder:validation:Optional
	TargetGroupID *string `json:"targetGroupId,omitempty" tf:"target_group_id,omitempty"`

	// Reference to a TargetGroup to populate targetGroupId.
	// +kubebuilder:validation:Optional
	TargetGroupIDRef *v1.Reference `json:"targetGroupIdRef,omitempty" tf:"-"`

	// Selector for a TargetGroup to populate targetGroupId.
	// +kubebuilder:validation:Optional
	TargetGroupIDSelector *v1.Selector `json:"targetGroupIdSelector,omitempty" tf:"-"`

	// The weight of the target group instance.
	// The weight of the target group instance.
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

// TargetGroupInstanceAttachmentSpec defines the desired state of TargetGroupInstanceAttachment
type TargetGroupInstanceAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TargetGroupInstanceAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TargetGroupInstanceAttachmentInitParameters `json:"initProvider,omitempty"`
}

// TargetGroupInstanceAttachmentStatus defines the observed state of TargetGroupInstanceAttachment.
type TargetGroupInstanceAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TargetGroupInstanceAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TargetGroupInstanceAttachment is the Schema for the TargetGroupInstanceAttachments API. Provides a resource to create a CLB target group instance attachment.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type TargetGroupInstanceAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.bindIp) || (has(self.initProvider) && has(self.initProvider.bindIp))",message="spec.forProvider.bindIp is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.port) || (has(self.initProvider) && has(self.initProvider.port))",message="spec.forProvider.port is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.weight) || (has(self.initProvider) && has(self.initProvider.weight))",message="spec.forProvider.weight is a required parameter"
	Spec   TargetGroupInstanceAttachmentSpec   `json:"spec"`
	Status TargetGroupInstanceAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TargetGroupInstanceAttachmentList contains a list of TargetGroupInstanceAttachments
type TargetGroupInstanceAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TargetGroupInstanceAttachment `json:"items"`
}

// Repository type metadata.
var (
	TargetGroupInstanceAttachment_Kind             = "TargetGroupInstanceAttachment"
	TargetGroupInstanceAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TargetGroupInstanceAttachment_Kind}.String()
	TargetGroupInstanceAttachment_KindAPIVersion   = TargetGroupInstanceAttachment_Kind + "." + CRDGroupVersion.String()
	TargetGroupInstanceAttachment_GroupVersionKind = CRDGroupVersion.WithKind(TargetGroupInstanceAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&TargetGroupInstanceAttachment{}, &TargetGroupInstanceAttachmentList{})
}
