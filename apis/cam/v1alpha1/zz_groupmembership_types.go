// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GroupMembershipInitParameters struct {

	// It has been deprecated from version 1.59.5. Use user_names instead. ID set of the CAM group members.
	// ID set of the CAM group members.
	UserIds []*string `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// User name set as ID of the CAM group members.
	// User name set as ID of the CAM group members.
	UserNames []*string `json:"userNames,omitempty" tf:"user_names,omitempty"`
}

type GroupMembershipObservation struct {

	// ID of CAM group.
	// ID of CAM group.
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// It has been deprecated from version 1.59.5. Use user_names instead. ID set of the CAM group members.
	// ID set of the CAM group members.
	UserIds []*string `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// User name set as ID of the CAM group members.
	// User name set as ID of the CAM group members.
	UserNames []*string `json:"userNames,omitempty" tf:"user_names,omitempty"`
}

type GroupMembershipParameters struct {

	// ID of CAM group.
	// ID of CAM group.
	// +crossplane:generate:reference:type=Group
	// +kubebuilder:validation:Optional
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Reference to a Group to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDRef *v1.Reference `json:"groupIdRef,omitempty" tf:"-"`

	// Selector for a Group to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDSelector *v1.Selector `json:"groupIdSelector,omitempty" tf:"-"`

	// It has been deprecated from version 1.59.5. Use user_names instead. ID set of the CAM group members.
	// ID set of the CAM group members.
	// +kubebuilder:validation:Optional
	UserIds []*string `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// User name set as ID of the CAM group members.
	// User name set as ID of the CAM group members.
	// +kubebuilder:validation:Optional
	UserNames []*string `json:"userNames,omitempty" tf:"user_names,omitempty"`
}

// GroupMembershipSpec defines the desired state of GroupMembership
type GroupMembershipSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GroupMembershipParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GroupMembershipInitParameters `json:"initProvider,omitempty"`
}

// GroupMembershipStatus defines the observed state of GroupMembership.
type GroupMembershipStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GroupMembershipObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GroupMembership is the Schema for the GroupMemberships API. Provides a resource to create a CAM group membership.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type GroupMembership struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GroupMembershipSpec   `json:"spec"`
	Status            GroupMembershipStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GroupMembershipList contains a list of GroupMemberships
type GroupMembershipList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GroupMembership `json:"items"`
}

// Repository type metadata.
var (
	GroupMembership_Kind             = "GroupMembership"
	GroupMembership_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GroupMembership_Kind}.String()
	GroupMembership_KindAPIVersion   = GroupMembership_Kind + "." + CRDGroupVersion.String()
	GroupMembership_GroupVersionKind = CRDGroupVersion.WithKind(GroupMembership_Kind)
)

func init() {
	SchemeBuilder.Register(&GroupMembership{}, &GroupMembershipList{})
}
