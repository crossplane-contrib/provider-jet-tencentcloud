// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MachineGroupInitParameters struct {

	// Whether to enable automatic update for the machine group.
	// Whether to enable automatic update for the machine group.
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// Machine group name, which must be unique.
	// Machine group name, which must be unique.
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// Type of the machine group to be created.
	// Type of the machine group to be created.
	MachineGroupType []MachineGroupTypeInitParameters `json:"machineGroupType,omitempty" tf:"machine_group_type,omitempty"`

	// Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled, the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log topics will be created, which will not incur fees.
	// Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled, the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log topics will be created, which will not incur fees.
	ServiceLogging *bool `json:"serviceLogging,omitempty" tf:"service_logging,omitempty"`

	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Update end time. We recommend you update LogListener during off-peak hours.
	// Update end time. We recommend you update LogListener during off-peak hours.
	UpdateEndTime *string `json:"updateEndTime,omitempty" tf:"update_end_time,omitempty"`

	// Update start time. We recommend you update LogListener during off-peak hours.
	// Update start time. We recommend you update LogListener during off-peak hours.
	UpdateStartTime *string `json:"updateStartTime,omitempty" tf:"update_start_time,omitempty"`
}

type MachineGroupObservation struct {

	// Whether to enable automatic update for the machine group.
	// Whether to enable automatic update for the machine group.
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// Machine group name, which must be unique.
	// Machine group name, which must be unique.
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Type of the machine group to be created.
	// Type of the machine group to be created.
	MachineGroupType []MachineGroupTypeObservation `json:"machineGroupType,omitempty" tf:"machine_group_type,omitempty"`

	// Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled, the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log topics will be created, which will not incur fees.
	// Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled, the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log topics will be created, which will not incur fees.
	ServiceLogging *bool `json:"serviceLogging,omitempty" tf:"service_logging,omitempty"`

	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Update end time. We recommend you update LogListener during off-peak hours.
	// Update end time. We recommend you update LogListener during off-peak hours.
	UpdateEndTime *string `json:"updateEndTime,omitempty" tf:"update_end_time,omitempty"`

	// Update start time. We recommend you update LogListener during off-peak hours.
	// Update start time. We recommend you update LogListener during off-peak hours.
	UpdateStartTime *string `json:"updateStartTime,omitempty" tf:"update_start_time,omitempty"`
}

type MachineGroupParameters struct {

	// Whether to enable automatic update for the machine group.
	// Whether to enable automatic update for the machine group.
	// +kubebuilder:validation:Optional
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// Machine group name, which must be unique.
	// Machine group name, which must be unique.
	// +kubebuilder:validation:Optional
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// Type of the machine group to be created.
	// Type of the machine group to be created.
	// +kubebuilder:validation:Optional
	MachineGroupType []MachineGroupTypeParameters `json:"machineGroupType,omitempty" tf:"machine_group_type,omitempty"`

	// Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled, the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log topics will be created, which will not incur fees.
	// Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled, the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log topics will be created, which will not incur fees.
	// +kubebuilder:validation:Optional
	ServiceLogging *bool `json:"serviceLogging,omitempty" tf:"service_logging,omitempty"`

	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	// Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Update end time. We recommend you update LogListener during off-peak hours.
	// Update end time. We recommend you update LogListener during off-peak hours.
	// +kubebuilder:validation:Optional
	UpdateEndTime *string `json:"updateEndTime,omitempty" tf:"update_end_time,omitempty"`

	// Update start time. We recommend you update LogListener during off-peak hours.
	// Update start time. We recommend you update LogListener during off-peak hours.
	// +kubebuilder:validation:Optional
	UpdateStartTime *string `json:"updateStartTime,omitempty" tf:"update_start_time,omitempty"`
}

type MachineGroupTypeInitParameters struct {

	// Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
	// Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Machine description list.
	// Machine description list.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MachineGroupTypeObservation struct {

	// Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
	// Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Machine description list.
	// Machine description list.
	Values []*string `json:"values,omitempty" tf:"values,omitempty"`
}

type MachineGroupTypeParameters struct {

	// Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
	// Machine group type. Valid values: ip: the IP addresses of collection machines are stored in Values of the machine group; label: the tags of the machines are stored in Values of the machine group.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Machine description list.
	// Machine description list.
	// +kubebuilder:validation:Optional
	Values []*string `json:"values" tf:"values,omitempty"`
}

// MachineGroupSpec defines the desired state of MachineGroup
type MachineGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MachineGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MachineGroupInitParameters `json:"initProvider,omitempty"`
}

// MachineGroupStatus defines the observed state of MachineGroup.
type MachineGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MachineGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MachineGroup is the Schema for the MachineGroups API. Provides a resource to create a cls machine group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type MachineGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.groupName) || (has(self.initProvider) && has(self.initProvider.groupName))",message="spec.forProvider.groupName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.machineGroupType) || (has(self.initProvider) && has(self.initProvider.machineGroupType))",message="spec.forProvider.machineGroupType is a required parameter"
	Spec   MachineGroupSpec   `json:"spec"`
	Status MachineGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MachineGroupList contains a list of MachineGroups
type MachineGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MachineGroup `json:"items"`
}

// Repository type metadata.
var (
	MachineGroup_Kind             = "MachineGroup"
	MachineGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MachineGroup_Kind}.String()
	MachineGroup_KindAPIVersion   = MachineGroup_Kind + "." + CRDGroupVersion.String()
	MachineGroup_GroupVersionKind = CRDGroupVersion.WithKind(MachineGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&MachineGroup{}, &MachineGroupList{})
}
