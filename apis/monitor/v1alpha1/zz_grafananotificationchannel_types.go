// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GrafanaNotificationChannelInitParameters struct {

	// channel name.
	// channel name.
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name,omitempty"`

	// extra grafana organization id list, default to 1 representing Main Org.
	// extra grafana organization id list, default to 1 representing Main Org.
	ExtraOrgIds []*string `json:"extraOrgIds,omitempty" tf:"extra_org_ids,omitempty"`

	// Grafana organization which channel will be installed, default to 1 representing Main Org.
	// Grafana organization which channel will be installed, default to 1 representing Main Org.
	OrgID *float64 `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// cloud monitor notification template notice-id list.
	// cloud monitor notification template notice-id list.
	Receivers []*string `json:"receivers,omitempty" tf:"receivers,omitempty"`
}

type GrafanaNotificationChannelObservation struct {

	// plugin id.
	// plugin id.
	ChannelID *string `json:"channelId,omitempty" tf:"channel_id,omitempty"`

	// channel name.
	// channel name.
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name,omitempty"`

	// extra grafana organization id list, default to 1 representing Main Org.
	// extra grafana organization id list, default to 1 representing Main Org.
	ExtraOrgIds []*string `json:"extraOrgIds,omitempty" tf:"extra_org_ids,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// grafana instance id.
	// grafana instance id.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Grafana organization which channel will be installed, default to 1 representing Main Org.
	// Grafana organization which channel will be installed, default to 1 representing Main Org.
	OrgID *float64 `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// cloud monitor notification template notice-id list.
	// cloud monitor notification template notice-id list.
	Receivers []*string `json:"receivers,omitempty" tf:"receivers,omitempty"`
}

type GrafanaNotificationChannelParameters struct {

	// channel name.
	// channel name.
	// +kubebuilder:validation:Optional
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name,omitempty"`

	// extra grafana organization id list, default to 1 representing Main Org.
	// extra grafana organization id list, default to 1 representing Main Org.
	// +kubebuilder:validation:Optional
	ExtraOrgIds []*string `json:"extraOrgIds,omitempty" tf:"extra_org_ids,omitempty"`

	// grafana instance id.
	// grafana instance id.
	// +crossplane:generate:reference:type=GrafanaInstance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a GrafanaInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a GrafanaInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Grafana organization which channel will be installed, default to 1 representing Main Org.
	// Grafana organization which channel will be installed, default to 1 representing Main Org.
	// +kubebuilder:validation:Optional
	OrgID *float64 `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// cloud monitor notification template notice-id list.
	// cloud monitor notification template notice-id list.
	// +kubebuilder:validation:Optional
	Receivers []*string `json:"receivers,omitempty" tf:"receivers,omitempty"`
}

// GrafanaNotificationChannelSpec defines the desired state of GrafanaNotificationChannel
type GrafanaNotificationChannelSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GrafanaNotificationChannelParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GrafanaNotificationChannelInitParameters `json:"initProvider,omitempty"`
}

// GrafanaNotificationChannelStatus defines the observed state of GrafanaNotificationChannel.
type GrafanaNotificationChannelStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GrafanaNotificationChannelObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// GrafanaNotificationChannel is the Schema for the GrafanaNotificationChannels API. Provides a resource to create a monitor grafanaNotificationChannel
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type GrafanaNotificationChannel struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GrafanaNotificationChannelSpec   `json:"spec"`
	Status            GrafanaNotificationChannelStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GrafanaNotificationChannelList contains a list of GrafanaNotificationChannels
type GrafanaNotificationChannelList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GrafanaNotificationChannel `json:"items"`
}

// Repository type metadata.
var (
	GrafanaNotificationChannel_Kind             = "GrafanaNotificationChannel"
	GrafanaNotificationChannel_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: GrafanaNotificationChannel_Kind}.String()
	GrafanaNotificationChannel_KindAPIVersion   = GrafanaNotificationChannel_Kind + "." + CRDGroupVersion.String()
	GrafanaNotificationChannel_GroupVersionKind = CRDGroupVersion.WithKind(GrafanaNotificationChannel_Kind)
)

func init() {
	SchemeBuilder.Register(&GrafanaNotificationChannel{}, &GrafanaNotificationChannelList{})
}
