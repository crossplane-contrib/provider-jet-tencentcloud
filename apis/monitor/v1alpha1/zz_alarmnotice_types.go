// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlarmNoticeInitParameters struct {

	// A maximum of one alarm notification can be pushed to the CLS service.
	// A maximum of one alarm notification can be pushed to the CLS service.
	ClsNotices []ClsNoticesInitParameters `json:"clsNotices,omitempty" tf:"cls_notices,omitempty"`

	// Notification template name within 60.
	// Notification template name within 60.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Notification language zh-CN=Chinese en-US=English.
	// Notification language zh-CN=Chinese en-US=English.
	NoticeLanguage *string `json:"noticeLanguage,omitempty" tf:"notice_language,omitempty"`

	// Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
	// Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
	NoticeType *string `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The maximum number of callback notifications is 3.
	// The maximum number of callback notifications is 3.
	URLNotices []URLNoticesInitParameters `json:"urlNotices,omitempty" tf:"url_notices,omitempty"`

	// Alarm notification template list.(At most five).
	// Alarm notification template list.(At most five).
	UserNotices []UserNoticesInitParameters `json:"userNotices,omitempty" tf:"user_notices,omitempty"`
}

type AlarmNoticeObservation struct {

	// Amp consumer ID.
	// Amp consumer ID.
	AmpConsumerID *string `json:"ampConsumerId,omitempty" tf:"amp_consumer_id,omitempty"`

	// A maximum of one alarm notification can be pushed to the CLS service.
	// A maximum of one alarm notification can be pushed to the CLS service.
	ClsNotices []ClsNoticesObservation `json:"clsNotices,omitempty" tf:"cls_notices,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Whether it is the system default notification template 0=No 1=Yes.
	// Whether it is the system default notification template 0=No 1=Yes.
	IsPreset *float64 `json:"isPreset,omitempty" tf:"is_preset,omitempty"`

	// Notification template name within 60.
	// Notification template name within 60.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Notification language zh-CN=Chinese en-US=English.
	// Notification language zh-CN=Chinese en-US=English.
	NoticeLanguage *string `json:"noticeLanguage,omitempty" tf:"notice_language,omitempty"`

	// Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
	// Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
	NoticeType *string `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// List of alarm policy IDs bound to the alarm notification template.
	// List of alarm policy IDs bound to the alarm notification template.
	PolicyIds []*string `json:"policyIds,omitempty" tf:"policy_ids,omitempty"`

	// The maximum number of callback notifications is 3.
	// The maximum number of callback notifications is 3.
	URLNotices []URLNoticesObservation `json:"urlNotices,omitempty" tf:"url_notices,omitempty"`

	// Last modified time.
	// Last modified time.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Last Modified By.
	// Last Modified By.
	UpdatedBy *string `json:"updatedBy,omitempty" tf:"updated_by,omitempty"`

	// Alarm notification template list.(At most five).
	// Alarm notification template list.(At most five).
	UserNotices []UserNoticesObservation `json:"userNotices,omitempty" tf:"user_notices,omitempty"`
}

type AlarmNoticeParameters struct {

	// A maximum of one alarm notification can be pushed to the CLS service.
	// A maximum of one alarm notification can be pushed to the CLS service.
	// +kubebuilder:validation:Optional
	ClsNotices []ClsNoticesParameters `json:"clsNotices,omitempty" tf:"cls_notices,omitempty"`

	// Notification template name within 60.
	// Notification template name within 60.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Notification language zh-CN=Chinese en-US=English.
	// Notification language zh-CN=Chinese en-US=English.
	// +kubebuilder:validation:Optional
	NoticeLanguage *string `json:"noticeLanguage,omitempty" tf:"notice_language,omitempty"`

	// Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
	// Alarm notification type ALARM=Notification not restored OK=Notification restored ALL.
	// +kubebuilder:validation:Optional
	NoticeType *string `json:"noticeType,omitempty" tf:"notice_type,omitempty"`

	// The maximum number of callback notifications is 3.
	// The maximum number of callback notifications is 3.
	// +kubebuilder:validation:Optional
	URLNotices []URLNoticesParameters `json:"urlNotices,omitempty" tf:"url_notices,omitempty"`

	// Alarm notification template list.(At most five).
	// Alarm notification template list.(At most five).
	// +kubebuilder:validation:Optional
	UserNotices []UserNoticesParameters `json:"userNotices,omitempty" tf:"user_notices,omitempty"`
}

type ClsNoticesInitParameters struct {

	// Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
	// Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
	Enable *float64 `json:"enable,omitempty" tf:"enable,omitempty"`

	// Log collection Id.
	// Log collection Id.
	LogSetID *string `json:"logSetId,omitempty" tf:"log_set_id,omitempty"`

	// Regional.
	// Regional.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Theme Id.
	// Theme Id.
	TopicID *string `json:"topicId,omitempty" tf:"topic_id,omitempty"`
}

type ClsNoticesObservation struct {

	// Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
	// Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
	Enable *float64 `json:"enable,omitempty" tf:"enable,omitempty"`

	// Log collection Id.
	// Log collection Id.
	LogSetID *string `json:"logSetId,omitempty" tf:"log_set_id,omitempty"`

	// Regional.
	// Regional.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Theme Id.
	// Theme Id.
	TopicID *string `json:"topicId,omitempty" tf:"topic_id,omitempty"`
}

type ClsNoticesParameters struct {

	// Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
	// Start-stop status, can not be transmitted, default enabled. 0= Disabled, 1= enabled.
	// +kubebuilder:validation:Optional
	Enable *float64 `json:"enable,omitempty" tf:"enable,omitempty"`

	// Log collection Id.
	// Log collection Id.
	// +kubebuilder:validation:Optional
	LogSetID *string `json:"logSetId" tf:"log_set_id,omitempty"`

	// Regional.
	// Regional.
	// +kubebuilder:validation:Optional
	Region *string `json:"region" tf:"region,omitempty"`

	// Theme Id.
	// Theme Id.
	// +kubebuilder:validation:Optional
	TopicID *string `json:"topicId" tf:"topic_id,omitempty"`
}

type URLNoticesInitParameters struct {

	// Notification End Time Seconds at the start of a day.
	// Notification End Time Seconds at the start of a day.
	EndTime *float64 `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// If passed verification 0 is no, 1 is yes. Default 0.
	// If passed verification `0` is no, `1` is yes. Default `0`.
	IsValid *float64 `json:"isValid,omitempty" tf:"is_valid,omitempty"`

	// Notification Start Time Number of seconds at the start of a day.
	// Notification Start Time Number of seconds at the start of a day.
	StartTime *float64 `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// Callback URL (limited to 256 characters).
	// Callback URL (limited to 256 characters).
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// Verification code.
	// Verification code.
	ValidationCode *string `json:"validationCode,omitempty" tf:"validation_code,omitempty"`

	// Notification period 1-7 indicates Monday to Sunday.
	// Notification period 1-7 indicates Monday to Sunday.
	Weekday []*float64 `json:"weekday,omitempty" tf:"weekday,omitempty"`
}

type URLNoticesObservation struct {

	// Notification End Time Seconds at the start of a day.
	// Notification End Time Seconds at the start of a day.
	EndTime *float64 `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// If passed verification 0 is no, 1 is yes. Default 0.
	// If passed verification `0` is no, `1` is yes. Default `0`.
	IsValid *float64 `json:"isValid,omitempty" tf:"is_valid,omitempty"`

	// Notification Start Time Number of seconds at the start of a day.
	// Notification Start Time Number of seconds at the start of a day.
	StartTime *float64 `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// Callback URL (limited to 256 characters).
	// Callback URL (limited to 256 characters).
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// Verification code.
	// Verification code.
	ValidationCode *string `json:"validationCode,omitempty" tf:"validation_code,omitempty"`

	// Notification period 1-7 indicates Monday to Sunday.
	// Notification period 1-7 indicates Monday to Sunday.
	Weekday []*float64 `json:"weekday,omitempty" tf:"weekday,omitempty"`
}

type URLNoticesParameters struct {

	// Notification End Time Seconds at the start of a day.
	// Notification End Time Seconds at the start of a day.
	// +kubebuilder:validation:Optional
	EndTime *float64 `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// If passed verification 0 is no, 1 is yes. Default 0.
	// If passed verification `0` is no, `1` is yes. Default `0`.
	// +kubebuilder:validation:Optional
	IsValid *float64 `json:"isValid,omitempty" tf:"is_valid,omitempty"`

	// Notification Start Time Number of seconds at the start of a day.
	// Notification Start Time Number of seconds at the start of a day.
	// +kubebuilder:validation:Optional
	StartTime *float64 `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// Callback URL (limited to 256 characters).
	// Callback URL (limited to 256 characters).
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`

	// Verification code.
	// Verification code.
	// +kubebuilder:validation:Optional
	ValidationCode *string `json:"validationCode,omitempty" tf:"validation_code,omitempty"`

	// Notification period 1-7 indicates Monday to Sunday.
	// Notification period 1-7 indicates Monday to Sunday.
	// +kubebuilder:validation:Optional
	Weekday []*float64 `json:"weekday,omitempty" tf:"weekday,omitempty"`
}

type UserNoticesInitParameters struct {

	// Notification End Time Seconds at the start of a day.
	// The number of seconds since the notification end time 00:00:00 (value range 0-86399).
	EndTime *float64 `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// User group ID list.
	// User group ID list.
	GroupIds []*float64 `json:"groupIds,omitempty" tf:"group_ids,omitempty"`

	// Contact notification required 0= No 1= Yes.
	// Contact notification required 0= No 1= Yes.
	NeedPhoneArriveNotice *float64 `json:"needPhoneArriveNotice,omitempty" tf:"need_phone_arrive_notice,omitempty"`

	// Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
	// Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
	NoticeWay []*string `json:"noticeWay,omitempty" tf:"notice_way,omitempty"`

	// Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
	// Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
	PhoneCallType *string `json:"phoneCallType,omitempty" tf:"phone_call_type,omitempty"`

	// Number of seconds between polls (value range: 60-900).
	// Number of seconds between polls (value range: 60-900).
	PhoneCircleInterval *float64 `json:"phoneCircleInterval,omitempty" tf:"phone_circle_interval,omitempty"`

	// Number of telephone polls (value range: 1-5).
	// Number of telephone polls (value range: 1-5).
	PhoneCircleTimes *float64 `json:"phoneCircleTimes,omitempty" tf:"phone_circle_times,omitempty"`

	// Number of seconds between calls in a polling session (value range: 60-900).
	// Number of seconds between calls in a polling session (value range: 60-900).
	PhoneInnerInterval *float64 `json:"phoneInnerInterval,omitempty" tf:"phone_inner_interval,omitempty"`

	// Telephone polling list.
	// Telephone polling list.
	PhoneOrder []*float64 `json:"phoneOrder,omitempty" tf:"phone_order,omitempty"`

	// Recipient Type USER=User GROUP=User Group.
	// Recipient Type USER=User GROUP=User Group.
	ReceiverType *string `json:"receiverType,omitempty" tf:"receiver_type,omitempty"`

	// Notification Start Time Number of seconds at the start of a day.
	// The number of seconds since the notification start time 00:00:00 (value range 0-86399).
	StartTime *float64 `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// User UID List.
	// User UID List.
	UserIds []*float64 `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// Notification period 1-7 indicates Monday to Sunday.
	// Notification period 1-7 indicates Monday to Sunday.
	Weekday []*float64 `json:"weekday,omitempty" tf:"weekday,omitempty"`
}

type UserNoticesObservation struct {

	// Notification End Time Seconds at the start of a day.
	// The number of seconds since the notification end time 00:00:00 (value range 0-86399).
	EndTime *float64 `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// User group ID list.
	// User group ID list.
	GroupIds []*float64 `json:"groupIds,omitempty" tf:"group_ids,omitempty"`

	// Contact notification required 0= No 1= Yes.
	// Contact notification required 0= No 1= Yes.
	NeedPhoneArriveNotice *float64 `json:"needPhoneArriveNotice,omitempty" tf:"need_phone_arrive_notice,omitempty"`

	// Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
	// Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
	NoticeWay []*string `json:"noticeWay,omitempty" tf:"notice_way,omitempty"`

	// Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
	// Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
	PhoneCallType *string `json:"phoneCallType,omitempty" tf:"phone_call_type,omitempty"`

	// Number of seconds between polls (value range: 60-900).
	// Number of seconds between polls (value range: 60-900).
	PhoneCircleInterval *float64 `json:"phoneCircleInterval,omitempty" tf:"phone_circle_interval,omitempty"`

	// Number of telephone polls (value range: 1-5).
	// Number of telephone polls (value range: 1-5).
	PhoneCircleTimes *float64 `json:"phoneCircleTimes,omitempty" tf:"phone_circle_times,omitempty"`

	// Number of seconds between calls in a polling session (value range: 60-900).
	// Number of seconds between calls in a polling session (value range: 60-900).
	PhoneInnerInterval *float64 `json:"phoneInnerInterval,omitempty" tf:"phone_inner_interval,omitempty"`

	// Telephone polling list.
	// Telephone polling list.
	PhoneOrder []*float64 `json:"phoneOrder,omitempty" tf:"phone_order,omitempty"`

	// Recipient Type USER=User GROUP=User Group.
	// Recipient Type USER=User GROUP=User Group.
	ReceiverType *string `json:"receiverType,omitempty" tf:"receiver_type,omitempty"`

	// Notification Start Time Number of seconds at the start of a day.
	// The number of seconds since the notification start time 00:00:00 (value range 0-86399).
	StartTime *float64 `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// User UID List.
	// User UID List.
	UserIds []*float64 `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// Notification period 1-7 indicates Monday to Sunday.
	// Notification period 1-7 indicates Monday to Sunday.
	Weekday []*float64 `json:"weekday,omitempty" tf:"weekday,omitempty"`
}

type UserNoticesParameters struct {

	// Notification End Time Seconds at the start of a day.
	// The number of seconds since the notification end time 00:00:00 (value range 0-86399).
	// +kubebuilder:validation:Optional
	EndTime *float64 `json:"endTime" tf:"end_time,omitempty"`

	// User group ID list.
	// User group ID list.
	// +kubebuilder:validation:Optional
	GroupIds []*float64 `json:"groupIds,omitempty" tf:"group_ids,omitempty"`

	// Contact notification required 0= No 1= Yes.
	// Contact notification required 0= No 1= Yes.
	// +kubebuilder:validation:Optional
	NeedPhoneArriveNotice *float64 `json:"needPhoneArriveNotice,omitempty" tf:"need_phone_arrive_notice,omitempty"`

	// Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
	// Notification Channel List EMAIL=Mail SMS=SMS CALL=Telephone WECHAT=WeChat RTX=Enterprise WeChat.
	// +kubebuilder:validation:Optional
	NoticeWay []*string `json:"noticeWay" tf:"notice_way,omitempty"`

	// Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
	// Call type SYNC= Simultaneous call CIRCLE= Round call If this parameter is not specified, the default value is round call.
	// +kubebuilder:validation:Optional
	PhoneCallType *string `json:"phoneCallType,omitempty" tf:"phone_call_type,omitempty"`

	// Number of seconds between polls (value range: 60-900).
	// Number of seconds between polls (value range: 60-900).
	// +kubebuilder:validation:Optional
	PhoneCircleInterval *float64 `json:"phoneCircleInterval,omitempty" tf:"phone_circle_interval,omitempty"`

	// Number of telephone polls (value range: 1-5).
	// Number of telephone polls (value range: 1-5).
	// +kubebuilder:validation:Optional
	PhoneCircleTimes *float64 `json:"phoneCircleTimes,omitempty" tf:"phone_circle_times,omitempty"`

	// Number of seconds between calls in a polling session (value range: 60-900).
	// Number of seconds between calls in a polling session (value range: 60-900).
	// +kubebuilder:validation:Optional
	PhoneInnerInterval *float64 `json:"phoneInnerInterval,omitempty" tf:"phone_inner_interval,omitempty"`

	// Telephone polling list.
	// Telephone polling list.
	// +kubebuilder:validation:Optional
	PhoneOrder []*float64 `json:"phoneOrder,omitempty" tf:"phone_order,omitempty"`

	// Recipient Type USER=User GROUP=User Group.
	// Recipient Type USER=User GROUP=User Group.
	// +kubebuilder:validation:Optional
	ReceiverType *string `json:"receiverType" tf:"receiver_type,omitempty"`

	// Notification Start Time Number of seconds at the start of a day.
	// The number of seconds since the notification start time 00:00:00 (value range 0-86399).
	// +kubebuilder:validation:Optional
	StartTime *float64 `json:"startTime" tf:"start_time,omitempty"`

	// User UID List.
	// User UID List.
	// +kubebuilder:validation:Optional
	UserIds []*float64 `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// Notification period 1-7 indicates Monday to Sunday.
	// Notification period 1-7 indicates Monday to Sunday.
	// +kubebuilder:validation:Optional
	Weekday []*float64 `json:"weekday,omitempty" tf:"weekday,omitempty"`
}

// AlarmNoticeSpec defines the desired state of AlarmNotice
type AlarmNoticeSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AlarmNoticeParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AlarmNoticeInitParameters `json:"initProvider,omitempty"`
}

// AlarmNoticeStatus defines the observed state of AlarmNotice.
type AlarmNoticeStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AlarmNoticeObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AlarmNotice is the Schema for the AlarmNotices API. Provides a alarm notice resource for monitor.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type AlarmNotice struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.noticeLanguage) || (has(self.initProvider) && has(self.initProvider.noticeLanguage))",message="spec.forProvider.noticeLanguage is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.noticeType) || (has(self.initProvider) && has(self.initProvider.noticeType))",message="spec.forProvider.noticeType is a required parameter"
	Spec   AlarmNoticeSpec   `json:"spec"`
	Status AlarmNoticeStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AlarmNoticeList contains a list of AlarmNotices
type AlarmNoticeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AlarmNotice `json:"items"`
}

// Repository type metadata.
var (
	AlarmNotice_Kind             = "AlarmNotice"
	AlarmNotice_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AlarmNotice_Kind}.String()
	AlarmNotice_KindAPIVersion   = AlarmNotice_Kind + "." + CRDGroupVersion.String()
	AlarmNotice_GroupVersionKind = CRDGroupVersion.WithKind(AlarmNotice_Kind)
)

func init() {
	SchemeBuilder.Register(&AlarmNotice{}, &AlarmNoticeList{})
}
