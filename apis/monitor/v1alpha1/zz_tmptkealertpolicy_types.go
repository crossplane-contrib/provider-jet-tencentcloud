// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlertManagerInitParameters struct {

	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
	// Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	// Alertmanager url.
	// Alertmanager url.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type AlertManagerObservation struct {

	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
	// Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	// Alertmanager url.
	// Alertmanager url.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type AlertManagerParameters struct {

	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
	// Alertmanager is deployed in the cluster type. Note: This field may return null, indicating that a valid value could not be retrieved.
	// +kubebuilder:validation:Optional
	ClusterType *string `json:"clusterType,omitempty" tf:"cluster_type,omitempty"`

	// Alertmanager url.
	// Alertmanager url.
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

type AlertRuleInitParameters struct {

	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	// If the alarm policy is derived from the CRD resource definition of the user cluster, the ClusterId is the cluster ID to which it belongs.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
	// Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Policy name.
	// Policy name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Alarm channels, which may be returned using null in the template.
	// Alarm channels, which may be returned using null in the template.
	Notification []NotificationInitParameters `json:"notification,omitempty" tf:"notification,omitempty"`

	// A list of rules.
	// A list of rules.
	Rules []AlertRuleRulesInitParameters `json:"rules,omitempty" tf:"rules,omitempty"`

	// If the alarm is sent from a template, the TemplateId is the template id.
	// If the alarm is sent from a template, the TemplateId is the template id.
	TemplateID *string `json:"templateId,omitempty" tf:"template_id,omitempty"`

	// Last modified time.
	// Last modified time.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type AlertRuleObservation struct {

	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	// If the alarm policy is derived from the CRD resource definition of the user cluster, the ClusterId is the cluster ID to which it belongs.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
	// Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Policy name.
	// Policy name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Alarm channels, which may be returned using null in the template.
	// Alarm channels, which may be returned using null in the template.
	Notification []NotificationObservation `json:"notification,omitempty" tf:"notification,omitempty"`

	// A list of rules.
	// A list of rules.
	Rules []AlertRuleRulesObservation `json:"rules,omitempty" tf:"rules,omitempty"`

	// If the alarm is sent from a template, the TemplateId is the template id.
	// If the alarm is sent from a template, the TemplateId is the template id.
	TemplateID *string `json:"templateId,omitempty" tf:"template_id,omitempty"`

	// Last modified time.
	// Last modified time.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type AlertRuleParameters struct {

	// The ID of the cluster where the alertmanager is deployed. Note: This field may return null, indicating that a valid value could not be retrieved.
	// If the alarm policy is derived from the CRD resource definition of the user cluster, the ClusterId is the cluster ID to which it belongs.
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
	// Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Policy name.
	// Policy name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Alarm channels, which may be returned using null in the template.
	// Alarm channels, which may be returned using null in the template.
	// +kubebuilder:validation:Optional
	Notification []NotificationParameters `json:"notification,omitempty" tf:"notification,omitempty"`

	// A list of rules.
	// A list of rules.
	// +kubebuilder:validation:Optional
	Rules []AlertRuleRulesParameters `json:"rules" tf:"rules,omitempty"`

	// If the alarm is sent from a template, the TemplateId is the template id.
	// If the alarm is sent from a template, the TemplateId is the template id.
	// +kubebuilder:validation:Optional
	TemplateID *string `json:"templateId,omitempty" tf:"template_id,omitempty"`

	// Last modified time.
	// Last modified time.
	// +kubebuilder:validation:Optional
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type AlertRuleRulesInitParameters struct {

	// Refer to annotations in prometheus rule.
	// Refer to annotations in prometheus rule.
	Annotations []RulesAnnotationsInitParameters `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// A description of the rule.
	// A description of the rule.
	Describe *string `json:"describe,omitempty" tf:"describe,omitempty"`

	// Time of duration.
	// Time of duration.
	For *string `json:"for,omitempty" tf:"for,omitempty"`

	// Extra labels.
	// Extra labels.
	Labels []RulesLabelsInitParameters `json:"labels,omitempty" tf:"labels,omitempty"`

	// Policy name.
	// Rule name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Prometheus statement.
	// Prometheus statement.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// Alarm rule status.
	// Alarm rule status.
	RuleState *float64 `json:"ruleState,omitempty" tf:"rule_state,omitempty"`

	// Alert sending template.
	// Alert sending template.
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type AlertRuleRulesObservation struct {

	// Refer to annotations in prometheus rule.
	// Refer to annotations in prometheus rule.
	Annotations []RulesAnnotationsObservation `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// A description of the rule.
	// A description of the rule.
	Describe *string `json:"describe,omitempty" tf:"describe,omitempty"`

	// Time of duration.
	// Time of duration.
	For *string `json:"for,omitempty" tf:"for,omitempty"`

	// Extra labels.
	// Extra labels.
	Labels []RulesLabelsObservation `json:"labels,omitempty" tf:"labels,omitempty"`

	// Policy name.
	// Rule name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Prometheus statement.
	// Prometheus statement.
	Rule *string `json:"rule,omitempty" tf:"rule,omitempty"`

	// Alarm rule status.
	// Alarm rule status.
	RuleState *float64 `json:"ruleState,omitempty" tf:"rule_state,omitempty"`

	// Alert sending template.
	// Alert sending template.
	Template *string `json:"template,omitempty" tf:"template,omitempty"`
}

type AlertRuleRulesParameters struct {

	// Refer to annotations in prometheus rule.
	// Refer to annotations in prometheus rule.
	// +kubebuilder:validation:Optional
	Annotations []RulesAnnotationsParameters `json:"annotations,omitempty" tf:"annotations,omitempty"`

	// A description of the rule.
	// A description of the rule.
	// +kubebuilder:validation:Optional
	Describe *string `json:"describe,omitempty" tf:"describe,omitempty"`

	// Time of duration.
	// Time of duration.
	// +kubebuilder:validation:Optional
	For *string `json:"for" tf:"for,omitempty"`

	// Extra labels.
	// Extra labels.
	// +kubebuilder:validation:Optional
	Labels []RulesLabelsParameters `json:"labels" tf:"labels,omitempty"`

	// Policy name.
	// Rule name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Prometheus statement.
	// Prometheus statement.
	// +kubebuilder:validation:Optional
	Rule *string `json:"rule" tf:"rule,omitempty"`

	// Alarm rule status.
	// Alarm rule status.
	// +kubebuilder:validation:Optional
	RuleState *float64 `json:"ruleState,omitempty" tf:"rule_state,omitempty"`

	// Alert sending template.
	// Alert sending template.
	// +kubebuilder:validation:Optional
	Template *string `json:"template" tf:"template,omitempty"`
}

type NotificationInitParameters struct {

	// If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
	// If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
	AlertManager []AlertManagerInitParameters `json:"alertManager,omitempty" tf:"alert_manager,omitempty"`

	// Whether it is enabled.
	// Whether it is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
	// Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
	NotifyWay []*string `json:"notifyWay,omitempty" tf:"notify_way,omitempty"`

	// Telephone alerts reach notifications.
	// Telephone alerts reach notifications.
	PhoneArriveNotice *bool `json:"phoneArriveNotice,omitempty" tf:"phone_arrive_notice,omitempty"`

	// Effective end timeTelephone alarm wheel interval. Units: Seconds.
	// Effective end timeTelephone alarm wheel interval. Units: Seconds.
	PhoneCircleInterval *float64 `json:"phoneCircleInterval,omitempty" tf:"phone_circle_interval,omitempty"`

	// PhoneCircleTimes.
	// PhoneCircleTimes.
	PhoneCircleTimes *float64 `json:"phoneCircleTimes,omitempty" tf:"phone_circle_times,omitempty"`

	// Telephone alarm wheel intervals. Units: Seconds.
	// Telephone alarm wheel intervals. Units: Seconds.
	PhoneInnerInterval *float64 `json:"phoneInnerInterval,omitempty" tf:"phone_inner_interval,omitempty"`

	// Telephone alarm sequence.
	// Telephone alarm sequence.
	PhoneNotifyOrder []*float64 `json:"phoneNotifyOrder,omitempty" tf:"phone_notify_order,omitempty"`

	// Alert Receiving Group (User Group).
	// Alert Receiving Group (User Group).
	ReceiverGroups []*string `json:"receiverGroups,omitempty" tf:"receiver_groups,omitempty"`

	// Convergence time.
	// Convergence time.
	RepeatInterval *string `json:"repeatInterval,omitempty" tf:"repeat_interval,omitempty"`

	// Effective end time.
	// Effective end time.
	TimeRangeEnd *string `json:"timeRangeEnd,omitempty" tf:"time_range_end,omitempty"`

	// The time from which it takes effect.
	// The time from which it takes effect.
	TimeRangeStart *string `json:"timeRangeStart,omitempty" tf:"time_range_start,omitempty"`

	// The channel type, which defaults to amp, supports the following amp, webhook, alertmanager.
	// The channel type, which defaults to amp, supports the following `amp`, `webhook`, `alertmanager`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
	// If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
	WebHook *string `json:"webHook,omitempty" tf:"web_hook,omitempty"`
}

type NotificationObservation struct {

	// If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
	// If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
	AlertManager []AlertManagerObservation `json:"alertManager,omitempty" tf:"alert_manager,omitempty"`

	// Whether it is enabled.
	// Whether it is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
	// Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
	NotifyWay []*string `json:"notifyWay,omitempty" tf:"notify_way,omitempty"`

	// Telephone alerts reach notifications.
	// Telephone alerts reach notifications.
	PhoneArriveNotice *bool `json:"phoneArriveNotice,omitempty" tf:"phone_arrive_notice,omitempty"`

	// Effective end timeTelephone alarm wheel interval. Units: Seconds.
	// Effective end timeTelephone alarm wheel interval. Units: Seconds.
	PhoneCircleInterval *float64 `json:"phoneCircleInterval,omitempty" tf:"phone_circle_interval,omitempty"`

	// PhoneCircleTimes.
	// PhoneCircleTimes.
	PhoneCircleTimes *float64 `json:"phoneCircleTimes,omitempty" tf:"phone_circle_times,omitempty"`

	// Telephone alarm wheel intervals. Units: Seconds.
	// Telephone alarm wheel intervals. Units: Seconds.
	PhoneInnerInterval *float64 `json:"phoneInnerInterval,omitempty" tf:"phone_inner_interval,omitempty"`

	// Telephone alarm sequence.
	// Telephone alarm sequence.
	PhoneNotifyOrder []*float64 `json:"phoneNotifyOrder,omitempty" tf:"phone_notify_order,omitempty"`

	// Alert Receiving Group (User Group).
	// Alert Receiving Group (User Group).
	ReceiverGroups []*string `json:"receiverGroups,omitempty" tf:"receiver_groups,omitempty"`

	// Convergence time.
	// Convergence time.
	RepeatInterval *string `json:"repeatInterval,omitempty" tf:"repeat_interval,omitempty"`

	// Effective end time.
	// Effective end time.
	TimeRangeEnd *string `json:"timeRangeEnd,omitempty" tf:"time_range_end,omitempty"`

	// The time from which it takes effect.
	// The time from which it takes effect.
	TimeRangeStart *string `json:"timeRangeStart,omitempty" tf:"time_range_start,omitempty"`

	// The channel type, which defaults to amp, supports the following amp, webhook, alertmanager.
	// The channel type, which defaults to amp, supports the following `amp`, `webhook`, `alertmanager`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
	// If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
	WebHook *string `json:"webHook,omitempty" tf:"web_hook,omitempty"`
}

type NotificationParameters struct {

	// If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
	// If Type is alertmanager, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved..
	// +kubebuilder:validation:Optional
	AlertManager []AlertManagerParameters `json:"alertManager,omitempty" tf:"alert_manager,omitempty"`

	// Whether it is enabled.
	// Whether it is enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
	// Alarm notification method. At present, there are SMS, EMAIL, CALL, WECHAT methods.
	// +kubebuilder:validation:Optional
	NotifyWay []*string `json:"notifyWay,omitempty" tf:"notify_way,omitempty"`

	// Telephone alerts reach notifications.
	// Telephone alerts reach notifications.
	// +kubebuilder:validation:Optional
	PhoneArriveNotice *bool `json:"phoneArriveNotice,omitempty" tf:"phone_arrive_notice,omitempty"`

	// Effective end timeTelephone alarm wheel interval. Units: Seconds.
	// Effective end timeTelephone alarm wheel interval. Units: Seconds.
	// +kubebuilder:validation:Optional
	PhoneCircleInterval *float64 `json:"phoneCircleInterval,omitempty" tf:"phone_circle_interval,omitempty"`

	// PhoneCircleTimes.
	// PhoneCircleTimes.
	// +kubebuilder:validation:Optional
	PhoneCircleTimes *float64 `json:"phoneCircleTimes,omitempty" tf:"phone_circle_times,omitempty"`

	// Telephone alarm wheel intervals. Units: Seconds.
	// Telephone alarm wheel intervals. Units: Seconds.
	// +kubebuilder:validation:Optional
	PhoneInnerInterval *float64 `json:"phoneInnerInterval,omitempty" tf:"phone_inner_interval,omitempty"`

	// Telephone alarm sequence.
	// Telephone alarm sequence.
	// +kubebuilder:validation:Optional
	PhoneNotifyOrder []*float64 `json:"phoneNotifyOrder,omitempty" tf:"phone_notify_order,omitempty"`

	// Alert Receiving Group (User Group).
	// Alert Receiving Group (User Group).
	// +kubebuilder:validation:Optional
	ReceiverGroups []*string `json:"receiverGroups,omitempty" tf:"receiver_groups,omitempty"`

	// Convergence time.
	// Convergence time.
	// +kubebuilder:validation:Optional
	RepeatInterval *string `json:"repeatInterval,omitempty" tf:"repeat_interval,omitempty"`

	// Effective end time.
	// Effective end time.
	// +kubebuilder:validation:Optional
	TimeRangeEnd *string `json:"timeRangeEnd,omitempty" tf:"time_range_end,omitempty"`

	// The time from which it takes effect.
	// The time from which it takes effect.
	// +kubebuilder:validation:Optional
	TimeRangeStart *string `json:"timeRangeStart,omitempty" tf:"time_range_start,omitempty"`

	// The channel type, which defaults to amp, supports the following amp, webhook, alertmanager.
	// The channel type, which defaults to amp, supports the following `amp`, `webhook`, `alertmanager`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
	// If Type is webhook, the field is required. Note: This field may return null, indicating that a valid value could not be retrieved.
	// +kubebuilder:validation:Optional
	WebHook *string `json:"webHook,omitempty" tf:"web_hook,omitempty"`
}

type RulesAnnotationsInitParameters struct {

	// Policy name.
	// Name of map.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Value of map.
	// Value of map.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesAnnotationsObservation struct {

	// Policy name.
	// Name of map.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Value of map.
	// Value of map.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesAnnotationsParameters struct {

	// Policy name.
	// Name of map.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Value of map.
	// Value of map.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type RulesLabelsInitParameters struct {

	// Policy name.
	// Name of map.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Value of map.
	// Value of map.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesLabelsObservation struct {

	// Policy name.
	// Name of map.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Value of map.
	// Value of map.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type RulesLabelsParameters struct {

	// Policy name.
	// Name of map.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Value of map.
	// Value of map.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

type TmpTkeAlertPolicyInitParameters struct {

	// Alarm notification channels.
	// Alarm notification channels.
	AlertRule []AlertRuleInitParameters `json:"alertRule,omitempty" tf:"alert_rule,omitempty"`
}

type TmpTkeAlertPolicyObservation struct {

	// Alarm notification channels.
	// Alarm notification channels.
	AlertRule []AlertRuleObservation `json:"alertRule,omitempty" tf:"alert_rule,omitempty"`

	// Alarm policy ID. Note: This field may return null, indicating that a valid value could not be retrieved.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Instance Id.
	// Instance Id.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`
}

type TmpTkeAlertPolicyParameters struct {

	// Alarm notification channels.
	// Alarm notification channels.
	// +kubebuilder:validation:Optional
	AlertRule []AlertRuleParameters `json:"alertRule,omitempty" tf:"alert_rule,omitempty"`

	// Instance Id.
	// Instance Id.
	// +crossplane:generate:reference:type=TmpInstance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a TmpInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a TmpInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`
}

// TmpTkeAlertPolicySpec defines the desired state of TmpTkeAlertPolicy
type TmpTkeAlertPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TmpTkeAlertPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TmpTkeAlertPolicyInitParameters `json:"initProvider,omitempty"`
}

// TmpTkeAlertPolicyStatus defines the observed state of TmpTkeAlertPolicy.
type TmpTkeAlertPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TmpTkeAlertPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TmpTkeAlertPolicy is the Schema for the TmpTkeAlertPolicys API. Provides a resource to create a tke tmpAlertPolicy
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type TmpTkeAlertPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.alertRule) || (has(self.initProvider) && has(self.initProvider.alertRule))",message="spec.forProvider.alertRule is a required parameter"
	Spec   TmpTkeAlertPolicySpec   `json:"spec"`
	Status TmpTkeAlertPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TmpTkeAlertPolicyList contains a list of TmpTkeAlertPolicys
type TmpTkeAlertPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TmpTkeAlertPolicy `json:"items"`
}

// Repository type metadata.
var (
	TmpTkeAlertPolicy_Kind             = "TmpTkeAlertPolicy"
	TmpTkeAlertPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TmpTkeAlertPolicy_Kind}.String()
	TmpTkeAlertPolicy_KindAPIVersion   = TmpTkeAlertPolicy_Kind + "." + CRDGroupVersion.String()
	TmpTkeAlertPolicy_GroupVersionKind = CRDGroupVersion.WithKind(TmpTkeAlertPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&TmpTkeAlertPolicy{}, &TmpTkeAlertPolicyList{})
}
