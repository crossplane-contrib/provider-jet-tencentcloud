// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TmpCvmAgentInitParameters struct {

	// Agent name.
	// Agent name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TmpCvmAgentObservation struct {

	// Agent id.
	// Agent id.
	AgentID *string `json:"agentId,omitempty" tf:"agent_id,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Instance id.
	// Instance id.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Agent name.
	// Agent name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type TmpCvmAgentParameters struct {

	// Instance id.
	// Instance id.
	// +crossplane:generate:reference:type=TmpInstance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a TmpInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a TmpInstance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Agent name.
	// Agent name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

// TmpCvmAgentSpec defines the desired state of TmpCvmAgent
type TmpCvmAgentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TmpCvmAgentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TmpCvmAgentInitParameters `json:"initProvider,omitempty"`
}

// TmpCvmAgentStatus defines the observed state of TmpCvmAgent.
type TmpCvmAgentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TmpCvmAgentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TmpCvmAgent is the Schema for the TmpCvmAgents API. Provides a resource to create a monitor tmpCvmAgent
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type TmpCvmAgent struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   TmpCvmAgentSpec   `json:"spec"`
	Status TmpCvmAgentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TmpCvmAgentList contains a list of TmpCvmAgents
type TmpCvmAgentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TmpCvmAgent `json:"items"`
}

// Repository type metadata.
var (
	TmpCvmAgent_Kind             = "TmpCvmAgent"
	TmpCvmAgent_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TmpCvmAgent_Kind}.String()
	TmpCvmAgent_KindAPIVersion   = TmpCvmAgent_Kind + "." + CRDGroupVersion.String()
	TmpCvmAgent_GroupVersionKind = CRDGroupVersion.WithKind(TmpCvmAgent_Kind)
)

func init() {
	SchemeBuilder.Register(&TmpCvmAgent{}, &TmpCvmAgentList{})
}
