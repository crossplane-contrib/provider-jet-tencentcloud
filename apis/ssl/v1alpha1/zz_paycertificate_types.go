// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InformationInitParameters struct {

	// The administrator's email address.
	// The administrator's email address.
	AdminEmail *string `json:"adminEmail,omitempty" tf:"admin_email,omitempty"`

	// The first name of the administrator.
	// The first name of the administrator.
	AdminFirstName *string `json:"adminFirstName,omitempty" tf:"admin_first_name,omitempty"`

	// The last name of the administrator.
	// The last name of the administrator.
	AdminLastName *string `json:"adminLastName,omitempty" tf:"admin_last_name,omitempty"`

	// Manager mobile phone number.
	// Manager mobile phone number.
	AdminPhoneNum *string `json:"adminPhoneNum,omitempty" tf:"admin_phone_num,omitempty"`

	// Manager position.
	// Manager position.
	AdminPosition *string `json:"adminPosition,omitempty" tf:"admin_position,omitempty"`

	// Domain name for binding certificate.
	// Domain name for binding certificate.
	CertificateDomain *string `json:"certificateDomain,omitempty" tf:"certificate_domain,omitempty"`

	// Contact email address.
	// Contact email address.
	ContactEmail *string `json:"contactEmail,omitempty" tf:"contact_email,omitempty"`

	// Contact first name.
	// Contact first name.
	ContactFirstName *string `json:"contactFirstName,omitempty" tf:"contact_first_name,omitempty"`

	// Contact last name.
	// Contact last name.
	ContactLastName *string `json:"contactLastName,omitempty" tf:"contact_last_name,omitempty"`

	// Contact phone number.
	// Contact phone number.
	ContactNumber *string `json:"contactNumber,omitempty" tf:"contact_number,omitempty"`

	// Contact position.
	// Contact position.
	ContactPosition *string `json:"contactPosition,omitempty" tf:"contact_position,omitempty"`

	// CSR content uploaded.
	// CSR content uploaded.
	CsrContent *string `json:"csrContent,omitempty" tf:"csr_content,omitempty"`

	// CSR generation method. Valid values: online, parse. online means online generation, parse means manual upload.
	// CSR generation method. Valid values: `online`, `parse`. `online` means online generation, `parse` means manual upload.
	CsrType *string `json:"csrType,omitempty" tf:"csr_type,omitempty"`

	// Array of uploaded domain names, multi-domain certificates can be uploaded.
	// Array of uploaded domain names, multi-domain certificates can be uploaded.
	DomainList []*string `json:"domainList,omitempty" tf:"domain_list,omitempty"`

	// Private key password.
	// Private key password.
	KeyPassword *string `json:"keyPassword,omitempty" tf:"key_password,omitempty"`

	// Company address.
	// Company address.
	OrganizationAddress *string `json:"organizationAddress,omitempty" tf:"organization_address,omitempty"`

	// Company city.
	// Company city.
	OrganizationCity *string `json:"organizationCity,omitempty" tf:"organization_city,omitempty"`

	// Country name, such as China: CN.
	// Country name, such as China: CN.
	OrganizationCountry *string `json:"organizationCountry,omitempty" tf:"organization_country,omitempty"`

	// Department name.
	// Department name.
	OrganizationDivision *string `json:"organizationDivision,omitempty" tf:"organization_division,omitempty"`

	// Company name.
	// Company name.
	OrganizationName *string `json:"organizationName,omitempty" tf:"organization_name,omitempty"`

	// The province where the company is located.
	// The province where the company is located.
	OrganizationRegion *string `json:"organizationRegion,omitempty" tf:"organization_region,omitempty"`

	// Company landline area code.
	// Company landline area code.
	PhoneAreaCode *string `json:"phoneAreaCode,omitempty" tf:"phone_area_code,omitempty"`

	// Company landline number.
	// Company landline number.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`

	// Company postal code.
	// Company postal code.
	PostalCode *string `json:"postalCode,omitempty" tf:"postal_code,omitempty"`

	// Certificate verification method. Valid values: DNS_AUTO, DNS, FILE. DNS_AUTO means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, DNS means manual DNS verification, FILE means file verification.
	// Certificate verification method. Valid values: `DNS_AUTO`, `DNS`, `FILE`. `DNS_AUTO` means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, `DNS` means manual DNS verification, `FILE` means file verification.
	VerifyType *string `json:"verifyType,omitempty" tf:"verify_type,omitempty"`
}

type InformationObservation struct {

	// The administrator's email address.
	// The administrator's email address.
	AdminEmail *string `json:"adminEmail,omitempty" tf:"admin_email,omitempty"`

	// The first name of the administrator.
	// The first name of the administrator.
	AdminFirstName *string `json:"adminFirstName,omitempty" tf:"admin_first_name,omitempty"`

	// The last name of the administrator.
	// The last name of the administrator.
	AdminLastName *string `json:"adminLastName,omitempty" tf:"admin_last_name,omitempty"`

	// Manager mobile phone number.
	// Manager mobile phone number.
	AdminPhoneNum *string `json:"adminPhoneNum,omitempty" tf:"admin_phone_num,omitempty"`

	// Manager position.
	// Manager position.
	AdminPosition *string `json:"adminPosition,omitempty" tf:"admin_position,omitempty"`

	// Domain name for binding certificate.
	// Domain name for binding certificate.
	CertificateDomain *string `json:"certificateDomain,omitempty" tf:"certificate_domain,omitempty"`

	// Contact email address.
	// Contact email address.
	ContactEmail *string `json:"contactEmail,omitempty" tf:"contact_email,omitempty"`

	// Contact first name.
	// Contact first name.
	ContactFirstName *string `json:"contactFirstName,omitempty" tf:"contact_first_name,omitempty"`

	// Contact last name.
	// Contact last name.
	ContactLastName *string `json:"contactLastName,omitempty" tf:"contact_last_name,omitempty"`

	// Contact phone number.
	// Contact phone number.
	ContactNumber *string `json:"contactNumber,omitempty" tf:"contact_number,omitempty"`

	// Contact position.
	// Contact position.
	ContactPosition *string `json:"contactPosition,omitempty" tf:"contact_position,omitempty"`

	// CSR content uploaded.
	// CSR content uploaded.
	CsrContent *string `json:"csrContent,omitempty" tf:"csr_content,omitempty"`

	// CSR generation method. Valid values: online, parse. online means online generation, parse means manual upload.
	// CSR generation method. Valid values: `online`, `parse`. `online` means online generation, `parse` means manual upload.
	CsrType *string `json:"csrType,omitempty" tf:"csr_type,omitempty"`

	// Array of uploaded domain names, multi-domain certificates can be uploaded.
	// Array of uploaded domain names, multi-domain certificates can be uploaded.
	DomainList []*string `json:"domainList,omitempty" tf:"domain_list,omitempty"`

	// Private key password.
	// Private key password.
	KeyPassword *string `json:"keyPassword,omitempty" tf:"key_password,omitempty"`

	// Company address.
	// Company address.
	OrganizationAddress *string `json:"organizationAddress,omitempty" tf:"organization_address,omitempty"`

	// Company city.
	// Company city.
	OrganizationCity *string `json:"organizationCity,omitempty" tf:"organization_city,omitempty"`

	// Country name, such as China: CN.
	// Country name, such as China: CN.
	OrganizationCountry *string `json:"organizationCountry,omitempty" tf:"organization_country,omitempty"`

	// Department name.
	// Department name.
	OrganizationDivision *string `json:"organizationDivision,omitempty" tf:"organization_division,omitempty"`

	// Company name.
	// Company name.
	OrganizationName *string `json:"organizationName,omitempty" tf:"organization_name,omitempty"`

	// The province where the company is located.
	// The province where the company is located.
	OrganizationRegion *string `json:"organizationRegion,omitempty" tf:"organization_region,omitempty"`

	// Company landline area code.
	// Company landline area code.
	PhoneAreaCode *string `json:"phoneAreaCode,omitempty" tf:"phone_area_code,omitempty"`

	// Company landline number.
	// Company landline number.
	PhoneNumber *string `json:"phoneNumber,omitempty" tf:"phone_number,omitempty"`

	// Company postal code.
	// Company postal code.
	PostalCode *string `json:"postalCode,omitempty" tf:"postal_code,omitempty"`

	// Certificate verification method. Valid values: DNS_AUTO, DNS, FILE. DNS_AUTO means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, DNS means manual DNS verification, FILE means file verification.
	// Certificate verification method. Valid values: `DNS_AUTO`, `DNS`, `FILE`. `DNS_AUTO` means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, `DNS` means manual DNS verification, `FILE` means file verification.
	VerifyType *string `json:"verifyType,omitempty" tf:"verify_type,omitempty"`
}

type InformationParameters struct {

	// The administrator's email address.
	// The administrator's email address.
	// +kubebuilder:validation:Optional
	AdminEmail *string `json:"adminEmail" tf:"admin_email,omitempty"`

	// The first name of the administrator.
	// The first name of the administrator.
	// +kubebuilder:validation:Optional
	AdminFirstName *string `json:"adminFirstName" tf:"admin_first_name,omitempty"`

	// The last name of the administrator.
	// The last name of the administrator.
	// +kubebuilder:validation:Optional
	AdminLastName *string `json:"adminLastName" tf:"admin_last_name,omitempty"`

	// Manager mobile phone number.
	// Manager mobile phone number.
	// +kubebuilder:validation:Optional
	AdminPhoneNum *string `json:"adminPhoneNum" tf:"admin_phone_num,omitempty"`

	// Manager position.
	// Manager position.
	// +kubebuilder:validation:Optional
	AdminPosition *string `json:"adminPosition" tf:"admin_position,omitempty"`

	// Domain name for binding certificate.
	// Domain name for binding certificate.
	// +kubebuilder:validation:Optional
	CertificateDomain *string `json:"certificateDomain" tf:"certificate_domain,omitempty"`

	// Contact email address.
	// Contact email address.
	// +kubebuilder:validation:Optional
	ContactEmail *string `json:"contactEmail" tf:"contact_email,omitempty"`

	// Contact first name.
	// Contact first name.
	// +kubebuilder:validation:Optional
	ContactFirstName *string `json:"contactFirstName" tf:"contact_first_name,omitempty"`

	// Contact last name.
	// Contact last name.
	// +kubebuilder:validation:Optional
	ContactLastName *string `json:"contactLastName" tf:"contact_last_name,omitempty"`

	// Contact phone number.
	// Contact phone number.
	// +kubebuilder:validation:Optional
	ContactNumber *string `json:"contactNumber" tf:"contact_number,omitempty"`

	// Contact position.
	// Contact position.
	// +kubebuilder:validation:Optional
	ContactPosition *string `json:"contactPosition" tf:"contact_position,omitempty"`

	// CSR content uploaded.
	// CSR content uploaded.
	// +kubebuilder:validation:Optional
	CsrContent *string `json:"csrContent,omitempty" tf:"csr_content,omitempty"`

	// CSR generation method. Valid values: online, parse. online means online generation, parse means manual upload.
	// CSR generation method. Valid values: `online`, `parse`. `online` means online generation, `parse` means manual upload.
	// +kubebuilder:validation:Optional
	CsrType *string `json:"csrType,omitempty" tf:"csr_type,omitempty"`

	// Array of uploaded domain names, multi-domain certificates can be uploaded.
	// Array of uploaded domain names, multi-domain certificates can be uploaded.
	// +kubebuilder:validation:Optional
	DomainList []*string `json:"domainList,omitempty" tf:"domain_list,omitempty"`

	// Private key password.
	// Private key password.
	// +kubebuilder:validation:Optional
	KeyPassword *string `json:"keyPassword,omitempty" tf:"key_password,omitempty"`

	// Company address.
	// Company address.
	// +kubebuilder:validation:Optional
	OrganizationAddress *string `json:"organizationAddress" tf:"organization_address,omitempty"`

	// Company city.
	// Company city.
	// +kubebuilder:validation:Optional
	OrganizationCity *string `json:"organizationCity" tf:"organization_city,omitempty"`

	// Country name, such as China: CN.
	// Country name, such as China: CN.
	// +kubebuilder:validation:Optional
	OrganizationCountry *string `json:"organizationCountry" tf:"organization_country,omitempty"`

	// Department name.
	// Department name.
	// +kubebuilder:validation:Optional
	OrganizationDivision *string `json:"organizationDivision" tf:"organization_division,omitempty"`

	// Company name.
	// Company name.
	// +kubebuilder:validation:Optional
	OrganizationName *string `json:"organizationName" tf:"organization_name,omitempty"`

	// The province where the company is located.
	// The province where the company is located.
	// +kubebuilder:validation:Optional
	OrganizationRegion *string `json:"organizationRegion" tf:"organization_region,omitempty"`

	// Company landline area code.
	// Company landline area code.
	// +kubebuilder:validation:Optional
	PhoneAreaCode *string `json:"phoneAreaCode" tf:"phone_area_code,omitempty"`

	// Company landline number.
	// Company landline number.
	// +kubebuilder:validation:Optional
	PhoneNumber *string `json:"phoneNumber" tf:"phone_number,omitempty"`

	// Company postal code.
	// Company postal code.
	// +kubebuilder:validation:Optional
	PostalCode *string `json:"postalCode" tf:"postal_code,omitempty"`

	// Certificate verification method. Valid values: DNS_AUTO, DNS, FILE. DNS_AUTO means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, DNS means manual DNS verification, FILE means file verification.
	// Certificate verification method. Valid values: `DNS_AUTO`, `DNS`, `FILE`. `DNS_AUTO` means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, `DNS` means manual DNS verification, `FILE` means file verification.
	// +kubebuilder:validation:Optional
	VerifyType *string `json:"verifyType" tf:"verify_type,omitempty"`
}

type PayCertificateDvAuthsInitParameters struct {
}

type PayCertificateDvAuthsObservation struct {

	// DV authentication key.
	DvAuthKey *string `json:"dvAuthKey,omitempty" tf:"dv_auth_key,omitempty"`

	// DV authentication value.
	DvAuthValue *string `json:"dvAuthValue,omitempty" tf:"dv_auth_value,omitempty"`

	// Certificate verification method. Valid values: DNS_AUTO, DNS, FILE. DNS_AUTO means automatic DNS verification, this verification type is only supported for domain names resolved by Tencent Cloud and the resolution status is normal, DNS means manual DNS verification, FILE means file verification.
	// DV authentication type.
	DvAuthVerifyType *string `json:"dvAuthVerifyType,omitempty" tf:"dv_auth_verify_type,omitempty"`
}

type PayCertificateDvAuthsParameters struct {
}

type PayCertificateInitParameters struct {

	// Remark name.
	// Remark name.
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
	// The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
	ConfirmLetter *string `json:"confirmLetter,omitempty" tf:"confirm_letter,omitempty"`

	// Number of domain names included in the certificate.
	// Number of domain names included in the certificate.
	DomainNum *float64 `json:"domainNum,omitempty" tf:"domain_num,omitempty"`

	// DV certification information.
	// DV certification information.
	DvAuths []PayCertificateDvAuthsInitParameters `json:"dvAuths,omitempty" tf:"dv_auths,omitempty"`

	// Certificate information.
	// Certificate information.
	Information []InformationInitParameters `json:"information,omitempty" tf:"information,omitempty"`

	// Certificate commodity ID. Valid value ranges: (3~42). 3 means SecureSite enhanced Enterprise Edition (EV Pro), 4 means SecureSite enhanced (EV), 5 means SecureSite Enterprise Professional Edition (OV Pro), 6 means SecureSite Enterprise (OV), 7 means SecureSite Enterprise Type (OV) wildcard, 8 means Geotrust enhanced (EV), 9 means Geotrust enterprise (OV), 10 means Geotrust enterprise (OV) wildcard, 11 means TrustAsia domain type multi-domain SSL certificate, 12 means TrustAsia domain type ( DV) wildcard, 13 means TrustAsia enterprise wildcard (OV) SSL certificate (D3), 14 means TrustAsia enterprise (OV) SSL certificate (D3), 15 means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), 16 means TrustAsia Enhanced (EV) SSL Certificate (D3), 17 means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), 18 means GlobalSign Enterprise (OV) SSL Certificate, 19 means GlobalSign Enterprise Wildcard (OV) SSL Certificate, 20 means GlobalSign Enhanced (EV) SSL Certificate, 21 means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), 22 means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, 23 means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, 24 means GlobalSign enhanced multi-domain (EV) SSL certificate, 25 means Wotrus domain type certificate, 26 means Wotrus domain type multi-domain certificate, 27 means Wotrus domain type wildcard certificate, 28 means Wotrus enterprise type certificate, 29 means Wotrus enterprise multi-domain certificate, 30 means Wotrus enterprise wildcard certificate, 31 means Wotrus enhanced certificate, 32 means Wotrus enhanced multi-domain certificate, 33 means WoTrus National Secret Domain name Certificate, 34 means WoTrus National Secret Domain name Certificate (multiple domain names), 35 WoTrus National Secret Domain name Certificate (wildcard), 37 means WoTrus State Secret Enterprise Certificate, 38 means WoTrus State Secret Enterprise Certificate (multiple domain names), 39 means WoTrus State Secret Enterprise Certificate (wildcard), 40 means WoTrus National secret enhanced certificate, 41 means WoTrus National Secret enhanced Certificate (multiple domain names), 42 means TrustAsia- Domain name Certificate (wildcard multiple domain names), 43 means DNSPod Enterprise (OV) SSL Certificate, 44 means DNSPod- Enterprise (OV) wildcard SSL certificate, 45 means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, 46 means DNSPod enhanced (EV) SSL certificate, 47 means DNSPod enhanced (EV) multi-domain name SSL certificate, 48 means DNSPod Domain name Type (DV) SSL Certificate, 49 means DNSPod Domain name Type (DV) wildcard SSL certificate, 50 means DNSPod domain name type (DV) multi-domain name SSL certificate, 51 means DNSPod (State Secret) Enterprise (OV) SSL certificate, 52 DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, 53 means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, 54 means DNSPod (National Secret) Domain Name (DV) SSL certificate, 55 means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, 56 means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
	// Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
	ProductID *float64 `json:"productId,omitempty" tf:"product_id,omitempty"`

	// The ID of project.
	// The ID of project.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Certificate period, currently only supports 1 year certificate purchase.
	// Certificate period, currently only supports 1 year certificate purchase.
	TimeSpan *float64 `json:"timeSpan,omitempty" tf:"time_span,omitempty"`
}

type PayCertificateObservation struct {

	// Remark name.
	// Remark name.
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// Returned certificate ID.
	// Returned certificate ID.
	CertificateID *string `json:"certificateId,omitempty" tf:"certificate_id,omitempty"`

	// The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
	// The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
	ConfirmLetter *string `json:"confirmLetter,omitempty" tf:"confirm_letter,omitempty"`

	// Number of domain names included in the certificate.
	// Number of domain names included in the certificate.
	DomainNum *float64 `json:"domainNum,omitempty" tf:"domain_num,omitempty"`

	// DV certification information.
	// DV certification information.
	DvAuths []PayCertificateDvAuthsObservation `json:"dvAuths,omitempty" tf:"dv_auths,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Certificate information.
	// Certificate information.
	Information []InformationObservation `json:"information,omitempty" tf:"information,omitempty"`

	// Order ID returned.
	// Order ID returned.
	OrderID *string `json:"orderId,omitempty" tf:"order_id,omitempty"`

	// Certificate commodity ID. Valid value ranges: (3~42). 3 means SecureSite enhanced Enterprise Edition (EV Pro), 4 means SecureSite enhanced (EV), 5 means SecureSite Enterprise Professional Edition (OV Pro), 6 means SecureSite Enterprise (OV), 7 means SecureSite Enterprise Type (OV) wildcard, 8 means Geotrust enhanced (EV), 9 means Geotrust enterprise (OV), 10 means Geotrust enterprise (OV) wildcard, 11 means TrustAsia domain type multi-domain SSL certificate, 12 means TrustAsia domain type ( DV) wildcard, 13 means TrustAsia enterprise wildcard (OV) SSL certificate (D3), 14 means TrustAsia enterprise (OV) SSL certificate (D3), 15 means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), 16 means TrustAsia Enhanced (EV) SSL Certificate (D3), 17 means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), 18 means GlobalSign Enterprise (OV) SSL Certificate, 19 means GlobalSign Enterprise Wildcard (OV) SSL Certificate, 20 means GlobalSign Enhanced (EV) SSL Certificate, 21 means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), 22 means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, 23 means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, 24 means GlobalSign enhanced multi-domain (EV) SSL certificate, 25 means Wotrus domain type certificate, 26 means Wotrus domain type multi-domain certificate, 27 means Wotrus domain type wildcard certificate, 28 means Wotrus enterprise type certificate, 29 means Wotrus enterprise multi-domain certificate, 30 means Wotrus enterprise wildcard certificate, 31 means Wotrus enhanced certificate, 32 means Wotrus enhanced multi-domain certificate, 33 means WoTrus National Secret Domain name Certificate, 34 means WoTrus National Secret Domain name Certificate (multiple domain names), 35 WoTrus National Secret Domain name Certificate (wildcard), 37 means WoTrus State Secret Enterprise Certificate, 38 means WoTrus State Secret Enterprise Certificate (multiple domain names), 39 means WoTrus State Secret Enterprise Certificate (wildcard), 40 means WoTrus National secret enhanced certificate, 41 means WoTrus National Secret enhanced Certificate (multiple domain names), 42 means TrustAsia- Domain name Certificate (wildcard multiple domain names), 43 means DNSPod Enterprise (OV) SSL Certificate, 44 means DNSPod- Enterprise (OV) wildcard SSL certificate, 45 means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, 46 means DNSPod enhanced (EV) SSL certificate, 47 means DNSPod enhanced (EV) multi-domain name SSL certificate, 48 means DNSPod Domain name Type (DV) SSL Certificate, 49 means DNSPod Domain name Type (DV) wildcard SSL certificate, 50 means DNSPod domain name type (DV) multi-domain name SSL certificate, 51 means DNSPod (State Secret) Enterprise (OV) SSL certificate, 52 DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, 53 means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, 54 means DNSPod (National Secret) Domain Name (DV) SSL certificate, 55 means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, 56 means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
	// Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
	ProductID *float64 `json:"productId,omitempty" tf:"product_id,omitempty"`

	// The ID of project.
	// The ID of project.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// SSL certificate status.
	// SSL certificate status.
	Status *float64 `json:"status,omitempty" tf:"status,omitempty"`

	// Certificate period, currently only supports 1 year certificate purchase.
	// Certificate period, currently only supports 1 year certificate purchase.
	TimeSpan *float64 `json:"timeSpan,omitempty" tf:"time_span,omitempty"`
}

type PayCertificateParameters struct {

	// Remark name.
	// Remark name.
	// +kubebuilder:validation:Optional
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
	// The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
	// +kubebuilder:validation:Optional
	ConfirmLetter *string `json:"confirmLetter,omitempty" tf:"confirm_letter,omitempty"`

	// Number of domain names included in the certificate.
	// Number of domain names included in the certificate.
	// +kubebuilder:validation:Optional
	DomainNum *float64 `json:"domainNum,omitempty" tf:"domain_num,omitempty"`

	// DV certification information.
	// DV certification information.
	// +kubebuilder:validation:Optional
	DvAuths []PayCertificateDvAuthsParameters `json:"dvAuths,omitempty" tf:"dv_auths,omitempty"`

	// Certificate information.
	// Certificate information.
	// +kubebuilder:validation:Optional
	Information []InformationParameters `json:"information,omitempty" tf:"information,omitempty"`

	// Certificate commodity ID. Valid value ranges: (3~42). 3 means SecureSite enhanced Enterprise Edition (EV Pro), 4 means SecureSite enhanced (EV), 5 means SecureSite Enterprise Professional Edition (OV Pro), 6 means SecureSite Enterprise (OV), 7 means SecureSite Enterprise Type (OV) wildcard, 8 means Geotrust enhanced (EV), 9 means Geotrust enterprise (OV), 10 means Geotrust enterprise (OV) wildcard, 11 means TrustAsia domain type multi-domain SSL certificate, 12 means TrustAsia domain type ( DV) wildcard, 13 means TrustAsia enterprise wildcard (OV) SSL certificate (D3), 14 means TrustAsia enterprise (OV) SSL certificate (D3), 15 means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), 16 means TrustAsia Enhanced (EV) SSL Certificate (D3), 17 means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), 18 means GlobalSign Enterprise (OV) SSL Certificate, 19 means GlobalSign Enterprise Wildcard (OV) SSL Certificate, 20 means GlobalSign Enhanced (EV) SSL Certificate, 21 means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), 22 means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, 23 means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, 24 means GlobalSign enhanced multi-domain (EV) SSL certificate, 25 means Wotrus domain type certificate, 26 means Wotrus domain type multi-domain certificate, 27 means Wotrus domain type wildcard certificate, 28 means Wotrus enterprise type certificate, 29 means Wotrus enterprise multi-domain certificate, 30 means Wotrus enterprise wildcard certificate, 31 means Wotrus enhanced certificate, 32 means Wotrus enhanced multi-domain certificate, 33 means WoTrus National Secret Domain name Certificate, 34 means WoTrus National Secret Domain name Certificate (multiple domain names), 35 WoTrus National Secret Domain name Certificate (wildcard), 37 means WoTrus State Secret Enterprise Certificate, 38 means WoTrus State Secret Enterprise Certificate (multiple domain names), 39 means WoTrus State Secret Enterprise Certificate (wildcard), 40 means WoTrus National secret enhanced certificate, 41 means WoTrus National Secret enhanced Certificate (multiple domain names), 42 means TrustAsia- Domain name Certificate (wildcard multiple domain names), 43 means DNSPod Enterprise (OV) SSL Certificate, 44 means DNSPod- Enterprise (OV) wildcard SSL certificate, 45 means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, 46 means DNSPod enhanced (EV) SSL certificate, 47 means DNSPod enhanced (EV) multi-domain name SSL certificate, 48 means DNSPod Domain name Type (DV) SSL Certificate, 49 means DNSPod Domain name Type (DV) wildcard SSL certificate, 50 means DNSPod domain name type (DV) multi-domain name SSL certificate, 51 means DNSPod (State Secret) Enterprise (OV) SSL certificate, 52 DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, 53 means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, 54 means DNSPod (National Secret) Domain Name (DV) SSL certificate, 55 means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, 56 means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
	// Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
	// +kubebuilder:validation:Optional
	ProductID *float64 `json:"productId,omitempty" tf:"product_id,omitempty"`

	// The ID of project.
	// The ID of project.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Certificate period, currently only supports 1 year certificate purchase.
	// Certificate period, currently only supports 1 year certificate purchase.
	// +kubebuilder:validation:Optional
	TimeSpan *float64 `json:"timeSpan,omitempty" tf:"time_span,omitempty"`
}

// PayCertificateSpec defines the desired state of PayCertificate
type PayCertificateSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PayCertificateParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PayCertificateInitParameters `json:"initProvider,omitempty"`
}

// PayCertificateStatus defines the observed state of PayCertificate.
type PayCertificateStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PayCertificateObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PayCertificate is the Schema for the PayCertificates API. Provide a resource to create a payment SSL.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type PayCertificate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.domainNum) || (has(self.initProvider) && has(self.initProvider.domainNum))",message="spec.forProvider.domainNum is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.information) || (has(self.initProvider) && has(self.initProvider.information))",message="spec.forProvider.information is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.productId) || (has(self.initProvider) && has(self.initProvider.productId))",message="spec.forProvider.productId is a required parameter"
	Spec   PayCertificateSpec   `json:"spec"`
	Status PayCertificateStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PayCertificateList contains a list of PayCertificates
type PayCertificateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PayCertificate `json:"items"`
}

// Repository type metadata.
var (
	PayCertificate_Kind             = "PayCertificate"
	PayCertificate_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PayCertificate_Kind}.String()
	PayCertificate_KindAPIVersion   = PayCertificate_Kind + "." + CRDGroupVersion.String()
	PayCertificate_GroupVersionKind = CRDGroupVersion.WithKind(PayCertificate_Kind)
)

func init() {
	SchemeBuilder.Register(&PayCertificate{}, &PayCertificateList{})
}
