// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CacheCacheInitParameters struct {

	// Cache expiration time settings, Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	// Cache expiration time settings, Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	CacheTime *float64 `json:"cacheTime,omitempty" tf:"cache_time,omitempty"`

	// Specifies whether to enable force cache. Valid values: on: Enable; off: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to enable force cache. Valid values: `on`: Enable; `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	IgnoreCacheControl *string `json:"ignoreCacheControl,omitempty" tf:"ignore_cache_control,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Cache configuration switch. Valid values: `on`: Enable; `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type CacheCacheObservation struct {

	// Cache expiration time settings, Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	// Cache expiration time settings, Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	CacheTime *float64 `json:"cacheTime,omitempty" tf:"cache_time,omitempty"`

	// Specifies whether to enable force cache. Valid values: on: Enable; off: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to enable force cache. Valid values: `on`: Enable; `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	IgnoreCacheControl *string `json:"ignoreCacheControl,omitempty" tf:"ignore_cache_control,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Cache configuration switch. Valid values: `on`: Enable; `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type CacheCacheParameters struct {

	// Cache expiration time settings, Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	// Cache expiration time settings, Unit: second. The maximum value is 365 days. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	CacheTime *float64 `json:"cacheTime,omitempty" tf:"cache_time,omitempty"`

	// Specifies whether to enable force cache. Valid values: on: Enable; off: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to enable force cache. Valid values: `on`: Enable; `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	IgnoreCacheControl *string `json:"ignoreCacheControl,omitempty" tf:"ignore_cache_control,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Cache configuration switch. Valid values: `on`: Enable; `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type CacheInitParameters struct {

	// Cache expiration time configuration.
	// Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Cache []CacheCacheInitParameters `json:"cache,omitempty" tf:"cache,omitempty"`

	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	FollowOrigin []FollowOriginInitParameters `json:"followOrigin,omitempty" tf:"follow_origin,omitempty"`

	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	NoCache []NoCacheInitParameters `json:"noCache,omitempty" tf:"no_cache,omitempty"`
}

type CacheKeyInitParameters struct {

	// Specifies whether to enable full-path cache.- on: Enable full-path cache (i.e., disable Ignore Query String).- off: Disable full-path cache (i.e., enable Ignore Query String). Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to enable full-path cache.- `on`: Enable full-path cache (i.e., disable Ignore Query String).- `off`: Disable full-path cache (i.e., enable Ignore Query String). Note: This field may return null, indicating that no valid value can be obtained.
	FullURLCache *string `json:"fullUrlCache,omitempty" tf:"full_url_cache,omitempty"`

	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	IgnoreCase *string `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	QueryString []QueryStringInitParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`
}

type CacheKeyObservation struct {

	// Specifies whether to enable full-path cache.- on: Enable full-path cache (i.e., disable Ignore Query String).- off: Disable full-path cache (i.e., enable Ignore Query String). Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to enable full-path cache.- `on`: Enable full-path cache (i.e., disable Ignore Query String).- `off`: Disable full-path cache (i.e., enable Ignore Query String). Note: This field may return null, indicating that no valid value can be obtained.
	FullURLCache *string `json:"fullUrlCache,omitempty" tf:"full_url_cache,omitempty"`

	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	IgnoreCase *string `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	QueryString []QueryStringObservation `json:"queryString,omitempty" tf:"query_string,omitempty"`
}

type CacheKeyParameters struct {

	// Specifies whether to enable full-path cache.- on: Enable full-path cache (i.e., disable Ignore Query String).- off: Disable full-path cache (i.e., enable Ignore Query String). Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to enable full-path cache.- `on`: Enable full-path cache (i.e., disable Ignore Query String).- `off`: Disable full-path cache (i.e., enable Ignore Query String). Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	FullURLCache *string `json:"fullUrlCache,omitempty" tf:"full_url_cache,omitempty"`

	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether the cache key is case-sensitive. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	IgnoreCase *string `json:"ignoreCase,omitempty" tf:"ignore_case,omitempty"`

	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	// Request parameter contained in CacheKey. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	QueryString []QueryStringParameters `json:"queryString,omitempty" tf:"query_string,omitempty"`
}

type CacheObservation struct {

	// Cache expiration time configuration.
	// Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Cache []CacheCacheObservation `json:"cache,omitempty" tf:"cache,omitempty"`

	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	FollowOrigin []FollowOriginObservation `json:"followOrigin,omitempty" tf:"follow_origin,omitempty"`

	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	NoCache []NoCacheObservation `json:"noCache,omitempty" tf:"no_cache,omitempty"`
}

type CacheParameters struct {

	// Cache expiration time configuration.
	// Cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Cache []CacheCacheParameters `json:"cache,omitempty" tf:"cache,omitempty"`

	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	FollowOrigin []FollowOriginParameters `json:"followOrigin,omitempty" tf:"follow_origin,omitempty"`

	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// No-cache configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	NoCache []NoCacheParameters `json:"noCache,omitempty" tf:"no_cache,omitempty"`
}

type CachePrefreshInitParameters struct {

	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable cache prefresh.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type CachePrefreshObservation struct {

	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable cache prefresh.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type CachePrefreshParameters struct {

	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	// Percentage of cache time before try to prefresh. Valid value range: 1-99.
	// +kubebuilder:validation:Optional
	Percent *float64 `json:"percent,omitempty" tf:"percent,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable cache prefresh.- `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type ClientIPHeaderInitParameters struct {

	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable client IP header.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type ClientIPHeaderObservation struct {

	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable client IP header.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type ClientIPHeaderParameters struct {

	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	// Name of the origin-pull client IP request header. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	HeaderName *string `json:"headerName,omitempty" tf:"header_name,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable client IP header.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type CompressionInitParameters struct {

	// Compression algorithms to select. Valid values: brotli, gzip.
	// Compression algorithms to select. Valid values: `brotli`, `gzip`.
	Algorithms []*string `json:"algorithms,omitempty" tf:"algorithms,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable Smart compression.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type CompressionObservation struct {

	// Compression algorithms to select. Valid values: brotli, gzip.
	// Compression algorithms to select. Valid values: `brotli`, `gzip`.
	Algorithms []*string `json:"algorithms,omitempty" tf:"algorithms,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable Smart compression.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type CompressionParameters struct {

	// Compression algorithms to select. Valid values: brotli, gzip.
	// Compression algorithms to select. Valid values: `brotli`, `gzip`.
	// +kubebuilder:validation:Optional
	Algorithms []*string `json:"algorithms,omitempty" tf:"algorithms,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable Smart compression.- `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type FollowOriginInitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to follow the origin server configuration.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type FollowOriginObservation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to follow the origin server configuration.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type FollowOriginParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to follow the origin server configuration.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type ForceRedirectInitParameters struct {

	// Redirection status code.- 301- 302 Note: This field may return null, indicating that no valid value can be obtained.
	// Redirection status code.- 301- 302 Note: This field may return null, indicating that no valid value can be obtained.
	RedirectStatusCode *float64 `json:"redirectStatusCode,omitempty" tf:"redirect_status_code,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable force redirect.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type ForceRedirectObservation struct {

	// Redirection status code.- 301- 302 Note: This field may return null, indicating that no valid value can be obtained.
	// Redirection status code.- 301- 302 Note: This field may return null, indicating that no valid value can be obtained.
	RedirectStatusCode *float64 `json:"redirectStatusCode,omitempty" tf:"redirect_status_code,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable force redirect.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type ForceRedirectParameters struct {

	// Redirection status code.- 301- 302 Note: This field may return null, indicating that no valid value can be obtained.
	// Redirection status code.- 301- 302 Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	RedirectStatusCode *float64 `json:"redirectStatusCode,omitempty" tf:"redirect_status_code,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable force redirect.- `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type HTTPSInitParameters struct {

	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Hsts []HstsInitParameters `json:"hsts,omitempty" tf:"hsts,omitempty"`

	// HTTP2 configuration switch.- on: Enable.- off: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// HTTP2 configuration switch.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Http2 *string `json:"http2,omitempty" tf:"http2,omitempty"`

	// OCSP configuration switch.- on: Enable.- off: Disable.It is disabled by default. Note: This field may return null, indicating that no valid value can be obtained.
	// OCSP configuration switch.- `on`: Enable.- `off`: Disable.It is disabled by default. Note: This field may return null, indicating that no valid value can be obtained.
	OcspStapling *string `json:"ocspStapling,omitempty" tf:"ocsp_stapling,omitempty"`

	// TLS version settings. Valid values: TLSv1, TLSV1.1, TLSV1.2, and TLSv1.3.Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	// TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	TLSVersion []*string `json:"tlsVersion,omitempty" tf:"tls_version,omitempty"`
}

type HTTPSObservation struct {

	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	Hsts []HstsObservation `json:"hsts,omitempty" tf:"hsts,omitempty"`

	// HTTP2 configuration switch.- on: Enable.- off: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// HTTP2 configuration switch.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Http2 *string `json:"http2,omitempty" tf:"http2,omitempty"`

	// OCSP configuration switch.- on: Enable.- off: Disable.It is disabled by default. Note: This field may return null, indicating that no valid value can be obtained.
	// OCSP configuration switch.- `on`: Enable.- `off`: Disable.It is disabled by default. Note: This field may return null, indicating that no valid value can be obtained.
	OcspStapling *string `json:"ocspStapling,omitempty" tf:"ocsp_stapling,omitempty"`

	// TLS version settings. Valid values: TLSv1, TLSV1.1, TLSV1.2, and TLSv1.3.Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	// TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	TLSVersion []*string `json:"tlsVersion,omitempty" tf:"tls_version,omitempty"`
}

type HTTPSParameters struct {

	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// HSTS Configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Hsts []HstsParameters `json:"hsts,omitempty" tf:"hsts,omitempty"`

	// HTTP2 configuration switch.- on: Enable.- off: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// HTTP2 configuration switch.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Http2 *string `json:"http2,omitempty" tf:"http2,omitempty"`

	// OCSP configuration switch.- on: Enable.- off: Disable.It is disabled by default. Note: This field may return null, indicating that no valid value can be obtained.
	// OCSP configuration switch.- `on`: Enable.- `off`: Disable.It is disabled by default. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	OcspStapling *string `json:"ocspStapling,omitempty" tf:"ocsp_stapling,omitempty"`

	// TLS version settings. Valid values: TLSv1, TLSV1.1, TLSV1.2, and TLSv1.3.Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	// TLS version settings. Valid values: `TLSv1`, `TLSV1.1`, `TLSV1.2`, and `TLSv1.3`.Only consecutive versions can be enabled at the same time. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	TLSVersion []*string `json:"tlsVersion,omitempty" tf:"tls_version,omitempty"`
}

type HstsInitParameters struct {

	// Specifies whether to include subdomain names. Valid values: on and off. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	IncludeSubDomains *string `json:"includeSubDomains,omitempty" tf:"include_sub_domains,omitempty"`

	// Browser cache configuration.
	// MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// Specifies whether to preload. Valid values: on and off. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	Preload *string `json:"preload,omitempty" tf:"preload,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// - `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type HstsObservation struct {

	// Specifies whether to include subdomain names. Valid values: on and off. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	IncludeSubDomains *string `json:"includeSubDomains,omitempty" tf:"include_sub_domains,omitempty"`

	// Browser cache configuration.
	// MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// Specifies whether to preload. Valid values: on and off. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	Preload *string `json:"preload,omitempty" tf:"preload,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// - `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type HstsParameters struct {

	// Specifies whether to include subdomain names. Valid values: on and off. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to include subdomain names. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	IncludeSubDomains *string `json:"includeSubDomains,omitempty" tf:"include_sub_domains,omitempty"`

	// Browser cache configuration.
	// MaxAge value in seconds, should be no more than 1 day. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// Specifies whether to preload. Valid values: on and off. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to preload. Valid values: `on` and `off`. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Preload *string `json:"preload,omitempty" tf:"preload,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// - `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type IPv6InitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// - `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type IPv6Observation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// - `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type IPv6Parameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// - `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type MaxAgeInitParameters struct {

	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to follow the max cache age of the origin server.- `on`: Enable.- `off`: Disable.If is on, MaxAgeTime is ignored. Note: This field may return null, indicating that no valid value can be obtained.
	FollowOrigin *string `json:"followOrigin,omitempty" tf:"follow_origin,omitempty"`

	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAgeTime *float64 `json:"maxAgeTime,omitempty" tf:"max_age_time,omitempty"`
}

type MaxAgeObservation struct {

	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to follow the max cache age of the origin server.- `on`: Enable.- `off`: Disable.If is on, MaxAgeTime is ignored. Note: This field may return null, indicating that no valid value can be obtained.
	FollowOrigin *string `json:"followOrigin,omitempty" tf:"follow_origin,omitempty"`

	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	MaxAgeTime *float64 `json:"maxAgeTime,omitempty" tf:"max_age_time,omitempty"`
}

type MaxAgeParameters struct {

	// Follows the origin server configuration. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies whether to follow the max cache age of the origin server.- `on`: Enable.- `off`: Disable.If is on, MaxAgeTime is ignored. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	FollowOrigin *string `json:"followOrigin,omitempty" tf:"follow_origin,omitempty"`

	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	// Specifies the max age of the cache (in seconds). The maximum value is 365 days. Note: the value 0 means not to cache. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	MaxAgeTime *float64 `json:"maxAgeTime,omitempty" tf:"max_age_time,omitempty"`
}

type NoCacheInitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to cache the configuration. Valid values: `on`: Do not cache; `off`: Cache. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type NoCacheObservation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to cache the configuration. Valid values: `on`: Do not cache; `off`: Cache. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type NoCacheParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to cache the configuration. Valid values: `on`: Do not cache; `off`: Cache. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type OfflineCacheInitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable offline cache.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type OfflineCacheObservation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable offline cache.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type OfflineCacheParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable offline cache.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type OriginInitParameters struct {

	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	BackupOrigins []*string `json:"backupOrigins,omitempty" tf:"backup_origins,omitempty"`

	// Whether access private cos bucket is allowed when OriginType is cos. Note: This field may return null, indicating that no valid value can be obtained.
	// Whether access private cos bucket is allowed when `OriginType` is cos. Note: This field may return null, indicating that no valid value can be obtained.
	CosPrivateAccess *string `json:"cosPrivateAccess,omitempty" tf:"cos_private_access,omitempty"`

	// Origin-pull protocol.- http: Switch HTTPS requests to HTTP.- follow: Follow the protocol of the request.- https: Switch HTTP requests to HTTPS. This only supports port 443 on the origin server. Note: This field may return null, indicating that no valid value can be obtained.
	// Origin-pull protocol.- `http`: Switch HTTPS requests to HTTP.- `follow`: Follow the protocol of the request.- `https`: Switch HTTP requests to HTTPS. This only supports port 443 on the origin server. Note: This field may return null, indicating that no valid value can be obtained.
	OriginPullProtocol *string `json:"originPullProtocol,omitempty" tf:"origin_pull_protocol,omitempty"`

	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	Origins []*string `json:"origins,omitempty" tf:"origins,omitempty"`
}

type OriginObservation struct {

	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	BackupOrigins []*string `json:"backupOrigins,omitempty" tf:"backup_origins,omitempty"`

	// Whether access private cos bucket is allowed when OriginType is cos. Note: This field may return null, indicating that no valid value can be obtained.
	// Whether access private cos bucket is allowed when `OriginType` is cos. Note: This field may return null, indicating that no valid value can be obtained.
	CosPrivateAccess *string `json:"cosPrivateAccess,omitempty" tf:"cos_private_access,omitempty"`

	// Origin-pull protocol.- http: Switch HTTPS requests to HTTP.- follow: Follow the protocol of the request.- https: Switch HTTP requests to HTTPS. This only supports port 443 on the origin server. Note: This field may return null, indicating that no valid value can be obtained.
	// Origin-pull protocol.- `http`: Switch HTTPS requests to HTTP.- `follow`: Follow the protocol of the request.- `https`: Switch HTTP requests to HTTPS. This only supports port 443 on the origin server. Note: This field may return null, indicating that no valid value can be obtained.
	OriginPullProtocol *string `json:"originPullProtocol,omitempty" tf:"origin_pull_protocol,omitempty"`

	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	Origins []*string `json:"origins,omitempty" tf:"origins,omitempty"`
}

type OriginParameters struct {

	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// Backup origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	BackupOrigins []*string `json:"backupOrigins,omitempty" tf:"backup_origins,omitempty"`

	// Whether access private cos bucket is allowed when OriginType is cos. Note: This field may return null, indicating that no valid value can be obtained.
	// Whether access private cos bucket is allowed when `OriginType` is cos. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	CosPrivateAccess *string `json:"cosPrivateAccess,omitempty" tf:"cos_private_access,omitempty"`

	// Origin-pull protocol.- http: Switch HTTPS requests to HTTP.- follow: Follow the protocol of the request.- https: Switch HTTP requests to HTTPS. This only supports port 443 on the origin server. Note: This field may return null, indicating that no valid value can be obtained.
	// Origin-pull protocol.- `http`: Switch HTTPS requests to HTTP.- `follow`: Follow the protocol of the request.- `https`: Switch HTTP requests to HTTPS. This only supports port 443 on the origin server. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	OriginPullProtocol *string `json:"originPullProtocol,omitempty" tf:"origin_pull_protocol,omitempty"`

	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// Origin sites list. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Origins []*string `json:"origins,omitempty" tf:"origins,omitempty"`
}

type PostMaxSizeInitParameters struct {

	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	MaxSize *float64 `json:"maxSize,omitempty" tf:"max_size,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable custom setting of the maximum file size.- `on`: Enable. You can set a custom max size.- `off`: Disable. In this case, the max size defaults to 32 MB.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type PostMaxSizeObservation struct {

	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	MaxSize *float64 `json:"maxSize,omitempty" tf:"max_size,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable custom setting of the maximum file size.- `on`: Enable. You can set a custom max size.- `off`: Disable. In this case, the max size defaults to 32 MB.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type PostMaxSizeParameters struct {

	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	// Maximum size. Value range: 1-500 MB. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	MaxSize *float64 `json:"maxSize,omitempty" tf:"max_size,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Specifies whether to enable custom setting of the maximum file size.- `on`: Enable. You can set a custom max size.- `off`: Disable. In this case, the max size defaults to 32 MB.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type QueryStringInitParameters struct {

	// - includeCustom: Include the specified query strings.- excludeCustom: Exclude the specified query strings. Note: This field may return null, indicating that no valid value can be obtained.
	// - `includeCustom`: Include the specified query strings.- `excludeCustom`: Exclude the specified query strings. Note: This field may return null, indicating that no valid value can be obtained.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to use QueryString as part of CacheKey.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`

	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type QueryStringObservation struct {

	// - includeCustom: Include the specified query strings.- excludeCustom: Exclude the specified query strings. Note: This field may return null, indicating that no valid value can be obtained.
	// - `includeCustom`: Include the specified query strings.- `excludeCustom`: Exclude the specified query strings. Note: This field may return null, indicating that no valid value can be obtained.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to use QueryString as part of CacheKey.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`

	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type QueryStringParameters struct {

	// - includeCustom: Include the specified query strings.- excludeCustom: Exclude the specified query strings. Note: This field may return null, indicating that no valid value can be obtained.
	// - `includeCustom`: Include the specified query strings.- `excludeCustom`: Exclude the specified query strings. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to use QueryString as part of CacheKey.- `on`: Enable.- `off`: Disable. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`

	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	// Array of query strings used/excluded. Note: This field may return null, indicating that no valid value can be obtained.
	// +kubebuilder:validation:Optional
	Value []*string `json:"value,omitempty" tf:"value,omitempty"`
}

type QuicInitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable QUIC.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type QuicObservation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable QUIC.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type QuicParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable QUIC.- `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type SmartRoutingInitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable smart acceleration.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type SmartRoutingObservation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable smart acceleration.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type SmartRoutingParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable smart acceleration.- `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type UpstreamHttp2InitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable HTTP2 origin-pull.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type UpstreamHttp2Observation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable HTTP2 origin-pull.- `on`: Enable.- `off`: Disable.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`
}

type UpstreamHttp2Parameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable HTTP2 origin-pull.- `on`: Enable.- `off`: Disable.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`
}

type WebSocketInitParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable custom WebSocket timeout setting. When is off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`

	// Sets timeout period in seconds. Maximum value: 120.
	// Sets timeout period in seconds. Maximum value: 120.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type WebSocketObservation struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable custom WebSocket timeout setting. When is off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
	Switch *string `json:"switch,omitempty" tf:"switch,omitempty"`

	// Sets timeout period in seconds. Maximum value: 120.
	// Sets timeout period in seconds. Maximum value: 120.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type WebSocketParameters struct {

	// Specifies whether to enable cache prefresh.- on: Enable.- off: Disable.
	// Whether to enable custom WebSocket timeout setting. When is off: it means to keep the default WebSocket connection timeout period, which is 15 seconds. To change the timeout period, please set it to on.
	// +kubebuilder:validation:Optional
	Switch *string `json:"switch" tf:"switch,omitempty"`

	// Sets timeout period in seconds. Maximum value: 120.
	// Sets timeout period in seconds. Maximum value: 120.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type ZoneSettingInitParameters struct {

	// Cache expiration time configuration.
	// Cache expiration time configuration.
	Cache []CacheInitParameters `json:"cache,omitempty" tf:"cache,omitempty"`

	// Node cache key configuration.
	// Node cache key configuration.
	CacheKey []CacheKeyInitParameters `json:"cacheKey,omitempty" tf:"cache_key,omitempty"`

	// Cache pre-refresh configuration.
	// Cache pre-refresh configuration.
	CachePrefresh []CachePrefreshInitParameters `json:"cachePrefresh,omitempty" tf:"cache_prefresh,omitempty"`

	// Origin-pull client IP header configuration.
	// Origin-pull client IP header configuration.
	ClientIPHeader []ClientIPHeaderInitParameters `json:"clientIpHeader,omitempty" tf:"client_ip_header,omitempty"`

	// Smart compression configuration.
	// Smart compression configuration.
	Compression []CompressionInitParameters `json:"compression,omitempty" tf:"compression,omitempty"`

	// Force HTTPS redirect configuration.
	// Force HTTPS redirect configuration.
	ForceRedirect []ForceRedirectInitParameters `json:"forceRedirect,omitempty" tf:"force_redirect,omitempty"`

	// HTTPS acceleration configuration.
	// HTTPS acceleration configuration.
	HTTPS []HTTPSInitParameters `json:"https,omitempty" tf:"https,omitempty"`

	// IPv6 access configuration.
	// IPv6 access configuration.
	IPv6 []IPv6InitParameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`

	// Browser cache configuration.
	// Browser cache configuration.
	MaxAge []MaxAgeInitParameters `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// Offline cache configuration.
	// Offline cache configuration.
	OfflineCache []OfflineCacheInitParameters `json:"offlineCache,omitempty" tf:"offline_cache,omitempty"`

	// Origin server configuration.
	// Origin server configuration.
	Origin []OriginInitParameters `json:"origin,omitempty" tf:"origin,omitempty"`

	// Maximum size of files transferred over POST request.
	// Maximum size of files transferred over POST request.
	PostMaxSize []PostMaxSizeInitParameters `json:"postMaxSize,omitempty" tf:"post_max_size,omitempty"`

	// QUIC access configuration.
	// QUIC access configuration.
	Quic []QuicInitParameters `json:"quic,omitempty" tf:"quic,omitempty"`

	// Smart acceleration configuration.
	// Smart acceleration configuration.
	SmartRouting []SmartRoutingInitParameters `json:"smartRouting,omitempty" tf:"smart_routing,omitempty"`

	// HTTP2 origin-pull configuration.
	// HTTP2 origin-pull configuration.
	UpstreamHttp2 []UpstreamHttp2InitParameters `json:"upstreamHttp2,omitempty" tf:"upstream_http2,omitempty"`

	// WebSocket configuration.
	// WebSocket configuration.
	WebSocket []WebSocketInitParameters `json:"webSocket,omitempty" tf:"web_socket,omitempty"`
}

type ZoneSettingObservation struct {

	// Acceleration area of the zone. Valid values: mainland, overseas.
	// Acceleration area of the zone. Valid values: `mainland`, `overseas`.
	Area *string `json:"area,omitempty" tf:"area,omitempty"`

	// Cache expiration time configuration.
	// Cache expiration time configuration.
	Cache []CacheObservation `json:"cache,omitempty" tf:"cache,omitempty"`

	// Node cache key configuration.
	// Node cache key configuration.
	CacheKey []CacheKeyObservation `json:"cacheKey,omitempty" tf:"cache_key,omitempty"`

	// Cache pre-refresh configuration.
	// Cache pre-refresh configuration.
	CachePrefresh []CachePrefreshObservation `json:"cachePrefresh,omitempty" tf:"cache_prefresh,omitempty"`

	// Origin-pull client IP header configuration.
	// Origin-pull client IP header configuration.
	ClientIPHeader []ClientIPHeaderObservation `json:"clientIpHeader,omitempty" tf:"client_ip_header,omitempty"`

	// Smart compression configuration.
	// Smart compression configuration.
	Compression []CompressionObservation `json:"compression,omitempty" tf:"compression,omitempty"`

	// Force HTTPS redirect configuration.
	// Force HTTPS redirect configuration.
	ForceRedirect []ForceRedirectObservation `json:"forceRedirect,omitempty" tf:"force_redirect,omitempty"`

	// HTTPS acceleration configuration.
	// HTTPS acceleration configuration.
	HTTPS []HTTPSObservation `json:"https,omitempty" tf:"https,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// IPv6 access configuration.
	// IPv6 access configuration.
	IPv6 []IPv6Observation `json:"ipv6,omitempty" tf:"ipv6,omitempty"`

	// Browser cache configuration.
	// Browser cache configuration.
	MaxAge []MaxAgeObservation `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// Offline cache configuration.
	// Offline cache configuration.
	OfflineCache []OfflineCacheObservation `json:"offlineCache,omitempty" tf:"offline_cache,omitempty"`

	// Origin server configuration.
	// Origin server configuration.
	Origin []OriginObservation `json:"origin,omitempty" tf:"origin,omitempty"`

	// Maximum size of files transferred over POST request.
	// Maximum size of files transferred over POST request.
	PostMaxSize []PostMaxSizeObservation `json:"postMaxSize,omitempty" tf:"post_max_size,omitempty"`

	// QUIC access configuration.
	// QUIC access configuration.
	Quic []QuicObservation `json:"quic,omitempty" tf:"quic,omitempty"`

	// Smart acceleration configuration.
	// Smart acceleration configuration.
	SmartRouting []SmartRoutingObservation `json:"smartRouting,omitempty" tf:"smart_routing,omitempty"`

	// HTTP2 origin-pull configuration.
	// HTTP2 origin-pull configuration.
	UpstreamHttp2 []UpstreamHttp2Observation `json:"upstreamHttp2,omitempty" tf:"upstream_http2,omitempty"`

	// WebSocket configuration.
	// WebSocket configuration.
	WebSocket []WebSocketObservation `json:"webSocket,omitempty" tf:"web_socket,omitempty"`

	// Site ID.
	// Site ID.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ZoneSettingParameters struct {

	// Cache expiration time configuration.
	// Cache expiration time configuration.
	// +kubebuilder:validation:Optional
	Cache []CacheParameters `json:"cache,omitempty" tf:"cache,omitempty"`

	// Node cache key configuration.
	// Node cache key configuration.
	// +kubebuilder:validation:Optional
	CacheKey []CacheKeyParameters `json:"cacheKey,omitempty" tf:"cache_key,omitempty"`

	// Cache pre-refresh configuration.
	// Cache pre-refresh configuration.
	// +kubebuilder:validation:Optional
	CachePrefresh []CachePrefreshParameters `json:"cachePrefresh,omitempty" tf:"cache_prefresh,omitempty"`

	// Origin-pull client IP header configuration.
	// Origin-pull client IP header configuration.
	// +kubebuilder:validation:Optional
	ClientIPHeader []ClientIPHeaderParameters `json:"clientIpHeader,omitempty" tf:"client_ip_header,omitempty"`

	// Smart compression configuration.
	// Smart compression configuration.
	// +kubebuilder:validation:Optional
	Compression []CompressionParameters `json:"compression,omitempty" tf:"compression,omitempty"`

	// Force HTTPS redirect configuration.
	// Force HTTPS redirect configuration.
	// +kubebuilder:validation:Optional
	ForceRedirect []ForceRedirectParameters `json:"forceRedirect,omitempty" tf:"force_redirect,omitempty"`

	// HTTPS acceleration configuration.
	// HTTPS acceleration configuration.
	// +kubebuilder:validation:Optional
	HTTPS []HTTPSParameters `json:"https,omitempty" tf:"https,omitempty"`

	// IPv6 access configuration.
	// IPv6 access configuration.
	// +kubebuilder:validation:Optional
	IPv6 []IPv6Parameters `json:"ipv6,omitempty" tf:"ipv6,omitempty"`

	// Browser cache configuration.
	// Browser cache configuration.
	// +kubebuilder:validation:Optional
	MaxAge []MaxAgeParameters `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// Offline cache configuration.
	// Offline cache configuration.
	// +kubebuilder:validation:Optional
	OfflineCache []OfflineCacheParameters `json:"offlineCache,omitempty" tf:"offline_cache,omitempty"`

	// Origin server configuration.
	// Origin server configuration.
	// +kubebuilder:validation:Optional
	Origin []OriginParameters `json:"origin,omitempty" tf:"origin,omitempty"`

	// Maximum size of files transferred over POST request.
	// Maximum size of files transferred over POST request.
	// +kubebuilder:validation:Optional
	PostMaxSize []PostMaxSizeParameters `json:"postMaxSize,omitempty" tf:"post_max_size,omitempty"`

	// QUIC access configuration.
	// QUIC access configuration.
	// +kubebuilder:validation:Optional
	Quic []QuicParameters `json:"quic,omitempty" tf:"quic,omitempty"`

	// Smart acceleration configuration.
	// Smart acceleration configuration.
	// +kubebuilder:validation:Optional
	SmartRouting []SmartRoutingParameters `json:"smartRouting,omitempty" tf:"smart_routing,omitempty"`

	// HTTP2 origin-pull configuration.
	// HTTP2 origin-pull configuration.
	// +kubebuilder:validation:Optional
	UpstreamHttp2 []UpstreamHttp2Parameters `json:"upstreamHttp2,omitempty" tf:"upstream_http2,omitempty"`

	// WebSocket configuration.
	// WebSocket configuration.
	// +kubebuilder:validation:Optional
	WebSocket []WebSocketParameters `json:"webSocket,omitempty" tf:"web_socket,omitempty"`

	// Site ID.
	// Site ID.
	// +crossplane:generate:reference:type=Zone
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`

	// Reference to a Zone to populate zoneId.
	// +kubebuilder:validation:Optional
	ZoneIDRef *v1.Reference `json:"zoneIdRef,omitempty" tf:"-"`

	// Selector for a Zone to populate zoneId.
	// +kubebuilder:validation:Optional
	ZoneIDSelector *v1.Selector `json:"zoneIdSelector,omitempty" tf:"-"`
}

// ZoneSettingSpec defines the desired state of ZoneSetting
type ZoneSettingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ZoneSettingParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ZoneSettingInitParameters `json:"initProvider,omitempty"`
}

// ZoneSettingStatus defines the observed state of ZoneSetting.
type ZoneSettingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ZoneSettingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ZoneSetting is the Schema for the ZoneSettings API. Provides a resource to create a teo zone_setting
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ZoneSetting struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ZoneSettingSpec   `json:"spec"`
	Status            ZoneSettingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ZoneSettingList contains a list of ZoneSettings
type ZoneSettingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ZoneSetting `json:"items"`
}

// Repository type metadata.
var (
	ZoneSetting_Kind             = "ZoneSetting"
	ZoneSetting_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ZoneSetting_Kind}.String()
	ZoneSetting_KindAPIVersion   = ZoneSetting_Kind + "." + CRDGroupVersion.String()
	ZoneSetting_GroupVersionKind = CRDGroupVersion.WithKind(ZoneSetting_Kind)
)

func init() {
	SchemeBuilder.Register(&ZoneSetting{}, &ZoneSettingList{})
}
