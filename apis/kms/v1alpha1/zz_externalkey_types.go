// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ExternalKeyInitParameters struct {

	// Name of CMK. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	// Name of CMK. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// Description of CMK. The maximum is 1024 bytes.
	// Description of CMK. The maximum is 1024 bytes.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specify whether to archive key. Default value is false. This field is conflict with is_enabled, valid when key_state is Enabled, Disabled, Archived.
	// Specify whether to archive key. Default value is `false`. This field is conflict with `is_enabled`, valid when key_state is `Enabled`, `Disabled`, `Archived`.
	IsArchived *bool `json:"isArchived,omitempty" tf:"is_archived,omitempty"`

	// Specify whether to enable key. Default value is false. This field is conflict with is_archived, valid when key_state is Enabled, Disabled, Archived.
	// Specify whether to enable key. Default value is `false`. This field is conflict with `is_archived`, valid when key_state is `Enabled`, `Disabled`, `Archived`.
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 7 days.
	// Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 7 days.
	PendingDeleteWindowInDays *float64 `json:"pendingDeleteWindowInDays,omitempty" tf:"pending_delete_window_in_days,omitempty"`

	// Tags of CMK.
	// Tags of CMK.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// This value means the effective timestamp of the key material, 0 means it does not expire. Need to be greater than the current timestamp, the maximum support is 2147443200.
	// This value means the effective timestamp of the key material, 0 means it does not expire. Need to be greater than the current timestamp, the maximum support is 2147443200.
	ValidTo *float64 `json:"validTo,omitempty" tf:"valid_to,omitempty"`

	// The algorithm for encrypting key material. Available values include RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1 and RSAES_OAEP_SHA_256. Default value is RSAES_PKCS1_V1_5.
	// The algorithm for encrypting key material. Available values include `RSAES_PKCS1_V1_5`, `RSAES_OAEP_SHA_1` and `RSAES_OAEP_SHA_256`. Default value is `RSAES_PKCS1_V1_5`.
	WrappingAlgorithm *string `json:"wrappingAlgorithm,omitempty" tf:"wrapping_algorithm,omitempty"`
}

type ExternalKeyObservation struct {

	// Name of CMK. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	// Name of CMK. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// Description of CMK. The maximum is 1024 bytes.
	// Description of CMK. The maximum is 1024 bytes.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specify whether to archive key. Default value is false. This field is conflict with is_enabled, valid when key_state is Enabled, Disabled, Archived.
	// Specify whether to archive key. Default value is `false`. This field is conflict with `is_enabled`, valid when key_state is `Enabled`, `Disabled`, `Archived`.
	IsArchived *bool `json:"isArchived,omitempty" tf:"is_archived,omitempty"`

	// Specify whether to enable key. Default value is false. This field is conflict with is_archived, valid when key_state is Enabled, Disabled, Archived.
	// Specify whether to enable key. Default value is `false`. This field is conflict with `is_archived`, valid when key_state is `Enabled`, `Disabled`, `Archived`.
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// State of CMK.
	// State of CMK.
	KeyState *string `json:"keyState,omitempty" tf:"key_state,omitempty"`

	// Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 7 days.
	// Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 7 days.
	PendingDeleteWindowInDays *float64 `json:"pendingDeleteWindowInDays,omitempty" tf:"pending_delete_window_in_days,omitempty"`

	// Tags of CMK.
	// Tags of CMK.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// This value means the effective timestamp of the key material, 0 means it does not expire. Need to be greater than the current timestamp, the maximum support is 2147443200.
	// This value means the effective timestamp of the key material, 0 means it does not expire. Need to be greater than the current timestamp, the maximum support is 2147443200.
	ValidTo *float64 `json:"validTo,omitempty" tf:"valid_to,omitempty"`

	// The algorithm for encrypting key material. Available values include RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1 and RSAES_OAEP_SHA_256. Default value is RSAES_PKCS1_V1_5.
	// The algorithm for encrypting key material. Available values include `RSAES_PKCS1_V1_5`, `RSAES_OAEP_SHA_1` and `RSAES_OAEP_SHA_256`. Default value is `RSAES_PKCS1_V1_5`.
	WrappingAlgorithm *string `json:"wrappingAlgorithm,omitempty" tf:"wrapping_algorithm,omitempty"`
}

type ExternalKeyParameters struct {

	// Name of CMK. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	// Name of CMK. The name can only contain English letters, numbers, underscore and hyphen '-'. The first character must be a letter or number.
	// +kubebuilder:validation:Optional
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// Description of CMK. The maximum is 1024 bytes.
	// Description of CMK. The maximum is 1024 bytes.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specify whether to archive key. Default value is false. This field is conflict with is_enabled, valid when key_state is Enabled, Disabled, Archived.
	// Specify whether to archive key. Default value is `false`. This field is conflict with `is_enabled`, valid when key_state is `Enabled`, `Disabled`, `Archived`.
	// +kubebuilder:validation:Optional
	IsArchived *bool `json:"isArchived,omitempty" tf:"is_archived,omitempty"`

	// Specify whether to enable key. Default value is false. This field is conflict with is_archived, valid when key_state is Enabled, Disabled, Archived.
	// Specify whether to enable key. Default value is `false`. This field is conflict with `is_archived`, valid when key_state is `Enabled`, `Disabled`, `Archived`.
	// +kubebuilder:validation:Optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// The base64-encoded key material encrypted with the public_key. For regions using the national secret version, the length of the imported key material is required to be 128 bits, and for regions using the FIPS version, the length of the imported key material is required to be 256 bits.
	// The base64-encoded key material encrypted with the public_key. For regions using the national secret version, the length of the imported key material is required to be 128 bits, and for regions using the FIPS version, the length of the imported key material is required to be 256 bits.
	// +kubebuilder:validation:Optional
	KeyMaterialBase64SecretRef *v1.SecretKeySelector `json:"keyMaterialBase64SecretRef,omitempty" tf:"-"`

	// Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 7 days.
	// Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 7 days.
	// +kubebuilder:validation:Optional
	PendingDeleteWindowInDays *float64 `json:"pendingDeleteWindowInDays,omitempty" tf:"pending_delete_window_in_days,omitempty"`

	// Tags of CMK.
	// Tags of CMK.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// This value means the effective timestamp of the key material, 0 means it does not expire. Need to be greater than the current timestamp, the maximum support is 2147443200.
	// This value means the effective timestamp of the key material, 0 means it does not expire. Need to be greater than the current timestamp, the maximum support is 2147443200.
	// +kubebuilder:validation:Optional
	ValidTo *float64 `json:"validTo,omitempty" tf:"valid_to,omitempty"`

	// The algorithm for encrypting key material. Available values include RSAES_PKCS1_V1_5, RSAES_OAEP_SHA_1 and RSAES_OAEP_SHA_256. Default value is RSAES_PKCS1_V1_5.
	// The algorithm for encrypting key material. Available values include `RSAES_PKCS1_V1_5`, `RSAES_OAEP_SHA_1` and `RSAES_OAEP_SHA_256`. Default value is `RSAES_PKCS1_V1_5`.
	// +kubebuilder:validation:Optional
	WrappingAlgorithm *string `json:"wrappingAlgorithm,omitempty" tf:"wrapping_algorithm,omitempty"`
}

// ExternalKeySpec defines the desired state of ExternalKey
type ExternalKeySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ExternalKeyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ExternalKeyInitParameters `json:"initProvider,omitempty"`
}

// ExternalKeyStatus defines the observed state of ExternalKey.
type ExternalKeyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ExternalKeyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ExternalKey is the Schema for the ExternalKeys API. Provide a resource to create a KMS external key.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type ExternalKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.alias) || (has(self.initProvider) && has(self.initProvider.alias))",message="spec.forProvider.alias is a required parameter"
	Spec   ExternalKeySpec   `json:"spec"`
	Status ExternalKeyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ExternalKeyList contains a list of ExternalKeys
type ExternalKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ExternalKey `json:"items"`
}

// Repository type metadata.
var (
	ExternalKey_Kind             = "ExternalKey"
	ExternalKey_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ExternalKey_Kind}.String()
	ExternalKey_KindAPIVersion   = ExternalKey_Kind + "." + CRDGroupVersion.String()
	ExternalKey_GroupVersionKind = CRDGroupVersion.WithKind(ExternalKey_Kind)
)

func init() {
	SchemeBuilder.Register(&ExternalKey{}, &ExternalKeyList{})
}
