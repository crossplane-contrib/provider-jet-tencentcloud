//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApmInitParameters) DeepCopyInto(out *ApmInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApmInitParameters.
func (in *ApmInitParameters) DeepCopy() *ApmInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApmObservation) DeepCopyInto(out *ApmObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApmObservation.
func (in *ApmObservation) DeepCopy() *ApmObservation {
	if in == nil {
		return nil
	}
	out := new(ApmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApmParameters) DeepCopyInto(out *ApmParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApmParameters.
func (in *ApmParameters) DeepCopy() *ApmParameters {
	if in == nil {
		return nil
	}
	out := new(ApmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAttachment) DeepCopyInto(out *ClusterAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAttachment.
func (in *ClusterAttachment) DeepCopy() *ClusterAttachment {
	if in == nil {
		return nil
	}
	out := new(ClusterAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAttachmentInitParameters) DeepCopyInto(out *ClusterAttachmentInitParameters) {
	*out = *in
	if in.ClusterList != nil {
		in, out := &in.ClusterList, &out.ClusterList
		*out = make([]ClusterListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MeshID != nil {
		in, out := &in.MeshID, &out.MeshID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAttachmentInitParameters.
func (in *ClusterAttachmentInitParameters) DeepCopy() *ClusterAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAttachmentList) DeepCopyInto(out *ClusterAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAttachmentList.
func (in *ClusterAttachmentList) DeepCopy() *ClusterAttachmentList {
	if in == nil {
		return nil
	}
	out := new(ClusterAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAttachmentObservation) DeepCopyInto(out *ClusterAttachmentObservation) {
	*out = *in
	if in.ClusterList != nil {
		in, out := &in.ClusterList, &out.ClusterList
		*out = make([]ClusterListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MeshID != nil {
		in, out := &in.MeshID, &out.MeshID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAttachmentObservation.
func (in *ClusterAttachmentObservation) DeepCopy() *ClusterAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAttachmentParameters) DeepCopyInto(out *ClusterAttachmentParameters) {
	*out = *in
	if in.ClusterList != nil {
		in, out := &in.ClusterList, &out.ClusterList
		*out = make([]ClusterListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MeshID != nil {
		in, out := &in.MeshID, &out.MeshID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAttachmentParameters.
func (in *ClusterAttachmentParameters) DeepCopy() *ClusterAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAttachmentSpec) DeepCopyInto(out *ClusterAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAttachmentSpec.
func (in *ClusterAttachmentSpec) DeepCopy() *ClusterAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAttachmentStatus) DeepCopyInto(out *ClusterAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAttachmentStatus.
func (in *ClusterAttachmentStatus) DeepCopy() *ClusterAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterListInitParameters) DeepCopyInto(out *ClusterListInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterListInitParameters.
func (in *ClusterListInitParameters) DeepCopy() *ClusterListInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterListObservation) DeepCopyInto(out *ClusterListObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterListObservation.
func (in *ClusterListObservation) DeepCopy() *ClusterListObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterListParameters) DeepCopyInto(out *ClusterListParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterListParameters.
func (in *ClusterListParameters) DeepCopy() *ClusterListParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.Inject != nil {
		in, out := &in.Inject, &out.Inject
		*out = make([]InjectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Istio != nil {
		in, out := &in.Istio, &out.Istio
		*out = make([]IstioInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = make([]PrometheusInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidecarResources != nil {
		in, out := &in.SidecarResources, &out.SidecarResources
		*out = make([]SidecarResourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = make([]ConfigTracingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.Inject != nil {
		in, out := &in.Inject, &out.Inject
		*out = make([]InjectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Istio != nil {
		in, out := &in.Istio, &out.Istio
		*out = make([]IstioObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = make([]PrometheusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidecarResources != nil {
		in, out := &in.SidecarResources, &out.SidecarResources
		*out = make([]SidecarResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = make([]ConfigTracingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.Inject != nil {
		in, out := &in.Inject, &out.Inject
		*out = make([]InjectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Istio != nil {
		in, out := &in.Istio, &out.Istio
		*out = make([]IstioParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = make([]PrometheusParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidecarResources != nil {
		in, out := &in.SidecarResources, &out.SidecarResources
		*out = make([]SidecarResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = make([]ConfigTracingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigTracingInitParameters) DeepCopyInto(out *ConfigTracingInitParameters) {
	*out = *in
	if in.Apm != nil {
		in, out := &in.Apm, &out.Apm
		*out = make([]TracingApmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampling != nil {
		in, out := &in.Sampling, &out.Sampling
		*out = new(float64)
		**out = **in
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = make([]TracingZipkinInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigTracingInitParameters.
func (in *ConfigTracingInitParameters) DeepCopy() *ConfigTracingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigTracingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigTracingObservation) DeepCopyInto(out *ConfigTracingObservation) {
	*out = *in
	if in.Apm != nil {
		in, out := &in.Apm, &out.Apm
		*out = make([]TracingApmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampling != nil {
		in, out := &in.Sampling, &out.Sampling
		*out = new(float64)
		**out = **in
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = make([]TracingZipkinObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigTracingObservation.
func (in *ConfigTracingObservation) DeepCopy() *ConfigTracingObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigTracingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigTracingParameters) DeepCopyInto(out *ConfigTracingParameters) {
	*out = *in
	if in.Apm != nil {
		in, out := &in.Apm, &out.Apm
		*out = make([]TracingApmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampling != nil {
		in, out := &in.Sampling, &out.Sampling
		*out = new(float64)
		**out = **in
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = make([]TracingZipkinParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigTracingParameters.
func (in *ConfigTracingParameters) DeepCopy() *ConfigTracingParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigTracingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPromInitParameters) DeepCopyInto(out *CustomPromInitParameters) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.IsPublicAddr != nil {
		in, out := &in.IsPublicAddr, &out.IsPublicAddr
		*out = new(bool)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPromInitParameters.
func (in *CustomPromInitParameters) DeepCopy() *CustomPromInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPromObservation) DeepCopyInto(out *CustomPromObservation) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.IsPublicAddr != nil {
		in, out := &in.IsPublicAddr, &out.IsPublicAddr
		*out = new(bool)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPromObservation.
func (in *CustomPromObservation) DeepCopy() *CustomPromObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPromParameters) DeepCopyInto(out *CustomPromParameters) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.IsPublicAddr != nil {
		in, out := &in.IsPublicAddr, &out.IsPublicAddr
		*out = new(bool)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPromParameters.
func (in *CustomPromParameters) DeepCopy() *CustomPromParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InjectInitParameters) DeepCopyInto(out *InjectInitParameters) {
	*out = *in
	if in.ExcludeIPRanges != nil {
		in, out := &in.ExcludeIPRanges, &out.ExcludeIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HoldApplicationUntilProxyStarts != nil {
		in, out := &in.HoldApplicationUntilProxyStarts, &out.HoldApplicationUntilProxyStarts
		*out = new(bool)
		**out = **in
	}
	if in.HoldProxyUntilApplicationEnds != nil {
		in, out := &in.HoldProxyUntilApplicationEnds, &out.HoldProxyUntilApplicationEnds
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InjectInitParameters.
func (in *InjectInitParameters) DeepCopy() *InjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(InjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InjectObservation) DeepCopyInto(out *InjectObservation) {
	*out = *in
	if in.ExcludeIPRanges != nil {
		in, out := &in.ExcludeIPRanges, &out.ExcludeIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HoldApplicationUntilProxyStarts != nil {
		in, out := &in.HoldApplicationUntilProxyStarts, &out.HoldApplicationUntilProxyStarts
		*out = new(bool)
		**out = **in
	}
	if in.HoldProxyUntilApplicationEnds != nil {
		in, out := &in.HoldProxyUntilApplicationEnds, &out.HoldProxyUntilApplicationEnds
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InjectObservation.
func (in *InjectObservation) DeepCopy() *InjectObservation {
	if in == nil {
		return nil
	}
	out := new(InjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InjectParameters) DeepCopyInto(out *InjectParameters) {
	*out = *in
	if in.ExcludeIPRanges != nil {
		in, out := &in.ExcludeIPRanges, &out.ExcludeIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HoldApplicationUntilProxyStarts != nil {
		in, out := &in.HoldApplicationUntilProxyStarts, &out.HoldApplicationUntilProxyStarts
		*out = new(bool)
		**out = **in
	}
	if in.HoldProxyUntilApplicationEnds != nil {
		in, out := &in.HoldProxyUntilApplicationEnds, &out.HoldProxyUntilApplicationEnds
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InjectParameters.
func (in *InjectParameters) DeepCopy() *InjectParameters {
	if in == nil {
		return nil
	}
	out := new(InjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioInitParameters) DeepCopyInto(out *IstioInitParameters) {
	*out = *in
	if in.DisableHTTPRetry != nil {
		in, out := &in.DisableHTTPRetry, &out.DisableHTTPRetry
		*out = new(bool)
		**out = **in
	}
	if in.DisablePolicyChecks != nil {
		in, out := &in.DisablePolicyChecks, &out.DisablePolicyChecks
		*out = new(bool)
		**out = **in
	}
	if in.EnablePilotHTTP != nil {
		in, out := &in.EnablePilotHTTP, &out.EnablePilotHTTP
		*out = new(bool)
		**out = **in
	}
	if in.OutboundTrafficPolicy != nil {
		in, out := &in.OutboundTrafficPolicy, &out.OutboundTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.SmartDNS != nil {
		in, out := &in.SmartDNS, &out.SmartDNS
		*out = make([]SmartDNSInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = make([]TracingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioInitParameters.
func (in *IstioInitParameters) DeepCopy() *IstioInitParameters {
	if in == nil {
		return nil
	}
	out := new(IstioInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioObservation) DeepCopyInto(out *IstioObservation) {
	*out = *in
	if in.DisableHTTPRetry != nil {
		in, out := &in.DisableHTTPRetry, &out.DisableHTTPRetry
		*out = new(bool)
		**out = **in
	}
	if in.DisablePolicyChecks != nil {
		in, out := &in.DisablePolicyChecks, &out.DisablePolicyChecks
		*out = new(bool)
		**out = **in
	}
	if in.EnablePilotHTTP != nil {
		in, out := &in.EnablePilotHTTP, &out.EnablePilotHTTP
		*out = new(bool)
		**out = **in
	}
	if in.OutboundTrafficPolicy != nil {
		in, out := &in.OutboundTrafficPolicy, &out.OutboundTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.SmartDNS != nil {
		in, out := &in.SmartDNS, &out.SmartDNS
		*out = make([]SmartDNSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = make([]TracingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioObservation.
func (in *IstioObservation) DeepCopy() *IstioObservation {
	if in == nil {
		return nil
	}
	out := new(IstioObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IstioParameters) DeepCopyInto(out *IstioParameters) {
	*out = *in
	if in.DisableHTTPRetry != nil {
		in, out := &in.DisableHTTPRetry, &out.DisableHTTPRetry
		*out = new(bool)
		**out = **in
	}
	if in.DisablePolicyChecks != nil {
		in, out := &in.DisablePolicyChecks, &out.DisablePolicyChecks
		*out = new(bool)
		**out = **in
	}
	if in.EnablePilotHTTP != nil {
		in, out := &in.EnablePilotHTTP, &out.EnablePilotHTTP
		*out = new(bool)
		**out = **in
	}
	if in.OutboundTrafficPolicy != nil {
		in, out := &in.OutboundTrafficPolicy, &out.OutboundTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.SmartDNS != nil {
		in, out := &in.SmartDNS, &out.SmartDNS
		*out = make([]SmartDNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = make([]TracingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IstioParameters.
func (in *IstioParameters) DeepCopy() *IstioParameters {
	if in == nil {
		return nil
	}
	out := new(IstioParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitsInitParameters) DeepCopyInto(out *LimitsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitsInitParameters.
func (in *LimitsInitParameters) DeepCopy() *LimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitsObservation) DeepCopyInto(out *LimitsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitsObservation.
func (in *LimitsObservation) DeepCopy() *LimitsObservation {
	if in == nil {
		return nil
	}
	out := new(LimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitsParameters) DeepCopyInto(out *LimitsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitsParameters.
func (in *LimitsParameters) DeepCopy() *LimitsParameters {
	if in == nil {
		return nil
	}
	out := new(LimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Mesh) DeepCopyInto(out *Mesh) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Mesh.
func (in *Mesh) DeepCopy() *Mesh {
	if in == nil {
		return nil
	}
	out := new(Mesh)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Mesh) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshInitParameters) DeepCopyInto(out *MeshInitParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.MeshID != nil {
		in, out := &in.MeshID, &out.MeshID
		*out = new(string)
		**out = **in
	}
	if in.MeshVersion != nil {
		in, out := &in.MeshVersion, &out.MeshVersion
		*out = new(string)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]TagListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshInitParameters.
func (in *MeshInitParameters) DeepCopy() *MeshInitParameters {
	if in == nil {
		return nil
	}
	out := new(MeshInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshList) DeepCopyInto(out *MeshList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Mesh, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshList.
func (in *MeshList) DeepCopy() *MeshList {
	if in == nil {
		return nil
	}
	out := new(MeshList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MeshList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshObservation) DeepCopyInto(out *MeshObservation) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MeshID != nil {
		in, out := &in.MeshID, &out.MeshID
		*out = new(string)
		**out = **in
	}
	if in.MeshVersion != nil {
		in, out := &in.MeshVersion, &out.MeshVersion
		*out = new(string)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]TagListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshObservation.
func (in *MeshObservation) DeepCopy() *MeshObservation {
	if in == nil {
		return nil
	}
	out := new(MeshObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshParameters) DeepCopyInto(out *MeshParameters) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.MeshID != nil {
		in, out := &in.MeshID, &out.MeshID
		*out = new(string)
		**out = **in
	}
	if in.MeshVersion != nil {
		in, out := &in.MeshVersion, &out.MeshVersion
		*out = new(string)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]TagListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshParameters.
func (in *MeshParameters) DeepCopy() *MeshParameters {
	if in == nil {
		return nil
	}
	out := new(MeshParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshSpec) DeepCopyInto(out *MeshSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshSpec.
func (in *MeshSpec) DeepCopy() *MeshSpec {
	if in == nil {
		return nil
	}
	out := new(MeshSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MeshStatus) DeepCopyInto(out *MeshStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MeshStatus.
func (in *MeshStatus) DeepCopy() *MeshStatus {
	if in == nil {
		return nil
	}
	out := new(MeshStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusInitParameters) DeepCopyInto(out *PrometheusInitParameters) {
	*out = *in
	if in.CustomProm != nil {
		in, out := &in.CustomProm, &out.CustomProm
		*out = make([]CustomPromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusInitParameters.
func (in *PrometheusInitParameters) DeepCopy() *PrometheusInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrometheusInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusObservation) DeepCopyInto(out *PrometheusObservation) {
	*out = *in
	if in.CustomProm != nil {
		in, out := &in.CustomProm, &out.CustomProm
		*out = make([]CustomPromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusObservation.
func (in *PrometheusObservation) DeepCopy() *PrometheusObservation {
	if in == nil {
		return nil
	}
	out := new(PrometheusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusParameters) DeepCopyInto(out *PrometheusParameters) {
	*out = *in
	if in.CustomProm != nil {
		in, out := &in.CustomProm, &out.CustomProm
		*out = make([]CustomPromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusParameters.
func (in *PrometheusParameters) DeepCopy() *PrometheusParameters {
	if in == nil {
		return nil
	}
	out := new(PrometheusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsInitParameters) DeepCopyInto(out *RequestsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsInitParameters.
func (in *RequestsInitParameters) DeepCopy() *RequestsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsObservation) DeepCopyInto(out *RequestsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsObservation.
func (in *RequestsObservation) DeepCopy() *RequestsObservation {
	if in == nil {
		return nil
	}
	out := new(RequestsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestsParameters) DeepCopyInto(out *RequestsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Quantity != nil {
		in, out := &in.Quantity, &out.Quantity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestsParameters.
func (in *RequestsParameters) DeepCopy() *RequestsParameters {
	if in == nil {
		return nil
	}
	out := new(RequestsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarResourcesInitParameters) DeepCopyInto(out *SidecarResourcesInitParameters) {
	*out = *in
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]LimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]RequestsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarResourcesInitParameters.
func (in *SidecarResourcesInitParameters) DeepCopy() *SidecarResourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SidecarResourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarResourcesObservation) DeepCopyInto(out *SidecarResourcesObservation) {
	*out = *in
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]LimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]RequestsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarResourcesObservation.
func (in *SidecarResourcesObservation) DeepCopy() *SidecarResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(SidecarResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SidecarResourcesParameters) DeepCopyInto(out *SidecarResourcesParameters) {
	*out = *in
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]LimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]RequestsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SidecarResourcesParameters.
func (in *SidecarResourcesParameters) DeepCopy() *SidecarResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(SidecarResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmartDNSInitParameters) DeepCopyInto(out *SmartDNSInitParameters) {
	*out = *in
	if in.IstioMetaDNSAutoAllocate != nil {
		in, out := &in.IstioMetaDNSAutoAllocate, &out.IstioMetaDNSAutoAllocate
		*out = new(bool)
		**out = **in
	}
	if in.IstioMetaDNSCapture != nil {
		in, out := &in.IstioMetaDNSCapture, &out.IstioMetaDNSCapture
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmartDNSInitParameters.
func (in *SmartDNSInitParameters) DeepCopy() *SmartDNSInitParameters {
	if in == nil {
		return nil
	}
	out := new(SmartDNSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmartDNSObservation) DeepCopyInto(out *SmartDNSObservation) {
	*out = *in
	if in.IstioMetaDNSAutoAllocate != nil {
		in, out := &in.IstioMetaDNSAutoAllocate, &out.IstioMetaDNSAutoAllocate
		*out = new(bool)
		**out = **in
	}
	if in.IstioMetaDNSCapture != nil {
		in, out := &in.IstioMetaDNSCapture, &out.IstioMetaDNSCapture
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmartDNSObservation.
func (in *SmartDNSObservation) DeepCopy() *SmartDNSObservation {
	if in == nil {
		return nil
	}
	out := new(SmartDNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmartDNSParameters) DeepCopyInto(out *SmartDNSParameters) {
	*out = *in
	if in.IstioMetaDNSAutoAllocate != nil {
		in, out := &in.IstioMetaDNSAutoAllocate, &out.IstioMetaDNSAutoAllocate
		*out = new(bool)
		**out = **in
	}
	if in.IstioMetaDNSCapture != nil {
		in, out := &in.IstioMetaDNSCapture, &out.IstioMetaDNSCapture
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmartDNSParameters.
func (in *SmartDNSParameters) DeepCopy() *SmartDNSParameters {
	if in == nil {
		return nil
	}
	out := new(SmartDNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagListInitParameters) DeepCopyInto(out *TagListInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagListInitParameters.
func (in *TagListInitParameters) DeepCopy() *TagListInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagListObservation) DeepCopyInto(out *TagListObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagListObservation.
func (in *TagListObservation) DeepCopy() *TagListObservation {
	if in == nil {
		return nil
	}
	out := new(TagListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagListParameters) DeepCopyInto(out *TagListParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Passthrough != nil {
		in, out := &in.Passthrough, &out.Passthrough
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagListParameters.
func (in *TagListParameters) DeepCopy() *TagListParameters {
	if in == nil {
		return nil
	}
	out := new(TagListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingApmInitParameters) DeepCopyInto(out *TracingApmInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingApmInitParameters.
func (in *TracingApmInitParameters) DeepCopy() *TracingApmInitParameters {
	if in == nil {
		return nil
	}
	out := new(TracingApmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingApmObservation) DeepCopyInto(out *TracingApmObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingApmObservation.
func (in *TracingApmObservation) DeepCopy() *TracingApmObservation {
	if in == nil {
		return nil
	}
	out := new(TracingApmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingApmParameters) DeepCopyInto(out *TracingApmParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingApmParameters.
func (in *TracingApmParameters) DeepCopy() *TracingApmParameters {
	if in == nil {
		return nil
	}
	out := new(TracingApmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingInitParameters) DeepCopyInto(out *TracingInitParameters) {
	*out = *in
	if in.Apm != nil {
		in, out := &in.Apm, &out.Apm
		*out = make([]ApmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampling != nil {
		in, out := &in.Sampling, &out.Sampling
		*out = new(float64)
		**out = **in
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = make([]ZipkinInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingInitParameters.
func (in *TracingInitParameters) DeepCopy() *TracingInitParameters {
	if in == nil {
		return nil
	}
	out := new(TracingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingObservation) DeepCopyInto(out *TracingObservation) {
	*out = *in
	if in.Apm != nil {
		in, out := &in.Apm, &out.Apm
		*out = make([]ApmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampling != nil {
		in, out := &in.Sampling, &out.Sampling
		*out = new(float64)
		**out = **in
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = make([]ZipkinObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingObservation.
func (in *TracingObservation) DeepCopy() *TracingObservation {
	if in == nil {
		return nil
	}
	out := new(TracingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingParameters) DeepCopyInto(out *TracingParameters) {
	*out = *in
	if in.Apm != nil {
		in, out := &in.Apm, &out.Apm
		*out = make([]ApmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampling != nil {
		in, out := &in.Sampling, &out.Sampling
		*out = new(float64)
		**out = **in
	}
	if in.Zipkin != nil {
		in, out := &in.Zipkin, &out.Zipkin
		*out = make([]ZipkinParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingParameters.
func (in *TracingParameters) DeepCopy() *TracingParameters {
	if in == nil {
		return nil
	}
	out := new(TracingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingZipkinInitParameters) DeepCopyInto(out *TracingZipkinInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingZipkinInitParameters.
func (in *TracingZipkinInitParameters) DeepCopy() *TracingZipkinInitParameters {
	if in == nil {
		return nil
	}
	out := new(TracingZipkinInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingZipkinObservation) DeepCopyInto(out *TracingZipkinObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingZipkinObservation.
func (in *TracingZipkinObservation) DeepCopy() *TracingZipkinObservation {
	if in == nil {
		return nil
	}
	out := new(TracingZipkinObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingZipkinParameters) DeepCopyInto(out *TracingZipkinParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingZipkinParameters.
func (in *TracingZipkinParameters) DeepCopy() *TracingZipkinParameters {
	if in == nil {
		return nil
	}
	out := new(TracingZipkinParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZipkinInitParameters) DeepCopyInto(out *ZipkinInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZipkinInitParameters.
func (in *ZipkinInitParameters) DeepCopy() *ZipkinInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZipkinInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZipkinObservation) DeepCopyInto(out *ZipkinObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZipkinObservation.
func (in *ZipkinObservation) DeepCopy() *ZipkinObservation {
	if in == nil {
		return nil
	}
	out := new(ZipkinObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZipkinParameters) DeepCopyInto(out *ZipkinParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZipkinParameters.
func (in *ZipkinParameters) DeepCopy() *ZipkinParameters {
	if in == nil {
		return nil
	}
	out := new(ZipkinParameters)
	in.DeepCopyInto(out)
	return out
}
