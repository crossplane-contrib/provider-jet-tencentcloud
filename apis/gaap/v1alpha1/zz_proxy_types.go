// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProxyInitParameters struct {

	// Access region of the GAAP proxy. Valid value: Hongkong, SoutheastAsia, Korea, Europe, NorthAmerica, Canada, WestIndia, Thailand, Virginia, Japan, Taipei, SL_AZURE_NorthUAE, SL_AZURE_EastAUS, SL_AZURE_NorthCentralUSA, SL_AZURE_SouthIndia, SL_AZURE_SouthBrazil, SL_AZURE_NorthZAF, SL_AZURE_SoutheastAsia, SL_AZURE_CentralFrance, SL_AZURE_SouthEngland, SL_AZURE_EastUS, SL_AZURE_WestUS, SL_AZURE_SouthCentralUSA, Jakarta, Beijing, Shanghai, Guangzhou, Chengdu, SL_AZURE_NorwayEast, Chongqing, Nanjing, SaoPaulo, SL_AZURE_JapanEast, Changsha, Xian, Wuhan, Fuzhou, Shenyang, Zhengzhou, Jinan, Hangzhou, Shijiazhuang, Hefei.
	// Access region of the GAAP proxy. Valid value: `Hongkong`, `SoutheastAsia`, `Korea`, `Europe`, `NorthAmerica`, `Canada`, `WestIndia`, `Thailand`, `Virginia`, `Japan`, `Taipei`, `SL_AZURE_NorthUAE`, `SL_AZURE_EastAUS`, `SL_AZURE_NorthCentralUSA`, `SL_AZURE_SouthIndia`, `SL_AZURE_SouthBrazil`, `SL_AZURE_NorthZAF`, `SL_AZURE_SoutheastAsia`, `SL_AZURE_CentralFrance`, `SL_AZURE_SouthEngland`, `SL_AZURE_EastUS`, `SL_AZURE_WestUS`, `SL_AZURE_SouthCentralUSA`, `Jakarta`, `Beijing`, `Shanghai`, `Guangzhou`, `Chengdu`, `SL_AZURE_NorwayEast`, `Chongqing`, `Nanjing`, `SaoPaulo`, `SL_AZURE_JapanEast`, `Changsha`, `Xian`, `Wuhan`, `Fuzhou`, `Shenyang`, `Zhengzhou`, `Jinan`, `Hangzhou`, `Shijiazhuang`, `Hefei`.
	AccessRegion *string `json:"accessRegion,omitempty" tf:"access_region,omitempty"`

	// Maximum bandwidth of the GAAP proxy, unit is Mbps. Valid value: 10, 20, 50, 100, 200, 500, 1000, 2000, 5000 and 10000. To set 2000, 5000 or 10000, you need to apply for a whitelist from Tencent Cloud.
	// Maximum bandwidth of the GAAP proxy, unit is Mbps. Valid value: `10`, `20`, `50`, `100`, `200`, `500`, `1000`, `2000`, `5000` and `10000`. To set `2000`, `5000` or `10000`, you need to apply for a whitelist from Tencent Cloud.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Maximum concurrency of the GAAP proxy, unit is 10k. Valid value: 2, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 150, 200, 250 and 300. To set 150, 200, 250 or 300, you need to apply for a whitelist from Tencent Cloud.
	// Maximum concurrency of the GAAP proxy, unit is 10k. Valid value: `2`, `5`, `10`, `20`, `30`, `40`, `50`, `60`, `70`, `80`, `90`, `100`, `150`, `200`, `250` and `300`. To set `150`, `200`, `250` or `300`, you need to apply for a whitelist from Tencent Cloud.
	Concurrent *float64 `json:"concurrent,omitempty" tf:"concurrent,omitempty"`

	// Indicates whether GAAP proxy is enabled, default value is true.
	// Indicates whether GAAP proxy is enabled, default value is `true`.
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// Name of the GAAP proxy, the maximum length is 30.
	// Name of the GAAP proxy, the maximum length is 30.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Network type. normal: regular BGP, cn2: boutique BGP, triple: triple play.
	// Network type. `normal`: regular BGP, `cn2`: boutique BGP, `triple`: triple play.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// ID of the project within the GAAP proxy, 0 means is default project.
	// ID of the project within the GAAP proxy, `0` means is default project.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region of the GAAP realserver. Valid value: Hongkong, SoutheastAsia, Korea, Europe, NorthAmerica, Canada, WestIndia, Thailand, Virginia, Japan, Taipei, SL_AZURE_NorthUAE, SL_AZURE_EastAUS, SL_AZURE_NorthCentralUSA, SL_AZURE_SouthIndia, SL_AZURE_SouthBrazil, SL_AZURE_NorthZAF, SL_AZURE_SoutheastAsia, SL_AZURE_CentralFrance, SL_AZURE_SouthEngland, SL_AZURE_EastUS, SL_AZURE_WestUS, SL_AZURE_SouthCentralUSA, Jakarta, Beijing, Shanghai, Guangzhou, Chengdu, SL_AZURE_NorwayEast, Chongqing, Nanjing, SaoPaulo, SL_AZURE_JapanEast.
	// Region of the GAAP realserver. Valid value: `Hongkong`, `SoutheastAsia`, `Korea`, `Europe`, `NorthAmerica`, `Canada`, `WestIndia`, `Thailand`, `Virginia`, `Japan`, `Taipei`, `SL_AZURE_NorthUAE`, `SL_AZURE_EastAUS`, `SL_AZURE_NorthCentralUSA`, `SL_AZURE_SouthIndia`, `SL_AZURE_SouthBrazil`, `SL_AZURE_NorthZAF`, `SL_AZURE_SoutheastAsia`, `SL_AZURE_CentralFrance`, `SL_AZURE_SouthEngland`, `SL_AZURE_EastUS`, `SL_AZURE_WestUS`, `SL_AZURE_SouthCentralUSA`, `Jakarta`, `Beijing`, `Shanghai`, `Guangzhou`, `Chengdu`, `SL_AZURE_NorwayEast`, `Chongqing`, `Nanjing`, `SaoPaulo`, `SL_AZURE_JapanEast`.
	RealserverRegion *string `json:"realserverRegion,omitempty" tf:"realserver_region,omitempty"`

	// Tags of the GAAP proxy. Tags that do not exist are not created automatically.
	// Tags of the GAAP proxy. Tags that do not exist are not created automatically.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ProxyObservation struct {

	// Access region of the GAAP proxy. Valid value: Hongkong, SoutheastAsia, Korea, Europe, NorthAmerica, Canada, WestIndia, Thailand, Virginia, Japan, Taipei, SL_AZURE_NorthUAE, SL_AZURE_EastAUS, SL_AZURE_NorthCentralUSA, SL_AZURE_SouthIndia, SL_AZURE_SouthBrazil, SL_AZURE_NorthZAF, SL_AZURE_SoutheastAsia, SL_AZURE_CentralFrance, SL_AZURE_SouthEngland, SL_AZURE_EastUS, SL_AZURE_WestUS, SL_AZURE_SouthCentralUSA, Jakarta, Beijing, Shanghai, Guangzhou, Chengdu, SL_AZURE_NorwayEast, Chongqing, Nanjing, SaoPaulo, SL_AZURE_JapanEast, Changsha, Xian, Wuhan, Fuzhou, Shenyang, Zhengzhou, Jinan, Hangzhou, Shijiazhuang, Hefei.
	// Access region of the GAAP proxy. Valid value: `Hongkong`, `SoutheastAsia`, `Korea`, `Europe`, `NorthAmerica`, `Canada`, `WestIndia`, `Thailand`, `Virginia`, `Japan`, `Taipei`, `SL_AZURE_NorthUAE`, `SL_AZURE_EastAUS`, `SL_AZURE_NorthCentralUSA`, `SL_AZURE_SouthIndia`, `SL_AZURE_SouthBrazil`, `SL_AZURE_NorthZAF`, `SL_AZURE_SoutheastAsia`, `SL_AZURE_CentralFrance`, `SL_AZURE_SouthEngland`, `SL_AZURE_EastUS`, `SL_AZURE_WestUS`, `SL_AZURE_SouthCentralUSA`, `Jakarta`, `Beijing`, `Shanghai`, `Guangzhou`, `Chengdu`, `SL_AZURE_NorwayEast`, `Chongqing`, `Nanjing`, `SaoPaulo`, `SL_AZURE_JapanEast`, `Changsha`, `Xian`, `Wuhan`, `Fuzhou`, `Shenyang`, `Zhengzhou`, `Jinan`, `Hangzhou`, `Shijiazhuang`, `Hefei`.
	AccessRegion *string `json:"accessRegion,omitempty" tf:"access_region,omitempty"`

	// Maximum bandwidth of the GAAP proxy, unit is Mbps. Valid value: 10, 20, 50, 100, 200, 500, 1000, 2000, 5000 and 10000. To set 2000, 5000 or 10000, you need to apply for a whitelist from Tencent Cloud.
	// Maximum bandwidth of the GAAP proxy, unit is Mbps. Valid value: `10`, `20`, `50`, `100`, `200`, `500`, `1000`, `2000`, `5000` and `10000`. To set `2000`, `5000` or `10000`, you need to apply for a whitelist from Tencent Cloud.
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Maximum concurrency of the GAAP proxy, unit is 10k. Valid value: 2, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 150, 200, 250 and 300. To set 150, 200, 250 or 300, you need to apply for a whitelist from Tencent Cloud.
	// Maximum concurrency of the GAAP proxy, unit is 10k. Valid value: `2`, `5`, `10`, `20`, `30`, `40`, `50`, `60`, `70`, `80`, `90`, `100`, `150`, `200`, `250` and `300`. To set `150`, `200`, `250` or `300`, you need to apply for a whitelist from Tencent Cloud.
	Concurrent *float64 `json:"concurrent,omitempty" tf:"concurrent,omitempty"`

	// Creation time of the GAAP proxy.
	// Creation time of the GAAP proxy.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Access domain of the GAAP proxy.
	// Access domain of the GAAP proxy.
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// Indicates whether GAAP proxy is enabled, default value is true.
	// Indicates whether GAAP proxy is enabled, default value is `true`.
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// Forwarding IP of the GAAP proxy.
	// Forwarding IP of the GAAP proxy.
	ForwardIP *string `json:"forwardIp,omitempty" tf:"forward_ip,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Access IP of the GAAP proxy.
	// Access IP of the GAAP proxy.
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// Name of the GAAP proxy, the maximum length is 30.
	// Name of the GAAP proxy, the maximum length is 30.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Network type. normal: regular BGP, cn2: boutique BGP, triple: triple play.
	// Network type. `normal`: regular BGP, `cn2`: boutique BGP, `triple`: triple play.
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// ID of the project within the GAAP proxy, 0 means is default project.
	// ID of the project within the GAAP proxy, `0` means is default project.
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region of the GAAP realserver. Valid value: Hongkong, SoutheastAsia, Korea, Europe, NorthAmerica, Canada, WestIndia, Thailand, Virginia, Japan, Taipei, SL_AZURE_NorthUAE, SL_AZURE_EastAUS, SL_AZURE_NorthCentralUSA, SL_AZURE_SouthIndia, SL_AZURE_SouthBrazil, SL_AZURE_NorthZAF, SL_AZURE_SoutheastAsia, SL_AZURE_CentralFrance, SL_AZURE_SouthEngland, SL_AZURE_EastUS, SL_AZURE_WestUS, SL_AZURE_SouthCentralUSA, Jakarta, Beijing, Shanghai, Guangzhou, Chengdu, SL_AZURE_NorwayEast, Chongqing, Nanjing, SaoPaulo, SL_AZURE_JapanEast.
	// Region of the GAAP realserver. Valid value: `Hongkong`, `SoutheastAsia`, `Korea`, `Europe`, `NorthAmerica`, `Canada`, `WestIndia`, `Thailand`, `Virginia`, `Japan`, `Taipei`, `SL_AZURE_NorthUAE`, `SL_AZURE_EastAUS`, `SL_AZURE_NorthCentralUSA`, `SL_AZURE_SouthIndia`, `SL_AZURE_SouthBrazil`, `SL_AZURE_NorthZAF`, `SL_AZURE_SoutheastAsia`, `SL_AZURE_CentralFrance`, `SL_AZURE_SouthEngland`, `SL_AZURE_EastUS`, `SL_AZURE_WestUS`, `SL_AZURE_SouthCentralUSA`, `Jakarta`, `Beijing`, `Shanghai`, `Guangzhou`, `Chengdu`, `SL_AZURE_NorwayEast`, `Chongqing`, `Nanjing`, `SaoPaulo`, `SL_AZURE_JapanEast`.
	RealserverRegion *string `json:"realserverRegion,omitempty" tf:"realserver_region,omitempty"`

	// Indicates whether GAAP proxy can scalable.
	// Indicates whether GAAP proxy can scalable.
	Scalable *bool `json:"scalable,omitempty" tf:"scalable,omitempty"`

	// Status of the GAAP proxy.
	// Status of the GAAP proxy.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Supported protocols of the GAAP proxy.
	// Supported protocols of the GAAP proxy.
	SupportProtocols []*string `json:"supportProtocols,omitempty" tf:"support_protocols,omitempty"`

	// Tags of the GAAP proxy. Tags that do not exist are not created automatically.
	// Tags of the GAAP proxy. Tags that do not exist are not created automatically.
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ProxyParameters struct {

	// Access region of the GAAP proxy. Valid value: Hongkong, SoutheastAsia, Korea, Europe, NorthAmerica, Canada, WestIndia, Thailand, Virginia, Japan, Taipei, SL_AZURE_NorthUAE, SL_AZURE_EastAUS, SL_AZURE_NorthCentralUSA, SL_AZURE_SouthIndia, SL_AZURE_SouthBrazil, SL_AZURE_NorthZAF, SL_AZURE_SoutheastAsia, SL_AZURE_CentralFrance, SL_AZURE_SouthEngland, SL_AZURE_EastUS, SL_AZURE_WestUS, SL_AZURE_SouthCentralUSA, Jakarta, Beijing, Shanghai, Guangzhou, Chengdu, SL_AZURE_NorwayEast, Chongqing, Nanjing, SaoPaulo, SL_AZURE_JapanEast, Changsha, Xian, Wuhan, Fuzhou, Shenyang, Zhengzhou, Jinan, Hangzhou, Shijiazhuang, Hefei.
	// Access region of the GAAP proxy. Valid value: `Hongkong`, `SoutheastAsia`, `Korea`, `Europe`, `NorthAmerica`, `Canada`, `WestIndia`, `Thailand`, `Virginia`, `Japan`, `Taipei`, `SL_AZURE_NorthUAE`, `SL_AZURE_EastAUS`, `SL_AZURE_NorthCentralUSA`, `SL_AZURE_SouthIndia`, `SL_AZURE_SouthBrazil`, `SL_AZURE_NorthZAF`, `SL_AZURE_SoutheastAsia`, `SL_AZURE_CentralFrance`, `SL_AZURE_SouthEngland`, `SL_AZURE_EastUS`, `SL_AZURE_WestUS`, `SL_AZURE_SouthCentralUSA`, `Jakarta`, `Beijing`, `Shanghai`, `Guangzhou`, `Chengdu`, `SL_AZURE_NorwayEast`, `Chongqing`, `Nanjing`, `SaoPaulo`, `SL_AZURE_JapanEast`, `Changsha`, `Xian`, `Wuhan`, `Fuzhou`, `Shenyang`, `Zhengzhou`, `Jinan`, `Hangzhou`, `Shijiazhuang`, `Hefei`.
	// +kubebuilder:validation:Optional
	AccessRegion *string `json:"accessRegion,omitempty" tf:"access_region,omitempty"`

	// Maximum bandwidth of the GAAP proxy, unit is Mbps. Valid value: 10, 20, 50, 100, 200, 500, 1000, 2000, 5000 and 10000. To set 2000, 5000 or 10000, you need to apply for a whitelist from Tencent Cloud.
	// Maximum bandwidth of the GAAP proxy, unit is Mbps. Valid value: `10`, `20`, `50`, `100`, `200`, `500`, `1000`, `2000`, `5000` and `10000`. To set `2000`, `5000` or `10000`, you need to apply for a whitelist from Tencent Cloud.
	// +kubebuilder:validation:Optional
	Bandwidth *float64 `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`

	// Maximum concurrency of the GAAP proxy, unit is 10k. Valid value: 2, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 150, 200, 250 and 300. To set 150, 200, 250 or 300, you need to apply for a whitelist from Tencent Cloud.
	// Maximum concurrency of the GAAP proxy, unit is 10k. Valid value: `2`, `5`, `10`, `20`, `30`, `40`, `50`, `60`, `70`, `80`, `90`, `100`, `150`, `200`, `250` and `300`. To set `150`, `200`, `250` or `300`, you need to apply for a whitelist from Tencent Cloud.
	// +kubebuilder:validation:Optional
	Concurrent *float64 `json:"concurrent,omitempty" tf:"concurrent,omitempty"`

	// Indicates whether GAAP proxy is enabled, default value is true.
	// Indicates whether GAAP proxy is enabled, default value is `true`.
	// +kubebuilder:validation:Optional
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// Name of the GAAP proxy, the maximum length is 30.
	// Name of the GAAP proxy, the maximum length is 30.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Network type. normal: regular BGP, cn2: boutique BGP, triple: triple play.
	// Network type. `normal`: regular BGP, `cn2`: boutique BGP, `triple`: triple play.
	// +kubebuilder:validation:Optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type,omitempty"`

	// ID of the project within the GAAP proxy, 0 means is default project.
	// ID of the project within the GAAP proxy, `0` means is default project.
	// +kubebuilder:validation:Optional
	ProjectID *float64 `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region of the GAAP realserver. Valid value: Hongkong, SoutheastAsia, Korea, Europe, NorthAmerica, Canada, WestIndia, Thailand, Virginia, Japan, Taipei, SL_AZURE_NorthUAE, SL_AZURE_EastAUS, SL_AZURE_NorthCentralUSA, SL_AZURE_SouthIndia, SL_AZURE_SouthBrazil, SL_AZURE_NorthZAF, SL_AZURE_SoutheastAsia, SL_AZURE_CentralFrance, SL_AZURE_SouthEngland, SL_AZURE_EastUS, SL_AZURE_WestUS, SL_AZURE_SouthCentralUSA, Jakarta, Beijing, Shanghai, Guangzhou, Chengdu, SL_AZURE_NorwayEast, Chongqing, Nanjing, SaoPaulo, SL_AZURE_JapanEast.
	// Region of the GAAP realserver. Valid value: `Hongkong`, `SoutheastAsia`, `Korea`, `Europe`, `NorthAmerica`, `Canada`, `WestIndia`, `Thailand`, `Virginia`, `Japan`, `Taipei`, `SL_AZURE_NorthUAE`, `SL_AZURE_EastAUS`, `SL_AZURE_NorthCentralUSA`, `SL_AZURE_SouthIndia`, `SL_AZURE_SouthBrazil`, `SL_AZURE_NorthZAF`, `SL_AZURE_SoutheastAsia`, `SL_AZURE_CentralFrance`, `SL_AZURE_SouthEngland`, `SL_AZURE_EastUS`, `SL_AZURE_WestUS`, `SL_AZURE_SouthCentralUSA`, `Jakarta`, `Beijing`, `Shanghai`, `Guangzhou`, `Chengdu`, `SL_AZURE_NorwayEast`, `Chongqing`, `Nanjing`, `SaoPaulo`, `SL_AZURE_JapanEast`.
	// +kubebuilder:validation:Optional
	RealserverRegion *string `json:"realserverRegion,omitempty" tf:"realserver_region,omitempty"`

	// Tags of the GAAP proxy. Tags that do not exist are not created automatically.
	// Tags of the GAAP proxy. Tags that do not exist are not created automatically.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// ProxySpec defines the desired state of Proxy
type ProxySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProxyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ProxyInitParameters `json:"initProvider,omitempty"`
}

// ProxyStatus defines the observed state of Proxy.
type ProxyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProxyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Proxy is the Schema for the Proxys API. Provides a resource to create a GAAP proxy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type Proxy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accessRegion) || (has(self.initProvider) && has(self.initProvider.accessRegion))",message="spec.forProvider.accessRegion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.bandwidth) || (has(self.initProvider) && has(self.initProvider.bandwidth))",message="spec.forProvider.bandwidth is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.concurrent) || (has(self.initProvider) && has(self.initProvider.concurrent))",message="spec.forProvider.concurrent is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.realserverRegion) || (has(self.initProvider) && has(self.initProvider.realserverRegion))",message="spec.forProvider.realserverRegion is a required parameter"
	Spec   ProxySpec   `json:"spec"`
	Status ProxyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProxyList contains a list of Proxys
type ProxyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Proxy `json:"items"`
}

// Repository type metadata.
var (
	Proxy_Kind             = "Proxy"
	Proxy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Proxy_Kind}.String()
	Proxy_KindAPIVersion   = Proxy_Kind + "." + CRDGroupVersion.String()
	Proxy_GroupVersionKind = CRDGroupVersion.WithKind(Proxy_Kind)
)

func init() {
	SchemeBuilder.Register(&Proxy{}, &ProxyList{})
}
