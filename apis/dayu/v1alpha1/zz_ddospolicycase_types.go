// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DdosPolicyCaseInitParameters struct {

	// App protocol set of the DDoS policy case.
	// App protocol set of the DDoS policy case.
	AppProtocols []*string `json:"appProtocols,omitempty" tf:"app_protocols,omitempty"`

	// App type of the DDoS policy case. Valid values: WEB, GAME, APP and OTHER.
	// App type of the DDoS policy case. Valid values: `WEB`, `GAME`, `APP` and `OTHER`.
	AppType *string `json:"appType,omitempty" tf:"app_type,omitempty"`

	// Indicate whether the service involves overseas or not. Valid values: no and yes.
	// Indicate whether the service involves overseas or not. Valid values: `no` and `yes`.
	HasAbroad *string `json:"hasAbroad,omitempty" tf:"has_abroad,omitempty"`

	// Indicate whether the service actively initiates TCP requests or not. Valid values: no and yes.
	// Indicate whether the service actively initiates TCP requests or not. Valid values: `no` and `yes`.
	HasInitiateTCP *string `json:"hasInitiateTcp,omitempty" tf:"has_initiate_tcp,omitempty"`

	// Indicate whether the actively initiate UDP requests or not. Valid values: no and yes.
	// Indicate whether the actively initiate UDP requests or not. Valid values: `no` and `yes`.
	HasInitiateUDP *string `json:"hasInitiateUdp,omitempty" tf:"has_initiate_udp,omitempty"`

	// Indicate whether the service involves VPN service or not. Valid values: no and yes.
	// Indicate whether the service involves VPN service or not. Valid values: `no` and `yes`.
	HasVPN *string `json:"hasVpn,omitempty" tf:"has_vpn,omitempty"`

	// The max length of TCP message package, valid value length should be greater than 0 and less than 1500. It should be greater than min_tcp_package_len.
	// The max length of TCP message package, valid value length should be greater than 0 and less than 1500. It should be greater than `min_tcp_package_len`.
	MaxTCPPackageLen *string `json:"maxTcpPackageLen,omitempty" tf:"max_tcp_package_len,omitempty"`

	// The max length of UDP message package, valid value length should be greater than 0 and less than 1500. It should be greater than min_udp_package_len.
	// The max length of UDP message package, valid value length should be greater than 0 and less than 1500. It should be greater than `min_udp_package_len`.
	MaxUDPPackageLen *string `json:"maxUdpPackageLen,omitempty" tf:"max_udp_package_len,omitempty"`

	// The minimum length of TCP message package, valid value length should be greater than 0 and less than 1500.
	// The minimum length of TCP message package, valid value length should be greater than 0 and less than 1500.
	MinTCPPackageLen *string `json:"minTcpPackageLen,omitempty" tf:"min_tcp_package_len,omitempty"`

	// The minimum length of UDP message package, valid value length should be greater than 0 and less than 1500.
	// The minimum length of UDP message package, valid value length should be greater than 0 and less than 1500.
	MinUDPPackageLen *string `json:"minUdpPackageLen,omitempty" tf:"min_udp_package_len,omitempty"`

	// Name of the DDoS policy case. Length should between 1 and 64.
	// Name of the DDoS policy case. Length should between 1 and 64.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port that actively initiates TCP requests. Valid value ranges: (1~65535).
	// The port that actively initiates TCP requests. Valid value ranges: (1~65535).
	PeerTCPPort *string `json:"peerTcpPort,omitempty" tf:"peer_tcp_port,omitempty"`

	// The port that actively initiates UDP requests. Valid value ranges: (1~65535).
	// The port that actively initiates UDP requests. Valid value ranges: (1~65535).
	PeerUDPPort *string `json:"peerUdpPort,omitempty" tf:"peer_udp_port,omitempty"`

	// Platform set of the DDoS policy case.
	// Platform set of the DDoS policy case.
	PlatformTypes []*string `json:"platformTypes,omitempty" tf:"platform_types,omitempty"`

	// Type of the resource that the DDoS policy case works for. Valid values: bgpip, bgp and bgp-multip.
	// Type of the resource that the DDoS policy case works for. Valid values: `bgpip`, `bgp` and `bgp-multip`.
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// End port of the TCP service. Valid value ranges: (0~65535). It must be greater than tcp_start_port.
	// End port of the TCP service. Valid value ranges: (0~65535). It must be greater than `tcp_start_port`.
	TCPEndPort *string `json:"tcpEndPort,omitempty" tf:"tcp_end_port,omitempty"`

	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	TCPFootprint *string `json:"tcpFootprint,omitempty" tf:"tcp_footprint,omitempty"`

	// Start port of the TCP service. Valid value ranges: (0~65535).
	// Start port of the TCP service. Valid value ranges: (0~65535).
	TCPStartPort *string `json:"tcpStartPort,omitempty" tf:"tcp_start_port,omitempty"`

	// End port of the UDP service. Valid value ranges: (0~65535). It must be greater than udp_start_port.
	// End port of the UDP service. Valid value ranges: (0~65535). It must be greater than `udp_start_port`.
	UDPEndPort *string `json:"udpEndPort,omitempty" tf:"udp_end_port,omitempty"`

	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	UDPFootprint *string `json:"udpFootprint,omitempty" tf:"udp_footprint,omitempty"`

	// Start port of the UDP service. Valid value ranges: (0~65535).
	// Start port of the UDP service. Valid value ranges: (0~65535).
	UDPStartPort *string `json:"udpStartPort,omitempty" tf:"udp_start_port,omitempty"`

	// Web API url set.
	// Web API url set.
	WebAPIUrls []*string `json:"webApiUrls,omitempty" tf:"web_api_urls,omitempty"`
}

type DdosPolicyCaseObservation struct {

	// App protocol set of the DDoS policy case.
	// App protocol set of the DDoS policy case.
	AppProtocols []*string `json:"appProtocols,omitempty" tf:"app_protocols,omitempty"`

	// App type of the DDoS policy case. Valid values: WEB, GAME, APP and OTHER.
	// App type of the DDoS policy case. Valid values: `WEB`, `GAME`, `APP` and `OTHER`.
	AppType *string `json:"appType,omitempty" tf:"app_type,omitempty"`

	// Create time of the DDoS policy case.
	// Create time of the DDoS policy case.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Indicate whether the service involves overseas or not. Valid values: no and yes.
	// Indicate whether the service involves overseas or not. Valid values: `no` and `yes`.
	HasAbroad *string `json:"hasAbroad,omitempty" tf:"has_abroad,omitempty"`

	// Indicate whether the service actively initiates TCP requests or not. Valid values: no and yes.
	// Indicate whether the service actively initiates TCP requests or not. Valid values: `no` and `yes`.
	HasInitiateTCP *string `json:"hasInitiateTcp,omitempty" tf:"has_initiate_tcp,omitempty"`

	// Indicate whether the actively initiate UDP requests or not. Valid values: no and yes.
	// Indicate whether the actively initiate UDP requests or not. Valid values: `no` and `yes`.
	HasInitiateUDP *string `json:"hasInitiateUdp,omitempty" tf:"has_initiate_udp,omitempty"`

	// Indicate whether the service involves VPN service or not. Valid values: no and yes.
	// Indicate whether the service involves VPN service or not. Valid values: `no` and `yes`.
	HasVPN *string `json:"hasVpn,omitempty" tf:"has_vpn,omitempty"`

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The max length of TCP message package, valid value length should be greater than 0 and less than 1500. It should be greater than min_tcp_package_len.
	// The max length of TCP message package, valid value length should be greater than 0 and less than 1500. It should be greater than `min_tcp_package_len`.
	MaxTCPPackageLen *string `json:"maxTcpPackageLen,omitempty" tf:"max_tcp_package_len,omitempty"`

	// The max length of UDP message package, valid value length should be greater than 0 and less than 1500. It should be greater than min_udp_package_len.
	// The max length of UDP message package, valid value length should be greater than 0 and less than 1500. It should be greater than `min_udp_package_len`.
	MaxUDPPackageLen *string `json:"maxUdpPackageLen,omitempty" tf:"max_udp_package_len,omitempty"`

	// The minimum length of TCP message package, valid value length should be greater than 0 and less than 1500.
	// The minimum length of TCP message package, valid value length should be greater than 0 and less than 1500.
	MinTCPPackageLen *string `json:"minTcpPackageLen,omitempty" tf:"min_tcp_package_len,omitempty"`

	// The minimum length of UDP message package, valid value length should be greater than 0 and less than 1500.
	// The minimum length of UDP message package, valid value length should be greater than 0 and less than 1500.
	MinUDPPackageLen *string `json:"minUdpPackageLen,omitempty" tf:"min_udp_package_len,omitempty"`

	// Name of the DDoS policy case. Length should between 1 and 64.
	// Name of the DDoS policy case. Length should between 1 and 64.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port that actively initiates TCP requests. Valid value ranges: (1~65535).
	// The port that actively initiates TCP requests. Valid value ranges: (1~65535).
	PeerTCPPort *string `json:"peerTcpPort,omitempty" tf:"peer_tcp_port,omitempty"`

	// The port that actively initiates UDP requests. Valid value ranges: (1~65535).
	// The port that actively initiates UDP requests. Valid value ranges: (1~65535).
	PeerUDPPort *string `json:"peerUdpPort,omitempty" tf:"peer_udp_port,omitempty"`

	// Platform set of the DDoS policy case.
	// Platform set of the DDoS policy case.
	PlatformTypes []*string `json:"platformTypes,omitempty" tf:"platform_types,omitempty"`

	// Type of the resource that the DDoS policy case works for. Valid values: bgpip, bgp and bgp-multip.
	// Type of the resource that the DDoS policy case works for. Valid values: `bgpip`, `bgp` and `bgp-multip`.
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// ID of the DDoS policy case.
	// ID of the DDoS policy case.
	SceneID *string `json:"sceneId,omitempty" tf:"scene_id,omitempty"`

	// End port of the TCP service. Valid value ranges: (0~65535). It must be greater than tcp_start_port.
	// End port of the TCP service. Valid value ranges: (0~65535). It must be greater than `tcp_start_port`.
	TCPEndPort *string `json:"tcpEndPort,omitempty" tf:"tcp_end_port,omitempty"`

	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	TCPFootprint *string `json:"tcpFootprint,omitempty" tf:"tcp_footprint,omitempty"`

	// Start port of the TCP service. Valid value ranges: (0~65535).
	// Start port of the TCP service. Valid value ranges: (0~65535).
	TCPStartPort *string `json:"tcpStartPort,omitempty" tf:"tcp_start_port,omitempty"`

	// End port of the UDP service. Valid value ranges: (0~65535). It must be greater than udp_start_port.
	// End port of the UDP service. Valid value ranges: (0~65535). It must be greater than `udp_start_port`.
	UDPEndPort *string `json:"udpEndPort,omitempty" tf:"udp_end_port,omitempty"`

	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	UDPFootprint *string `json:"udpFootprint,omitempty" tf:"udp_footprint,omitempty"`

	// Start port of the UDP service. Valid value ranges: (0~65535).
	// Start port of the UDP service. Valid value ranges: (0~65535).
	UDPStartPort *string `json:"udpStartPort,omitempty" tf:"udp_start_port,omitempty"`

	// Web API url set.
	// Web API url set.
	WebAPIUrls []*string `json:"webApiUrls,omitempty" tf:"web_api_urls,omitempty"`
}

type DdosPolicyCaseParameters struct {

	// App protocol set of the DDoS policy case.
	// App protocol set of the DDoS policy case.
	// +kubebuilder:validation:Optional
	AppProtocols []*string `json:"appProtocols,omitempty" tf:"app_protocols,omitempty"`

	// App type of the DDoS policy case. Valid values: WEB, GAME, APP and OTHER.
	// App type of the DDoS policy case. Valid values: `WEB`, `GAME`, `APP` and `OTHER`.
	// +kubebuilder:validation:Optional
	AppType *string `json:"appType,omitempty" tf:"app_type,omitempty"`

	// Indicate whether the service involves overseas or not. Valid values: no and yes.
	// Indicate whether the service involves overseas or not. Valid values: `no` and `yes`.
	// +kubebuilder:validation:Optional
	HasAbroad *string `json:"hasAbroad,omitempty" tf:"has_abroad,omitempty"`

	// Indicate whether the service actively initiates TCP requests or not. Valid values: no and yes.
	// Indicate whether the service actively initiates TCP requests or not. Valid values: `no` and `yes`.
	// +kubebuilder:validation:Optional
	HasInitiateTCP *string `json:"hasInitiateTcp,omitempty" tf:"has_initiate_tcp,omitempty"`

	// Indicate whether the actively initiate UDP requests or not. Valid values: no and yes.
	// Indicate whether the actively initiate UDP requests or not. Valid values: `no` and `yes`.
	// +kubebuilder:validation:Optional
	HasInitiateUDP *string `json:"hasInitiateUdp,omitempty" tf:"has_initiate_udp,omitempty"`

	// Indicate whether the service involves VPN service or not. Valid values: no and yes.
	// Indicate whether the service involves VPN service or not. Valid values: `no` and `yes`.
	// +kubebuilder:validation:Optional
	HasVPN *string `json:"hasVpn,omitempty" tf:"has_vpn,omitempty"`

	// The max length of TCP message package, valid value length should be greater than 0 and less than 1500. It should be greater than min_tcp_package_len.
	// The max length of TCP message package, valid value length should be greater than 0 and less than 1500. It should be greater than `min_tcp_package_len`.
	// +kubebuilder:validation:Optional
	MaxTCPPackageLen *string `json:"maxTcpPackageLen,omitempty" tf:"max_tcp_package_len,omitempty"`

	// The max length of UDP message package, valid value length should be greater than 0 and less than 1500. It should be greater than min_udp_package_len.
	// The max length of UDP message package, valid value length should be greater than 0 and less than 1500. It should be greater than `min_udp_package_len`.
	// +kubebuilder:validation:Optional
	MaxUDPPackageLen *string `json:"maxUdpPackageLen,omitempty" tf:"max_udp_package_len,omitempty"`

	// The minimum length of TCP message package, valid value length should be greater than 0 and less than 1500.
	// The minimum length of TCP message package, valid value length should be greater than 0 and less than 1500.
	// +kubebuilder:validation:Optional
	MinTCPPackageLen *string `json:"minTcpPackageLen,omitempty" tf:"min_tcp_package_len,omitempty"`

	// The minimum length of UDP message package, valid value length should be greater than 0 and less than 1500.
	// The minimum length of UDP message package, valid value length should be greater than 0 and less than 1500.
	// +kubebuilder:validation:Optional
	MinUDPPackageLen *string `json:"minUdpPackageLen,omitempty" tf:"min_udp_package_len,omitempty"`

	// Name of the DDoS policy case. Length should between 1 and 64.
	// Name of the DDoS policy case. Length should between 1 and 64.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The port that actively initiates TCP requests. Valid value ranges: (1~65535).
	// The port that actively initiates TCP requests. Valid value ranges: (1~65535).
	// +kubebuilder:validation:Optional
	PeerTCPPort *string `json:"peerTcpPort,omitempty" tf:"peer_tcp_port,omitempty"`

	// The port that actively initiates UDP requests. Valid value ranges: (1~65535).
	// The port that actively initiates UDP requests. Valid value ranges: (1~65535).
	// +kubebuilder:validation:Optional
	PeerUDPPort *string `json:"peerUdpPort,omitempty" tf:"peer_udp_port,omitempty"`

	// Platform set of the DDoS policy case.
	// Platform set of the DDoS policy case.
	// +kubebuilder:validation:Optional
	PlatformTypes []*string `json:"platformTypes,omitempty" tf:"platform_types,omitempty"`

	// Type of the resource that the DDoS policy case works for. Valid values: bgpip, bgp and bgp-multip.
	// Type of the resource that the DDoS policy case works for. Valid values: `bgpip`, `bgp` and `bgp-multip`.
	// +kubebuilder:validation:Optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// End port of the TCP service. Valid value ranges: (0~65535). It must be greater than tcp_start_port.
	// End port of the TCP service. Valid value ranges: (0~65535). It must be greater than `tcp_start_port`.
	// +kubebuilder:validation:Optional
	TCPEndPort *string `json:"tcpEndPort,omitempty" tf:"tcp_end_port,omitempty"`

	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// +kubebuilder:validation:Optional
	TCPFootprint *string `json:"tcpFootprint,omitempty" tf:"tcp_footprint,omitempty"`

	// Start port of the TCP service. Valid value ranges: (0~65535).
	// Start port of the TCP service. Valid value ranges: (0~65535).
	// +kubebuilder:validation:Optional
	TCPStartPort *string `json:"tcpStartPort,omitempty" tf:"tcp_start_port,omitempty"`

	// End port of the UDP service. Valid value ranges: (0~65535). It must be greater than udp_start_port.
	// End port of the UDP service. Valid value ranges: (0~65535). It must be greater than `udp_start_port`.
	// +kubebuilder:validation:Optional
	UDPEndPort *string `json:"udpEndPort,omitempty" tf:"udp_end_port,omitempty"`

	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// The fixed signature of TCP protocol load, valid value length is range from 1 to 512.
	// +kubebuilder:validation:Optional
	UDPFootprint *string `json:"udpFootprint,omitempty" tf:"udp_footprint,omitempty"`

	// Start port of the UDP service. Valid value ranges: (0~65535).
	// Start port of the UDP service. Valid value ranges: (0~65535).
	// +kubebuilder:validation:Optional
	UDPStartPort *string `json:"udpStartPort,omitempty" tf:"udp_start_port,omitempty"`

	// Web API url set.
	// Web API url set.
	// +kubebuilder:validation:Optional
	WebAPIUrls []*string `json:"webApiUrls,omitempty" tf:"web_api_urls,omitempty"`
}

// DdosPolicyCaseSpec defines the desired state of DdosPolicyCase
type DdosPolicyCaseSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DdosPolicyCaseParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DdosPolicyCaseInitParameters `json:"initProvider,omitempty"`
}

// DdosPolicyCaseStatus defines the observed state of DdosPolicyCase.
type DdosPolicyCaseStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DdosPolicyCaseObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DdosPolicyCase is the Schema for the DdosPolicyCases API. Use this resource to create dayu DDoS policy case
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type DdosPolicyCase struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.appProtocols) || (has(self.initProvider) && has(self.initProvider.appProtocols))",message="spec.forProvider.appProtocols is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.appType) || (has(self.initProvider) && has(self.initProvider.appType))",message="spec.forProvider.appType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hasAbroad) || (has(self.initProvider) && has(self.initProvider.hasAbroad))",message="spec.forProvider.hasAbroad is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hasInitiateTcp) || (has(self.initProvider) && has(self.initProvider.hasInitiateTcp))",message="spec.forProvider.hasInitiateTcp is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.platformTypes) || (has(self.initProvider) && has(self.initProvider.platformTypes))",message="spec.forProvider.platformTypes is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourceType) || (has(self.initProvider) && has(self.initProvider.resourceType))",message="spec.forProvider.resourceType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tcpEndPort) || (has(self.initProvider) && has(self.initProvider.tcpEndPort))",message="spec.forProvider.tcpEndPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tcpStartPort) || (has(self.initProvider) && has(self.initProvider.tcpStartPort))",message="spec.forProvider.tcpStartPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.udpEndPort) || (has(self.initProvider) && has(self.initProvider.udpEndPort))",message="spec.forProvider.udpEndPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.udpStartPort) || (has(self.initProvider) && has(self.initProvider.udpStartPort))",message="spec.forProvider.udpStartPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.webApiUrls) || (has(self.initProvider) && has(self.initProvider.webApiUrls))",message="spec.forProvider.webApiUrls is a required parameter"
	Spec   DdosPolicyCaseSpec   `json:"spec"`
	Status DdosPolicyCaseStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DdosPolicyCaseList contains a list of DdosPolicyCases
type DdosPolicyCaseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DdosPolicyCase `json:"items"`
}

// Repository type metadata.
var (
	DdosPolicyCase_Kind             = "DdosPolicyCase"
	DdosPolicyCase_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DdosPolicyCase_Kind}.String()
	DdosPolicyCase_KindAPIVersion   = DdosPolicyCase_Kind + "." + CRDGroupVersion.String()
	DdosPolicyCase_GroupVersionKind = CRDGroupVersion.WithKind(DdosPolicyCase_Kind)
)

func init() {
	SchemeBuilder.Register(&DdosPolicyCase{}, &DdosPolicyCaseList{})
}
