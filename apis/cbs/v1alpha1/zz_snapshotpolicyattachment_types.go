// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SnapshotPolicyAttachmentInitParameters struct {
}

type SnapshotPolicyAttachmentObservation struct {

	// ID of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// ID of CBS snapshot policy.
	// ID of CBS snapshot policy.
	SnapshotPolicyID *string `json:"snapshotPolicyId,omitempty" tf:"snapshot_policy_id,omitempty"`

	// ID of CBS.
	// ID of CBS.
	StorageID *string `json:"storageId,omitempty" tf:"storage_id,omitempty"`
}

type SnapshotPolicyAttachmentParameters struct {

	// ID of CBS snapshot policy.
	// ID of CBS snapshot policy.
	// +crossplane:generate:reference:type=SnapshotPolicy
	// +kubebuilder:validation:Optional
	SnapshotPolicyID *string `json:"snapshotPolicyId,omitempty" tf:"snapshot_policy_id,omitempty"`

	// Reference to a SnapshotPolicy to populate snapshotPolicyId.
	// +kubebuilder:validation:Optional
	SnapshotPolicyIDRef *v1.Reference `json:"snapshotPolicyIdRef,omitempty" tf:"-"`

	// Selector for a SnapshotPolicy to populate snapshotPolicyId.
	// +kubebuilder:validation:Optional
	SnapshotPolicyIDSelector *v1.Selector `json:"snapshotPolicyIdSelector,omitempty" tf:"-"`

	// ID of CBS.
	// ID of CBS.
	// +crossplane:generate:reference:type=Storage
	// +kubebuilder:validation:Optional
	StorageID *string `json:"storageId,omitempty" tf:"storage_id,omitempty"`

	// Reference to a Storage to populate storageId.
	// +kubebuilder:validation:Optional
	StorageIDRef *v1.Reference `json:"storageIdRef,omitempty" tf:"-"`

	// Selector for a Storage to populate storageId.
	// +kubebuilder:validation:Optional
	StorageIDSelector *v1.Selector `json:"storageIdSelector,omitempty" tf:"-"`
}

// SnapshotPolicyAttachmentSpec defines the desired state of SnapshotPolicyAttachment
type SnapshotPolicyAttachmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SnapshotPolicyAttachmentParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SnapshotPolicyAttachmentInitParameters `json:"initProvider,omitempty"`
}

// SnapshotPolicyAttachmentStatus defines the observed state of SnapshotPolicyAttachment.
type SnapshotPolicyAttachmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SnapshotPolicyAttachmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SnapshotPolicyAttachment is the Schema for the SnapshotPolicyAttachments API. Provides a CBS snapshot policy attachment resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,tencentcloud}
type SnapshotPolicyAttachment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SnapshotPolicyAttachmentSpec   `json:"spec"`
	Status            SnapshotPolicyAttachmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SnapshotPolicyAttachmentList contains a list of SnapshotPolicyAttachments
type SnapshotPolicyAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SnapshotPolicyAttachment `json:"items"`
}

// Repository type metadata.
var (
	SnapshotPolicyAttachment_Kind             = "SnapshotPolicyAttachment"
	SnapshotPolicyAttachment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SnapshotPolicyAttachment_Kind}.String()
	SnapshotPolicyAttachment_KindAPIVersion   = SnapshotPolicyAttachment_Kind + "." + CRDGroupVersion.String()
	SnapshotPolicyAttachment_GroupVersionKind = CRDGroupVersion.WithKind(SnapshotPolicyAttachment_Kind)
)

func init() {
	SchemeBuilder.Register(&SnapshotPolicyAttachment{}, &SnapshotPolicyAttachmentList{})
}
