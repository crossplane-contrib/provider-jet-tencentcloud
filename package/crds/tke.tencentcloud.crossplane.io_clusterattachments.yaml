---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clusterattachments.tke.tencentcloud.crossplane.io
spec:
  group: tke.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloud
    kind: ClusterAttachment
    listKind: ClusterAttachmentList
    plural: clusterattachments
    singular: clusterattachment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterAttachment is the Schema for the ClusterAttachments API.
          Provide a resource to attach an existing  cvm to kubernetes cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAttachmentSpec defines the desired state of ClusterAttachment
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  clusterId:
                    description: ID of the cluster. ID of the cluster.
                    type: string
                  clusterIdRef:
                    description: Reference to a Cluster to populate clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a Cluster to populate clusterId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  hostname:
                    description: 'The host name of the attached instance. Dot (.)
                      and dash (-) cannot be used as the first and last characters
                      of HostName and cannot be used consecutively. Windows example:
                      The length of the name character is [2, 15], letters (capitalization
                      is not restricted), numbers and dashes (-) are allowed, dots
                      (.) are not supported, and not all numbers are allowed. Examples
                      of other types (Linux, etc.): The character length is [2, 60],
                      and multiple dots are allowed. There is a segment between the
                      dots. Each segment allows letters (with no limitation on capitalization),
                      numbers and dashes (-). The host name of the attached instance.
                      Dot (.) and dash (-) cannot be used as the first and last characters
                      of HostName and cannot be used consecutively. Windows example:
                      The length of the name character is [2, 15], letters (capitalization
                      is not restricted), numbers and dashes (-) are allowed, dots
                      (.) are not supported, and not all numbers are allowed. Examples
                      of other types (Linux, etc.): The character length is [2, 60],
                      and multiple dots are allowed. There is a segment between the
                      dots. Each segment allows letters (with no limitation on capitalization),
                      numbers and dashes (-).'
                    type: string
                  instanceId:
                    description: ID of the CVM instance, this cvm will reinstall the
                      system. ID of the CVM instance, this cvm will reinstall the
                      system.
                    type: string
                  instanceIdRef:
                    description: Reference to a Instance in cvm to populate instanceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  instanceIdSelector:
                    description: Selector for a Instance in cvm to populate instanceId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  keyIds:
                    description: The key pair to use for the instance, it looks like
                      skey-16jig7tx, it should be set if password not set. The key
                      pair to use for the instance, it looks like skey-16jig7tx, it
                      should be set if `password` not set.
                    items:
                      type: string
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels of tke attachment exits CVM. Labels of tke
                      attachment exits CVM.
                    type: object
                  passwordSecretRef:
                    description: Password to access, should be set if key_ids not
                      set. Password to access, should be set if `key_ids` not set.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  unschedulable:
                    description: Sets whether the joining node participates in the
                      schedule. Default is '0'. Participate in scheduling. Sets whether
                      the joining node participates in the schedule. Default is '0'.
                      Participate in scheduling.
                    type: number
                  workerConfig:
                    description: Deploy the machine configuration information of the
                      'WORKER', commonly used to attach existing instances. Deploy
                      the machine configuration information of the 'WORKER', commonly
                      used to attach existing instances.
                    items:
                      properties:
                        dataDisk:
                          description: Configurations of data disk. Configurations
                            of data disk.
                          items:
                            properties:
                              autoFormatAndMount:
                                description: Indicate whether to auto format and mount
                                  or not. Default is false. Indicate whether to auto
                                  format and mount or not. Default is `false`.
                                type: boolean
                              diskPartition:
                                description: 'The name of the device or partition
                                  to mount. NOTE: this argument doesn''t support setting
                                  in node pool, or will leads to mount error. The
                                  name of the device or partition to mount. NOTE:
                                  this argument doesn''t support setting in node pool,
                                  or will leads to mount error.'
                                type: string
                              diskSize:
                                description: Volume of disk in GB. Default is 0. Volume
                                  of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk. Valid value: LOCAL_BASIC,
                                  LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD,
                                  CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD. Types of
                                  disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`,
                                  `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`
                                  and `CLOUD_BSSD`.'
                                type: string
                              fileSystem:
                                description: File system, e.g. ext3/ext4/xfs. File
                                  system, e.g. `ext3/ext4/xfs`.
                                type: string
                              mountTarget:
                                description: Mount target. Mount target.
                                type: string
                            type: object
                          type: array
                        desiredPodNum:
                          description: Indicate to set desired pod number in node.
                            valid when the cluster is podCIDR. Indicate to set desired
                            pod number in node. valid when the cluster is podCIDR.
                          type: number
                        dockerGraphPath:
                          description: Docker graph path. Default is /var/lib/docker.
                            Docker graph path. Default is `/var/lib/docker`.
                          type: string
                        extraArgs:
                          description: Custom parameter information related to the
                            node. This is a white-list parameter. Custom parameter
                            information related to the node. This is a white-list
                            parameter.
                          items:
                            type: string
                          type: array
                        gpuArgs:
                          description: GPU driver parameters. GPU driver parameters.
                          items:
                            properties:
                              cuda:
                                additionalProperties:
                                  type: string
                                description: 'CUDA  version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  CUDA  version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              cudnn:
                                additionalProperties:
                                  type: string
                                description: 'cuDNN version. Format like: { version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }. version: cuDNN version; name: cuDNN name;
                                  doc_name: Doc name of cuDNN; dev_name: Dev name
                                  of cuDNN. cuDNN version. Format like: `{ version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }`. `version`: cuDNN version; `name`: cuDNN
                                  name; `doc_name`: Doc name of cuDNN; `dev_name`:
                                  Dev name of cuDNN.'
                                type: object
                              customDriver:
                                additionalProperties:
                                  type: string
                                description: 'Custom GPU driver. Format like: {address:
                                  String}. address: URL of custom GPU driver address.
                                  Custom GPU driver. Format like: `{address: String}`.
                                  `address`: URL of custom GPU driver address.'
                                type: object
                              driver:
                                additionalProperties:
                                  type: string
                                description: 'GPU driver version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  GPU driver version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              migEnable:
                                description: Whether to enable MIG. Whether to enable
                                  MIG.
                                type: boolean
                            type: object
                          type: array
                        isSchedule:
                          description: Indicate to schedule the adding node or not.
                            Default is true. Indicate to schedule the adding node
                            or not. Default is true.
                          type: boolean
                        mountTarget:
                          description: Mount target. Mount target. Default is not
                            mounting.
                          type: string
                        preStartUserScript:
                          description: Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes. Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes.
                          type: string
                        userData:
                          description: Base64-encoded User Data text, the length limit
                            is 16KB. Base64-encoded User Data text, the length limit
                            is 16KB.
                          type: string
                      type: object
                    type: array
                  workerConfigOverrides:
                    description: Override variable worker_config, commonly used to
                      attach existing instances. Override variable worker_config,
                      commonly used to attach existing instances.
                    items:
                      properties:
                        dataDisk:
                          description: Configurations of data disk. Configurations
                            of data disk.
                          items:
                            properties:
                              autoFormatAndMount:
                                description: Indicate whether to auto format and mount
                                  or not. Default is false. Indicate whether to auto
                                  format and mount or not. Default is `false`.
                                type: boolean
                              diskPartition:
                                description: 'The name of the device or partition
                                  to mount. NOTE: this argument doesn''t support setting
                                  in node pool, or will leads to mount error. The
                                  name of the device or partition to mount. NOTE:
                                  this argument doesn''t support setting in node pool,
                                  or will leads to mount error.'
                                type: string
                              diskSize:
                                description: Volume of disk in GB. Default is 0. Volume
                                  of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk. Valid value: LOCAL_BASIC,
                                  LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD,
                                  CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD. Types of
                                  disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`,
                                  `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`
                                  and `CLOUD_BSSD`.'
                                type: string
                              fileSystem:
                                description: File system, e.g. ext3/ext4/xfs. File
                                  system, e.g. `ext3/ext4/xfs`.
                                type: string
                              mountTarget:
                                description: Mount target. Mount target.
                                type: string
                            type: object
                          type: array
                        desiredPodNum:
                          description: Indicate to set desired pod number in node.
                            valid when the cluster is podCIDR. Indicate to set desired
                            pod number in node. valid when the cluster is podCIDR.
                          type: number
                        dockerGraphPath:
                          description: Docker graph path. Default is /var/lib/docker.
                            Docker graph path. Default is `/var/lib/docker`.
                          type: string
                        extraArgs:
                          description: Custom parameter information related to the
                            node. This is a white-list parameter. Custom parameter
                            information related to the node. This is a white-list
                            parameter.
                          items:
                            type: string
                          type: array
                        gpuArgs:
                          description: GPU driver parameters. GPU driver parameters.
                          items:
                            properties:
                              cuda:
                                additionalProperties:
                                  type: string
                                description: 'CUDA  version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  CUDA  version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              cudnn:
                                additionalProperties:
                                  type: string
                                description: 'cuDNN version. Format like: { version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }. version: cuDNN version; name: cuDNN name;
                                  doc_name: Doc name of cuDNN; dev_name: Dev name
                                  of cuDNN. cuDNN version. Format like: `{ version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }`. `version`: cuDNN version; `name`: cuDNN
                                  name; `doc_name`: Doc name of cuDNN; `dev_name`:
                                  Dev name of cuDNN.'
                                type: object
                              customDriver:
                                additionalProperties:
                                  type: string
                                description: 'Custom GPU driver. Format like: {address:
                                  String}. address: URL of custom GPU driver address.
                                  Custom GPU driver. Format like: `{address: String}`.
                                  `address`: URL of custom GPU driver address.'
                                type: object
                              driver:
                                additionalProperties:
                                  type: string
                                description: 'GPU driver version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  GPU driver version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              migEnable:
                                description: Whether to enable MIG. Whether to enable
                                  MIG.
                                type: boolean
                            type: object
                          type: array
                        isSchedule:
                          description: Indicate to schedule the adding node or not.
                            Default is true. Indicate to schedule the adding node
                            or not. Default is true.
                          type: boolean
                        mountTarget:
                          description: Mount target. Mount target. Default is not
                            mounting.
                          type: string
                        preStartUserScript:
                          description: Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes. Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes.
                          type: string
                        userData:
                          description: Base64-encoded User Data text, the length limit
                            is 16KB. Base64-encoded User Data text, the length limit
                            is 16KB.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  hostname:
                    description: 'The host name of the attached instance. Dot (.)
                      and dash (-) cannot be used as the first and last characters
                      of HostName and cannot be used consecutively. Windows example:
                      The length of the name character is [2, 15], letters (capitalization
                      is not restricted), numbers and dashes (-) are allowed, dots
                      (.) are not supported, and not all numbers are allowed. Examples
                      of other types (Linux, etc.): The character length is [2, 60],
                      and multiple dots are allowed. There is a segment between the
                      dots. Each segment allows letters (with no limitation on capitalization),
                      numbers and dashes (-). The host name of the attached instance.
                      Dot (.) and dash (-) cannot be used as the first and last characters
                      of HostName and cannot be used consecutively. Windows example:
                      The length of the name character is [2, 15], letters (capitalization
                      is not restricted), numbers and dashes (-) are allowed, dots
                      (.) are not supported, and not all numbers are allowed. Examples
                      of other types (Linux, etc.): The character length is [2, 60],
                      and multiple dots are allowed. There is a segment between the
                      dots. Each segment allows letters (with no limitation on capitalization),
                      numbers and dashes (-).'
                    type: string
                  keyIds:
                    description: The key pair to use for the instance, it looks like
                      skey-16jig7tx, it should be set if password not set. The key
                      pair to use for the instance, it looks like skey-16jig7tx, it
                      should be set if `password` not set.
                    items:
                      type: string
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels of tke attachment exits CVM. Labels of tke
                      attachment exits CVM.
                    type: object
                  unschedulable:
                    description: Sets whether the joining node participates in the
                      schedule. Default is '0'. Participate in scheduling. Sets whether
                      the joining node participates in the schedule. Default is '0'.
                      Participate in scheduling.
                    type: number
                  workerConfig:
                    description: Deploy the machine configuration information of the
                      'WORKER', commonly used to attach existing instances. Deploy
                      the machine configuration information of the 'WORKER', commonly
                      used to attach existing instances.
                    items:
                      properties:
                        dataDisk:
                          description: Configurations of data disk. Configurations
                            of data disk.
                          items:
                            properties:
                              autoFormatAndMount:
                                description: Indicate whether to auto format and mount
                                  or not. Default is false. Indicate whether to auto
                                  format and mount or not. Default is `false`.
                                type: boolean
                              diskPartition:
                                description: 'The name of the device or partition
                                  to mount. NOTE: this argument doesn''t support setting
                                  in node pool, or will leads to mount error. The
                                  name of the device or partition to mount. NOTE:
                                  this argument doesn''t support setting in node pool,
                                  or will leads to mount error.'
                                type: string
                              diskSize:
                                description: Volume of disk in GB. Default is 0. Volume
                                  of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk. Valid value: LOCAL_BASIC,
                                  LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD,
                                  CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD. Types of
                                  disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`,
                                  `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`
                                  and `CLOUD_BSSD`.'
                                type: string
                              fileSystem:
                                description: File system, e.g. ext3/ext4/xfs. File
                                  system, e.g. `ext3/ext4/xfs`.
                                type: string
                              mountTarget:
                                description: Mount target. Mount target.
                                type: string
                            type: object
                          type: array
                        desiredPodNum:
                          description: Indicate to set desired pod number in node.
                            valid when the cluster is podCIDR. Indicate to set desired
                            pod number in node. valid when the cluster is podCIDR.
                          type: number
                        dockerGraphPath:
                          description: Docker graph path. Default is /var/lib/docker.
                            Docker graph path. Default is `/var/lib/docker`.
                          type: string
                        extraArgs:
                          description: Custom parameter information related to the
                            node. This is a white-list parameter. Custom parameter
                            information related to the node. This is a white-list
                            parameter.
                          items:
                            type: string
                          type: array
                        gpuArgs:
                          description: GPU driver parameters. GPU driver parameters.
                          items:
                            properties:
                              cuda:
                                additionalProperties:
                                  type: string
                                description: 'CUDA  version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  CUDA  version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              cudnn:
                                additionalProperties:
                                  type: string
                                description: 'cuDNN version. Format like: { version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }. version: cuDNN version; name: cuDNN name;
                                  doc_name: Doc name of cuDNN; dev_name: Dev name
                                  of cuDNN. cuDNN version. Format like: `{ version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }`. `version`: cuDNN version; `name`: cuDNN
                                  name; `doc_name`: Doc name of cuDNN; `dev_name`:
                                  Dev name of cuDNN.'
                                type: object
                              customDriver:
                                additionalProperties:
                                  type: string
                                description: 'Custom GPU driver. Format like: {address:
                                  String}. address: URL of custom GPU driver address.
                                  Custom GPU driver. Format like: `{address: String}`.
                                  `address`: URL of custom GPU driver address.'
                                type: object
                              driver:
                                additionalProperties:
                                  type: string
                                description: 'GPU driver version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  GPU driver version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              migEnable:
                                description: Whether to enable MIG. Whether to enable
                                  MIG.
                                type: boolean
                            type: object
                          type: array
                        isSchedule:
                          description: Indicate to schedule the adding node or not.
                            Default is true. Indicate to schedule the adding node
                            or not. Default is true.
                          type: boolean
                        mountTarget:
                          description: Mount target. Mount target. Default is not
                            mounting.
                          type: string
                        preStartUserScript:
                          description: Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes. Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes.
                          type: string
                        userData:
                          description: Base64-encoded User Data text, the length limit
                            is 16KB. Base64-encoded User Data text, the length limit
                            is 16KB.
                          type: string
                      type: object
                    type: array
                  workerConfigOverrides:
                    description: Override variable worker_config, commonly used to
                      attach existing instances. Override variable worker_config,
                      commonly used to attach existing instances.
                    items:
                      properties:
                        dataDisk:
                          description: Configurations of data disk. Configurations
                            of data disk.
                          items:
                            properties:
                              autoFormatAndMount:
                                description: Indicate whether to auto format and mount
                                  or not. Default is false. Indicate whether to auto
                                  format and mount or not. Default is `false`.
                                type: boolean
                              diskPartition:
                                description: 'The name of the device or partition
                                  to mount. NOTE: this argument doesn''t support setting
                                  in node pool, or will leads to mount error. The
                                  name of the device or partition to mount. NOTE:
                                  this argument doesn''t support setting in node pool,
                                  or will leads to mount error.'
                                type: string
                              diskSize:
                                description: Volume of disk in GB. Default is 0. Volume
                                  of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk. Valid value: LOCAL_BASIC,
                                  LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD,
                                  CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD. Types of
                                  disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`,
                                  `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`
                                  and `CLOUD_BSSD`.'
                                type: string
                              fileSystem:
                                description: File system, e.g. ext3/ext4/xfs. File
                                  system, e.g. `ext3/ext4/xfs`.
                                type: string
                              mountTarget:
                                description: Mount target. Mount target.
                                type: string
                            type: object
                          type: array
                        desiredPodNum:
                          description: Indicate to set desired pod number in node.
                            valid when the cluster is podCIDR. Indicate to set desired
                            pod number in node. valid when the cluster is podCIDR.
                          type: number
                        dockerGraphPath:
                          description: Docker graph path. Default is /var/lib/docker.
                            Docker graph path. Default is `/var/lib/docker`.
                          type: string
                        extraArgs:
                          description: Custom parameter information related to the
                            node. This is a white-list parameter. Custom parameter
                            information related to the node. This is a white-list
                            parameter.
                          items:
                            type: string
                          type: array
                        gpuArgs:
                          description: GPU driver parameters. GPU driver parameters.
                          items:
                            properties:
                              cuda:
                                additionalProperties:
                                  type: string
                                description: 'CUDA  version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  CUDA  version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              cudnn:
                                additionalProperties:
                                  type: string
                                description: 'cuDNN version. Format like: { version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }. version: cuDNN version; name: cuDNN name;
                                  doc_name: Doc name of cuDNN; dev_name: Dev name
                                  of cuDNN. cuDNN version. Format like: `{ version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }`. `version`: cuDNN version; `name`: cuDNN
                                  name; `doc_name`: Doc name of cuDNN; `dev_name`:
                                  Dev name of cuDNN.'
                                type: object
                              customDriver:
                                additionalProperties:
                                  type: string
                                description: 'Custom GPU driver. Format like: {address:
                                  String}. address: URL of custom GPU driver address.
                                  Custom GPU driver. Format like: `{address: String}`.
                                  `address`: URL of custom GPU driver address.'
                                type: object
                              driver:
                                additionalProperties:
                                  type: string
                                description: 'GPU driver version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  GPU driver version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              migEnable:
                                description: Whether to enable MIG. Whether to enable
                                  MIG.
                                type: boolean
                            type: object
                          type: array
                        isSchedule:
                          description: Indicate to schedule the adding node or not.
                            Default is true. Indicate to schedule the adding node
                            or not. Default is true.
                          type: boolean
                        mountTarget:
                          description: Mount target. Mount target. Default is not
                            mounting.
                          type: string
                        preStartUserScript:
                          description: Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes. Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes.
                          type: string
                        userData:
                          description: Base64-encoded User Data text, the length limit
                            is 16KB. Base64-encoded User Data text, the length limit
                            is 16KB.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ClusterAttachmentStatus defines the observed state of ClusterAttachment.
            properties:
              atProvider:
                properties:
                  clusterId:
                    description: ID of the cluster. ID of the cluster.
                    type: string
                  hostname:
                    description: 'The host name of the attached instance. Dot (.)
                      and dash (-) cannot be used as the first and last characters
                      of HostName and cannot be used consecutively. Windows example:
                      The length of the name character is [2, 15], letters (capitalization
                      is not restricted), numbers and dashes (-) are allowed, dots
                      (.) are not supported, and not all numbers are allowed. Examples
                      of other types (Linux, etc.): The character length is [2, 60],
                      and multiple dots are allowed. There is a segment between the
                      dots. Each segment allows letters (with no limitation on capitalization),
                      numbers and dashes (-). The host name of the attached instance.
                      Dot (.) and dash (-) cannot be used as the first and last characters
                      of HostName and cannot be used consecutively. Windows example:
                      The length of the name character is [2, 15], letters (capitalization
                      is not restricted), numbers and dashes (-) are allowed, dots
                      (.) are not supported, and not all numbers are allowed. Examples
                      of other types (Linux, etc.): The character length is [2, 60],
                      and multiple dots are allowed. There is a segment between the
                      dots. Each segment allows letters (with no limitation on capitalization),
                      numbers and dashes (-).'
                    type: string
                  id:
                    description: ID of the resource.
                    type: string
                  instanceId:
                    description: ID of the CVM instance, this cvm will reinstall the
                      system. ID of the CVM instance, this cvm will reinstall the
                      system.
                    type: string
                  keyIds:
                    description: The key pair to use for the instance, it looks like
                      skey-16jig7tx, it should be set if password not set. The key
                      pair to use for the instance, it looks like skey-16jig7tx, it
                      should be set if `password` not set.
                    items:
                      type: string
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels of tke attachment exits CVM. Labels of tke
                      attachment exits CVM.
                    type: object
                  securityGroups:
                    description: A list of security group IDs after attach to cluster.
                      A list of security group IDs after attach to cluster.
                    items:
                      type: string
                    type: array
                  state:
                    description: State of the node. State of the node.
                    type: string
                  unschedulable:
                    description: Sets whether the joining node participates in the
                      schedule. Default is '0'. Participate in scheduling. Sets whether
                      the joining node participates in the schedule. Default is '0'.
                      Participate in scheduling.
                    type: number
                  workerConfig:
                    description: Deploy the machine configuration information of the
                      'WORKER', commonly used to attach existing instances. Deploy
                      the machine configuration information of the 'WORKER', commonly
                      used to attach existing instances.
                    items:
                      properties:
                        dataDisk:
                          description: Configurations of data disk. Configurations
                            of data disk.
                          items:
                            properties:
                              autoFormatAndMount:
                                description: Indicate whether to auto format and mount
                                  or not. Default is false. Indicate whether to auto
                                  format and mount or not. Default is `false`.
                                type: boolean
                              diskPartition:
                                description: 'The name of the device or partition
                                  to mount. NOTE: this argument doesn''t support setting
                                  in node pool, or will leads to mount error. The
                                  name of the device or partition to mount. NOTE:
                                  this argument doesn''t support setting in node pool,
                                  or will leads to mount error.'
                                type: string
                              diskSize:
                                description: Volume of disk in GB. Default is 0. Volume
                                  of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk. Valid value: LOCAL_BASIC,
                                  LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD,
                                  CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD. Types of
                                  disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`,
                                  `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`
                                  and `CLOUD_BSSD`.'
                                type: string
                              fileSystem:
                                description: File system, e.g. ext3/ext4/xfs. File
                                  system, e.g. `ext3/ext4/xfs`.
                                type: string
                              mountTarget:
                                description: Mount target. Mount target.
                                type: string
                            type: object
                          type: array
                        desiredPodNum:
                          description: Indicate to set desired pod number in node.
                            valid when the cluster is podCIDR. Indicate to set desired
                            pod number in node. valid when the cluster is podCIDR.
                          type: number
                        dockerGraphPath:
                          description: Docker graph path. Default is /var/lib/docker.
                            Docker graph path. Default is `/var/lib/docker`.
                          type: string
                        extraArgs:
                          description: Custom parameter information related to the
                            node. This is a white-list parameter. Custom parameter
                            information related to the node. This is a white-list
                            parameter.
                          items:
                            type: string
                          type: array
                        gpuArgs:
                          description: GPU driver parameters. GPU driver parameters.
                          items:
                            properties:
                              cuda:
                                additionalProperties:
                                  type: string
                                description: 'CUDA  version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  CUDA  version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              cudnn:
                                additionalProperties:
                                  type: string
                                description: 'cuDNN version. Format like: { version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }. version: cuDNN version; name: cuDNN name;
                                  doc_name: Doc name of cuDNN; dev_name: Dev name
                                  of cuDNN. cuDNN version. Format like: `{ version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }`. `version`: cuDNN version; `name`: cuDNN
                                  name; `doc_name`: Doc name of cuDNN; `dev_name`:
                                  Dev name of cuDNN.'
                                type: object
                              customDriver:
                                additionalProperties:
                                  type: string
                                description: 'Custom GPU driver. Format like: {address:
                                  String}. address: URL of custom GPU driver address.
                                  Custom GPU driver. Format like: `{address: String}`.
                                  `address`: URL of custom GPU driver address.'
                                type: object
                              driver:
                                additionalProperties:
                                  type: string
                                description: 'GPU driver version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  GPU driver version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              migEnable:
                                description: Whether to enable MIG. Whether to enable
                                  MIG.
                                type: boolean
                            type: object
                          type: array
                        isSchedule:
                          description: Indicate to schedule the adding node or not.
                            Default is true. Indicate to schedule the adding node
                            or not. Default is true.
                          type: boolean
                        mountTarget:
                          description: Mount target. Mount target. Default is not
                            mounting.
                          type: string
                        preStartUserScript:
                          description: Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes. Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes.
                          type: string
                        userData:
                          description: Base64-encoded User Data text, the length limit
                            is 16KB. Base64-encoded User Data text, the length limit
                            is 16KB.
                          type: string
                      type: object
                    type: array
                  workerConfigOverrides:
                    description: Override variable worker_config, commonly used to
                      attach existing instances. Override variable worker_config,
                      commonly used to attach existing instances.
                    items:
                      properties:
                        dataDisk:
                          description: Configurations of data disk. Configurations
                            of data disk.
                          items:
                            properties:
                              autoFormatAndMount:
                                description: Indicate whether to auto format and mount
                                  or not. Default is false. Indicate whether to auto
                                  format and mount or not. Default is `false`.
                                type: boolean
                              diskPartition:
                                description: 'The name of the device or partition
                                  to mount. NOTE: this argument doesn''t support setting
                                  in node pool, or will leads to mount error. The
                                  name of the device or partition to mount. NOTE:
                                  this argument doesn''t support setting in node pool,
                                  or will leads to mount error.'
                                type: string
                              diskSize:
                                description: Volume of disk in GB. Default is 0. Volume
                                  of disk in GB. Default is `0`.
                                type: number
                              diskType:
                                description: 'Types of disk. Valid value: LOCAL_BASIC,
                                  LOCAL_SSD, CLOUD_BASIC, CLOUD_PREMIUM, CLOUD_SSD,
                                  CLOUD_HSSD, CLOUD_TSSD and CLOUD_BSSD. Types of
                                  disk. Valid value: `LOCAL_BASIC`, `LOCAL_SSD`, `CLOUD_BASIC`,
                                  `CLOUD_PREMIUM`, `CLOUD_SSD`, `CLOUD_HSSD`, `CLOUD_TSSD`
                                  and `CLOUD_BSSD`.'
                                type: string
                              fileSystem:
                                description: File system, e.g. ext3/ext4/xfs. File
                                  system, e.g. `ext3/ext4/xfs`.
                                type: string
                              mountTarget:
                                description: Mount target. Mount target.
                                type: string
                            type: object
                          type: array
                        desiredPodNum:
                          description: Indicate to set desired pod number in node.
                            valid when the cluster is podCIDR. Indicate to set desired
                            pod number in node. valid when the cluster is podCIDR.
                          type: number
                        dockerGraphPath:
                          description: Docker graph path. Default is /var/lib/docker.
                            Docker graph path. Default is `/var/lib/docker`.
                          type: string
                        extraArgs:
                          description: Custom parameter information related to the
                            node. This is a white-list parameter. Custom parameter
                            information related to the node. This is a white-list
                            parameter.
                          items:
                            type: string
                          type: array
                        gpuArgs:
                          description: GPU driver parameters. GPU driver parameters.
                          items:
                            properties:
                              cuda:
                                additionalProperties:
                                  type: string
                                description: 'CUDA  version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  CUDA  version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              cudnn:
                                additionalProperties:
                                  type: string
                                description: 'cuDNN version. Format like: { version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }. version: cuDNN version; name: cuDNN name;
                                  doc_name: Doc name of cuDNN; dev_name: Dev name
                                  of cuDNN. cuDNN version. Format like: `{ version:
                                  String, name: String, doc_name: String, dev_name:
                                  String }`. `version`: cuDNN version; `name`: cuDNN
                                  name; `doc_name`: Doc name of cuDNN; `dev_name`:
                                  Dev name of cuDNN.'
                                type: object
                              customDriver:
                                additionalProperties:
                                  type: string
                                description: 'Custom GPU driver. Format like: {address:
                                  String}. address: URL of custom GPU driver address.
                                  Custom GPU driver. Format like: `{address: String}`.
                                  `address`: URL of custom GPU driver address.'
                                type: object
                              driver:
                                additionalProperties:
                                  type: string
                                description: 'GPU driver version. Format like: { version:
                                  String, name: String }. version: Version of GPU
                                  driver or CUDA; name: Name of GPU driver or CUDA.
                                  GPU driver version. Format like: `{ version: String,
                                  name: String }`. `version`: Version of GPU driver
                                  or CUDA; `name`: Name of GPU driver or CUDA.'
                                type: object
                              migEnable:
                                description: Whether to enable MIG. Whether to enable
                                  MIG.
                                type: boolean
                            type: object
                          type: array
                        isSchedule:
                          description: Indicate to schedule the adding node or not.
                            Default is true. Indicate to schedule the adding node
                            or not. Default is true.
                          type: boolean
                        mountTarget:
                          description: Mount target. Mount target. Default is not
                            mounting.
                          type: string
                        preStartUserScript:
                          description: Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes. Base64-encoded user script, executed before
                            initializing the node, currently only effective for adding
                            existing nodes.
                          type: string
                        userData:
                          description: Base64-encoded User Data text, the length limit
                            is 16KB. Base64-encoded User Data text, the length limit
                            is 16KB.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
