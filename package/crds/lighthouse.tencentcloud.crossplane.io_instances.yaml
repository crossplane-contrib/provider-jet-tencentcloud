---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: instances.lighthouse.tencentcloud.crossplane.io
spec:
  group: lighthouse.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloud
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API. Provides a resource
          to create a lighthouse instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  blueprintId:
                    description: ID of the Lighthouse image. ID of the Lighthouse
                      image.
                    type: string
                  bundleId:
                    description: ID of the Lighthouse package. ID of the Lighthouse
                      package.
                    type: string
                  clientToken:
                    description: A unique string supplied by the client to ensure
                      that the request is idempotent. Its maximum length is 64 ASCII
                      characters. If this parameter is not specified, the idem-potency
                      of the request cannot be guaranteed. A unique string supplied
                      by the client to ensure that the request is idempotent. Its
                      maximum length is 64 ASCII characters. If this parameter is
                      not specified, the idem-potency of the request cannot be guaranteed.
                    type: string
                  containers:
                    description: Configuration of the containers to create. Configuration
                      of the containers to create.
                    items:
                      properties:
                        command:
                          description: The command to run. The command to run.
                          type: string
                        containerImage:
                          description: Container image address. Container image address.
                          type: string
                        containerName:
                          description: Container name. Container name.
                          type: string
                        envs:
                          description: List of environment variables. List of environment
                            variables.
                          items:
                            properties:
                              key:
                                description: Environment variable key. Environment
                                  variable key.
                                type: string
                              value:
                                description: Environment variable value. Environment
                                  variable value.
                                type: string
                            type: object
                          type: array
                        publishPorts:
                          description: List of mappings of container ports and host
                            ports. List of mappings of container ports and host ports.
                          items:
                            properties:
                              containerPort:
                                description: Container port. Container port.
                                type: number
                              hostPort:
                                description: Host port. Host port.
                                type: number
                              ip:
                                description: External IP. It defaults to 0.0.0.0.
                                  External IP. It defaults to 0.0.0.0.
                                type: string
                              protocol:
                                description: 'The protocol defaults to tcp. Valid
                                  values: tcp, udp and sctp. The protocol defaults
                                  to tcp. Valid values: tcp, udp and sctp.'
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: List of container mount volumes. List of container
                            mount volumes.
                          items:
                            properties:
                              containerPath:
                                description: Container path. Container path.
                                type: string
                              hostPath:
                                description: Host path. Host path.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  dryRun:
                    description: 'Whether the request is a dry run only.true: dry
                      run only. The request will not create instance(s). A dry run
                      can check whether all the required parameters are specified,
                      whether the request format is right, whether the request exceeds
                      service limits, and whether the specified CVMs are available.
                      If the dry run fails, the corresponding error code will be returned.If
                      the dry run succeeds, the RequestId will be returned.false (default
                      value): send a normal request and create instance(s) if all
                      the requirements are met. Whether the request is a dry run only.true:
                      dry run only. The request will not create instance(s). A dry
                      run can check whether all the required parameters are specified,
                      whether the request format is right, whether the request exceeds
                      service limits, and whether the specified CVMs are available.
                      If the dry run fails, the corresponding error code will be returned.If
                      the dry run succeeds, the RequestId will be returned.false (default
                      value): send a normal request and create instance(s) if all
                      the requirements are met.'
                    type: boolean
                  firewallTemplateId:
                    description: Firewall template ID. If this parameter is not specified,
                      the default firewall policy is used. Firewall template ID. If
                      this parameter is not specified, the default firewall policy
                      is used.
                    type: string
                  instanceName:
                    description: The display name of the Lighthouse instance. The
                      display name of the Lighthouse instance.
                    type: string
                  isUpdateBundleIdAutoVoucher:
                    description: 'Whether the voucher is deducted automatically when
                      update bundle id. Value range: true: indicates automatic deduction
                      of vouchers, false: does not automatically deduct vouchers.
                      Default value: false. Whether the voucher is deducted automatically
                      when update bundle id. Value range: `true`: indicates automatic
                      deduction of vouchers, `false`: does not automatically deduct
                      vouchers. Default value: `false`.'
                    type: boolean
                  isolateDataDisk:
                    description: 'Whether to return the mounted data disk. true: returns
                      both the instance and the mounted data disk; false: returns
                      the instance and no longer returns its mounted data disk. Default:
                      true. Whether to return the mounted data disk. `true`: returns
                      both the instance and the mounted data disk; `false`: returns
                      the instance and no longer returns its mounted data disk. Default:
                      `true`.'
                    type: boolean
                  loginConfiguration:
                    description: Login password of the instance. It is only available
                      for Windows instances. If it is not specified, it means that
                      the user choose to set the login password after the instance
                      creation. Login password of the instance. It is only available
                      for Windows instances. If it is not specified, it means that
                      the user choose to set the login password after the instance
                      creation.
                    items:
                      properties:
                        autoGeneratePassword:
                          description: whether auto generate password. if false, need
                            set password. whether auto generate password. if false,
                            need set password.
                          type: string
                        password:
                          description: Login password. Login password.
                          type: string
                      type: object
                    type: array
                  period:
                    description: 'Subscription period in months. Valid values: 1,
                      2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60. Subscription
                      period in months. Valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                      11, 12, 24, 36, 48, 60.'
                    type: number
                  permitDefaultKeyPairLogin:
                    description: 'It has been deprecated from version v1.81.8. Use
                      tencentcloud_lighthouse_key_pair_attachment manage key pair.
                      Whether to allow login using the default key pair. YES: allow
                      login; NO: disable login. Default: YES. Whether to allow login
                      using the default key pair. `YES`: allow login; `NO`: disable
                      login. Default: `YES`.'
                    type: string
                  renewFlag:
                    description: 'Auto-Renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW:
                      notify upon expiration and renew automatically; NOTIFY_AND_MANUAL_RENEW:
                      notify upon expiration but do not renew automatically. You need
                      to manually renew DISABLE_NOTIFY_AND_AUTO_RENEW: neither notify
                      upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW.
                      Auto-Renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify
                      upon expiration and renew automatically; NOTIFY_AND_MANUAL_RENEW:
                      notify upon expiration but do not renew automatically. You need
                      to manually renew DISABLE_NOTIFY_AND_AUTO_RENEW: neither notify
                      upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW.'
                    type: string
                  zone:
                    description: List of availability zones. A random AZ is selected
                      by default. List of availability zones. A random AZ is selected
                      by default.
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  blueprintId:
                    description: ID of the Lighthouse image. ID of the Lighthouse
                      image.
                    type: string
                  bundleId:
                    description: ID of the Lighthouse package. ID of the Lighthouse
                      package.
                    type: string
                  clientToken:
                    description: A unique string supplied by the client to ensure
                      that the request is idempotent. Its maximum length is 64 ASCII
                      characters. If this parameter is not specified, the idem-potency
                      of the request cannot be guaranteed. A unique string supplied
                      by the client to ensure that the request is idempotent. Its
                      maximum length is 64 ASCII characters. If this parameter is
                      not specified, the idem-potency of the request cannot be guaranteed.
                    type: string
                  containers:
                    description: Configuration of the containers to create. Configuration
                      of the containers to create.
                    items:
                      properties:
                        command:
                          description: The command to run. The command to run.
                          type: string
                        containerImage:
                          description: Container image address. Container image address.
                          type: string
                        containerName:
                          description: Container name. Container name.
                          type: string
                        envs:
                          description: List of environment variables. List of environment
                            variables.
                          items:
                            properties:
                              key:
                                description: Environment variable key. Environment
                                  variable key.
                                type: string
                              value:
                                description: Environment variable value. Environment
                                  variable value.
                                type: string
                            type: object
                          type: array
                        publishPorts:
                          description: List of mappings of container ports and host
                            ports. List of mappings of container ports and host ports.
                          items:
                            properties:
                              containerPort:
                                description: Container port. Container port.
                                type: number
                              hostPort:
                                description: Host port. Host port.
                                type: number
                              ip:
                                description: External IP. It defaults to 0.0.0.0.
                                  External IP. It defaults to 0.0.0.0.
                                type: string
                              protocol:
                                description: 'The protocol defaults to tcp. Valid
                                  values: tcp, udp and sctp. The protocol defaults
                                  to tcp. Valid values: tcp, udp and sctp.'
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: List of container mount volumes. List of container
                            mount volumes.
                          items:
                            properties:
                              containerPath:
                                description: Container path. Container path.
                                type: string
                              hostPath:
                                description: Host path. Host path.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  dryRun:
                    description: 'Whether the request is a dry run only.true: dry
                      run only. The request will not create instance(s). A dry run
                      can check whether all the required parameters are specified,
                      whether the request format is right, whether the request exceeds
                      service limits, and whether the specified CVMs are available.
                      If the dry run fails, the corresponding error code will be returned.If
                      the dry run succeeds, the RequestId will be returned.false (default
                      value): send a normal request and create instance(s) if all
                      the requirements are met. Whether the request is a dry run only.true:
                      dry run only. The request will not create instance(s). A dry
                      run can check whether all the required parameters are specified,
                      whether the request format is right, whether the request exceeds
                      service limits, and whether the specified CVMs are available.
                      If the dry run fails, the corresponding error code will be returned.If
                      the dry run succeeds, the RequestId will be returned.false (default
                      value): send a normal request and create instance(s) if all
                      the requirements are met.'
                    type: boolean
                  firewallTemplateId:
                    description: Firewall template ID. If this parameter is not specified,
                      the default firewall policy is used. Firewall template ID. If
                      this parameter is not specified, the default firewall policy
                      is used.
                    type: string
                  instanceName:
                    description: The display name of the Lighthouse instance. The
                      display name of the Lighthouse instance.
                    type: string
                  isUpdateBundleIdAutoVoucher:
                    description: 'Whether the voucher is deducted automatically when
                      update bundle id. Value range: true: indicates automatic deduction
                      of vouchers, false: does not automatically deduct vouchers.
                      Default value: false. Whether the voucher is deducted automatically
                      when update bundle id. Value range: `true`: indicates automatic
                      deduction of vouchers, `false`: does not automatically deduct
                      vouchers. Default value: `false`.'
                    type: boolean
                  isolateDataDisk:
                    description: 'Whether to return the mounted data disk. true: returns
                      both the instance and the mounted data disk; false: returns
                      the instance and no longer returns its mounted data disk. Default:
                      true. Whether to return the mounted data disk. `true`: returns
                      both the instance and the mounted data disk; `false`: returns
                      the instance and no longer returns its mounted data disk. Default:
                      `true`.'
                    type: boolean
                  loginConfiguration:
                    description: Login password of the instance. It is only available
                      for Windows instances. If it is not specified, it means that
                      the user choose to set the login password after the instance
                      creation. Login password of the instance. It is only available
                      for Windows instances. If it is not specified, it means that
                      the user choose to set the login password after the instance
                      creation.
                    items:
                      properties:
                        autoGeneratePassword:
                          description: whether auto generate password. if false, need
                            set password. whether auto generate password. if false,
                            need set password.
                          type: string
                        password:
                          description: Login password. Login password.
                          type: string
                      type: object
                    type: array
                  period:
                    description: 'Subscription period in months. Valid values: 1,
                      2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60. Subscription
                      period in months. Valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                      11, 12, 24, 36, 48, 60.'
                    type: number
                  permitDefaultKeyPairLogin:
                    description: 'It has been deprecated from version v1.81.8. Use
                      tencentcloud_lighthouse_key_pair_attachment manage key pair.
                      Whether to allow login using the default key pair. YES: allow
                      login; NO: disable login. Default: YES. Whether to allow login
                      using the default key pair. `YES`: allow login; `NO`: disable
                      login. Default: `YES`.'
                    type: string
                  renewFlag:
                    description: 'Auto-Renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW:
                      notify upon expiration and renew automatically; NOTIFY_AND_MANUAL_RENEW:
                      notify upon expiration but do not renew automatically. You need
                      to manually renew DISABLE_NOTIFY_AND_AUTO_RENEW: neither notify
                      upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW.
                      Auto-Renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify
                      upon expiration and renew automatically; NOTIFY_AND_MANUAL_RENEW:
                      notify upon expiration but do not renew automatically. You need
                      to manually renew DISABLE_NOTIFY_AND_AUTO_RENEW: neither notify
                      upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW.'
                    type: string
                  zone:
                    description: List of availability zones. A random AZ is selected
                      by default. List of availability zones. A random AZ is selected
                      by default.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.blueprintId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.blueprintId)
                || (has(self.initProvider) && has(self.initProvider.blueprintId))'
            - message: spec.forProvider.bundleId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.bundleId)
                || (has(self.initProvider) && has(self.initProvider.bundleId))'
            - message: spec.forProvider.instanceName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.instanceName)
                || (has(self.initProvider) && has(self.initProvider.instanceName))'
            - message: spec.forProvider.renewFlag is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.renewFlag)
                || (has(self.initProvider) && has(self.initProvider.renewFlag))'
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  blueprintId:
                    description: ID of the Lighthouse image. ID of the Lighthouse
                      image.
                    type: string
                  bundleId:
                    description: ID of the Lighthouse package. ID of the Lighthouse
                      package.
                    type: string
                  clientToken:
                    description: A unique string supplied by the client to ensure
                      that the request is idempotent. Its maximum length is 64 ASCII
                      characters. If this parameter is not specified, the idem-potency
                      of the request cannot be guaranteed. A unique string supplied
                      by the client to ensure that the request is idempotent. Its
                      maximum length is 64 ASCII characters. If this parameter is
                      not specified, the idem-potency of the request cannot be guaranteed.
                    type: string
                  containers:
                    description: Configuration of the containers to create. Configuration
                      of the containers to create.
                    items:
                      properties:
                        command:
                          description: The command to run. The command to run.
                          type: string
                        containerImage:
                          description: Container image address. Container image address.
                          type: string
                        containerName:
                          description: Container name. Container name.
                          type: string
                        envs:
                          description: List of environment variables. List of environment
                            variables.
                          items:
                            properties:
                              key:
                                description: Environment variable key. Environment
                                  variable key.
                                type: string
                              value:
                                description: Environment variable value. Environment
                                  variable value.
                                type: string
                            type: object
                          type: array
                        publishPorts:
                          description: List of mappings of container ports and host
                            ports. List of mappings of container ports and host ports.
                          items:
                            properties:
                              containerPort:
                                description: Container port. Container port.
                                type: number
                              hostPort:
                                description: Host port. Host port.
                                type: number
                              ip:
                                description: External IP. It defaults to 0.0.0.0.
                                  External IP. It defaults to 0.0.0.0.
                                type: string
                              protocol:
                                description: 'The protocol defaults to tcp. Valid
                                  values: tcp, udp and sctp. The protocol defaults
                                  to tcp. Valid values: tcp, udp and sctp.'
                                type: string
                            type: object
                          type: array
                        volumes:
                          description: List of container mount volumes. List of container
                            mount volumes.
                          items:
                            properties:
                              containerPath:
                                description: Container path. Container path.
                                type: string
                              hostPath:
                                description: Host path. Host path.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  dryRun:
                    description: 'Whether the request is a dry run only.true: dry
                      run only. The request will not create instance(s). A dry run
                      can check whether all the required parameters are specified,
                      whether the request format is right, whether the request exceeds
                      service limits, and whether the specified CVMs are available.
                      If the dry run fails, the corresponding error code will be returned.If
                      the dry run succeeds, the RequestId will be returned.false (default
                      value): send a normal request and create instance(s) if all
                      the requirements are met. Whether the request is a dry run only.true:
                      dry run only. The request will not create instance(s). A dry
                      run can check whether all the required parameters are specified,
                      whether the request format is right, whether the request exceeds
                      service limits, and whether the specified CVMs are available.
                      If the dry run fails, the corresponding error code will be returned.If
                      the dry run succeeds, the RequestId will be returned.false (default
                      value): send a normal request and create instance(s) if all
                      the requirements are met.'
                    type: boolean
                  firewallTemplateId:
                    description: Firewall template ID. If this parameter is not specified,
                      the default firewall policy is used. Firewall template ID. If
                      this parameter is not specified, the default firewall policy
                      is used.
                    type: string
                  id:
                    description: ID of the resource.
                    type: string
                  instanceName:
                    description: The display name of the Lighthouse instance. The
                      display name of the Lighthouse instance.
                    type: string
                  isUpdateBundleIdAutoVoucher:
                    description: 'Whether the voucher is deducted automatically when
                      update bundle id. Value range: true: indicates automatic deduction
                      of vouchers, false: does not automatically deduct vouchers.
                      Default value: false. Whether the voucher is deducted automatically
                      when update bundle id. Value range: `true`: indicates automatic
                      deduction of vouchers, `false`: does not automatically deduct
                      vouchers. Default value: `false`.'
                    type: boolean
                  isolateDataDisk:
                    description: 'Whether to return the mounted data disk. true: returns
                      both the instance and the mounted data disk; false: returns
                      the instance and no longer returns its mounted data disk. Default:
                      true. Whether to return the mounted data disk. `true`: returns
                      both the instance and the mounted data disk; `false`: returns
                      the instance and no longer returns its mounted data disk. Default:
                      `true`.'
                    type: boolean
                  loginConfiguration:
                    description: Login password of the instance. It is only available
                      for Windows instances. If it is not specified, it means that
                      the user choose to set the login password after the instance
                      creation. Login password of the instance. It is only available
                      for Windows instances. If it is not specified, it means that
                      the user choose to set the login password after the instance
                      creation.
                    items:
                      properties:
                        autoGeneratePassword:
                          description: whether auto generate password. if false, need
                            set password. whether auto generate password. if false,
                            need set password.
                          type: string
                        password:
                          description: Login password. Login password.
                          type: string
                      type: object
                    type: array
                  period:
                    description: 'Subscription period in months. Valid values: 1,
                      2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 36, 48, 60. Subscription
                      period in months. Valid values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                      11, 12, 24, 36, 48, 60.'
                    type: number
                  permitDefaultKeyPairLogin:
                    description: 'It has been deprecated from version v1.81.8. Use
                      tencentcloud_lighthouse_key_pair_attachment manage key pair.
                      Whether to allow login using the default key pair. YES: allow
                      login; NO: disable login. Default: YES. Whether to allow login
                      using the default key pair. `YES`: allow login; `NO`: disable
                      login. Default: `YES`.'
                    type: string
                  privateAddresses:
                    description: Private addresses. Private addresses.
                    items:
                      type: string
                    type: array
                  publicAddresses:
                    description: Public addresses. Public addresses.
                    items:
                      type: string
                    type: array
                  renewFlag:
                    description: 'Auto-Renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW:
                      notify upon expiration and renew automatically; NOTIFY_AND_MANUAL_RENEW:
                      notify upon expiration but do not renew automatically. You need
                      to manually renew DISABLE_NOTIFY_AND_AUTO_RENEW: neither notify
                      upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW.
                      Auto-Renewal flag. Valid values: NOTIFY_AND_AUTO_RENEW: notify
                      upon expiration and renew automatically; NOTIFY_AND_MANUAL_RENEW:
                      notify upon expiration but do not renew automatically. You need
                      to manually renew DISABLE_NOTIFY_AND_AUTO_RENEW: neither notify
                      upon expiration nor renew automatically. Default value: NOTIFY_AND_MANUAL_RENEW.'
                    type: string
                  zone:
                    description: List of availability zones. A random AZ is selected
                      by default. List of availability zones. A random AZ is selected
                      by default.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
