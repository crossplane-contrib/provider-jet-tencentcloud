---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: scalinggroups.as.tencentcloud.crossplane.io
spec:
  group: as.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloud
    kind: ScalingGroup
    listKind: ScalingGroupList
    plural: scalinggroups
    singular: scalinggroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScalingGroup is the Schema for the ScalingGroups API. Provides
          a resource to create a group of AS (Auto scaling) instances.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScalingGroupSpec defines the desired state of ScalingGroup
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  configurationId:
                    description: An available ID for a launch configuration. An available
                      ID for a launch configuration.
                    type: string
                  configurationIdRef:
                    description: Reference to a ScalingConfig to populate configurationId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  configurationIdSelector:
                    description: Selector for a ScalingConfig to populate configurationId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  defaultCooldown:
                    description: Default cooldown time in second, and default value
                      is 300. Default cooldown time in second, and default value is
                      `300`.
                    type: number
                  desiredCapacity:
                    description: Desired volume of CVM instances, which is between
                      max_size and min_size. Desired volume of CVM instances, which
                      is between `max_size` and `min_size`.
                    type: number
                  forwardBalancerIds:
                    description: List of application load balancers, which can't be
                      specified with load_balancer_ids together. List of application
                      load balancers, which can't be specified with `load_balancer_ids`
                      together.
                    items:
                      properties:
                        listenerId:
                          description: Listener ID for application load balancers.
                            Listener ID for application load balancers.
                          type: string
                        loadBalancerId:
                          description: ID of available load balancers. ID of available
                            load balancers.
                          type: string
                        ruleId:
                          description: ID of forwarding rules. ID of forwarding rules.
                          type: string
                        targetAttribute:
                          description: Attribute list of target rules. Attribute list
                            of target rules.
                          items:
                            properties:
                              port:
                                description: Port number. Port number.
                                type: number
                              weight:
                                description: Weight. Weight.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  loadBalancerIds:
                    description: ID list of traditional load balancers. ID list of
                      traditional load balancers.
                    items:
                      type: string
                    type: array
                  maxSize:
                    description: 'Maximum number of CVM instances. Valid value ranges:
                      (0~2000). Maximum number of CVM instances. Valid value ranges:
                      (0~2000).'
                    type: number
                  minSize:
                    description: 'Minimum number of CVM instances. Valid value ranges:
                      (0~2000). Minimum number of CVM instances. Valid value ranges:
                      (0~2000).'
                    type: number
                  multiZoneSubnetPolicy:
                    description: 'Multi zone or subnet strategy, Valid values: PRIORITY
                      and EQUALITY. Multi zone or subnet strategy, Valid values: PRIORITY
                      and EQUALITY.'
                    type: string
                  projectId:
                    description: Specifies to which project the scaling group belongs.
                      Specifies to which project the scaling group belongs.
                    type: number
                  replaceLoadBalancerUnhealthy:
                    description: Enable unhealthy instance replacement. If set to
                      true, AS will replace instances that are found unhealthy in
                      the CLB health check. Enable unhealthy instance replacement.
                      If set to `true`, AS will replace instances that are found unhealthy
                      in the CLB health check.
                    type: boolean
                  replaceMonitorUnhealthy:
                    description: Enables unhealthy instance replacement. If set to
                      true, AS will replace instances that are flagged as unhealthy
                      by Cloud Monitor. Enables unhealthy instance replacement. If
                      set to `true`, AS will replace instances that are flagged as
                      unhealthy by Cloud Monitor.
                    type: boolean
                  retryPolicy:
                    description: 'Available values for retry policies. Valid values:
                      IMMEDIATE_RETRY and INCREMENTAL_INTERVALS. Available values
                      for retry policies. Valid values: IMMEDIATE_RETRY and INCREMENTAL_INTERVALS.'
                    type: string
                  scalingGroupName:
                    description: Name of a scaling group. Name of a scaling group.
                    type: string
                  scalingMode:
                    description: 'Indicates scaling mode which creates and terminates
                      instances (classic method), or method first tries to start stopped
                      instances (wake up stopped) to perform scaling operations. Available
                      values: CLASSIC_SCALING, WAKE_UP_STOPPED_SCALING. Default: CLASSIC_SCALING.
                      Indicates scaling mode which creates and terminates instances
                      (classic method), or method first tries to start stopped instances
                      (wake up stopped) to perform scaling operations. Available values:
                      `CLASSIC_SCALING`, `WAKE_UP_STOPPED_SCALING`. Default: `CLASSIC_SCALING`.'
                    type: string
                  subnetIds:
                    description: ID list of subnet, and for VPC it is required. ID
                      list of subnet, and for VPC it is required.
                    items:
                      type: string
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags of a scaling group. Tags of a scaling group.
                    type: object
                  terminationPolicies:
                    description: 'Available values for termination policies. Valid
                      values: OLDEST_INSTANCE and NEWEST_INSTANCE. Available values
                      for termination policies. Valid values: OLDEST_INSTANCE and
                      NEWEST_INSTANCE.'
                    items:
                      type: string
                    type: array
                  vpcId:
                    description: ID of VPC network. ID of VPC network.
                    type: string
                  zones:
                    description: List of available zones, for Basic network it is
                      required. List of available zones, for Basic network it is required.
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  defaultCooldown:
                    description: Default cooldown time in second, and default value
                      is 300. Default cooldown time in second, and default value is
                      `300`.
                    type: number
                  desiredCapacity:
                    description: Desired volume of CVM instances, which is between
                      max_size and min_size. Desired volume of CVM instances, which
                      is between `max_size` and `min_size`.
                    type: number
                  forwardBalancerIds:
                    description: List of application load balancers, which can't be
                      specified with load_balancer_ids together. List of application
                      load balancers, which can't be specified with `load_balancer_ids`
                      together.
                    items:
                      properties:
                        listenerId:
                          description: Listener ID for application load balancers.
                            Listener ID for application load balancers.
                          type: string
                        loadBalancerId:
                          description: ID of available load balancers. ID of available
                            load balancers.
                          type: string
                        ruleId:
                          description: ID of forwarding rules. ID of forwarding rules.
                          type: string
                        targetAttribute:
                          description: Attribute list of target rules. Attribute list
                            of target rules.
                          items:
                            properties:
                              port:
                                description: Port number. Port number.
                                type: number
                              weight:
                                description: Weight. Weight.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  loadBalancerIds:
                    description: ID list of traditional load balancers. ID list of
                      traditional load balancers.
                    items:
                      type: string
                    type: array
                  maxSize:
                    description: 'Maximum number of CVM instances. Valid value ranges:
                      (0~2000). Maximum number of CVM instances. Valid value ranges:
                      (0~2000).'
                    type: number
                  minSize:
                    description: 'Minimum number of CVM instances. Valid value ranges:
                      (0~2000). Minimum number of CVM instances. Valid value ranges:
                      (0~2000).'
                    type: number
                  multiZoneSubnetPolicy:
                    description: 'Multi zone or subnet strategy, Valid values: PRIORITY
                      and EQUALITY. Multi zone or subnet strategy, Valid values: PRIORITY
                      and EQUALITY.'
                    type: string
                  projectId:
                    description: Specifies to which project the scaling group belongs.
                      Specifies to which project the scaling group belongs.
                    type: number
                  replaceLoadBalancerUnhealthy:
                    description: Enable unhealthy instance replacement. If set to
                      true, AS will replace instances that are found unhealthy in
                      the CLB health check. Enable unhealthy instance replacement.
                      If set to `true`, AS will replace instances that are found unhealthy
                      in the CLB health check.
                    type: boolean
                  replaceMonitorUnhealthy:
                    description: Enables unhealthy instance replacement. If set to
                      true, AS will replace instances that are flagged as unhealthy
                      by Cloud Monitor. Enables unhealthy instance replacement. If
                      set to `true`, AS will replace instances that are flagged as
                      unhealthy by Cloud Monitor.
                    type: boolean
                  retryPolicy:
                    description: 'Available values for retry policies. Valid values:
                      IMMEDIATE_RETRY and INCREMENTAL_INTERVALS. Available values
                      for retry policies. Valid values: IMMEDIATE_RETRY and INCREMENTAL_INTERVALS.'
                    type: string
                  scalingGroupName:
                    description: Name of a scaling group. Name of a scaling group.
                    type: string
                  scalingMode:
                    description: 'Indicates scaling mode which creates and terminates
                      instances (classic method), or method first tries to start stopped
                      instances (wake up stopped) to perform scaling operations. Available
                      values: CLASSIC_SCALING, WAKE_UP_STOPPED_SCALING. Default: CLASSIC_SCALING.
                      Indicates scaling mode which creates and terminates instances
                      (classic method), or method first tries to start stopped instances
                      (wake up stopped) to perform scaling operations. Available values:
                      `CLASSIC_SCALING`, `WAKE_UP_STOPPED_SCALING`. Default: `CLASSIC_SCALING`.'
                    type: string
                  subnetIds:
                    description: ID list of subnet, and for VPC it is required. ID
                      list of subnet, and for VPC it is required.
                    items:
                      type: string
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags of a scaling group. Tags of a scaling group.
                    type: object
                  terminationPolicies:
                    description: 'Available values for termination policies. Valid
                      values: OLDEST_INSTANCE and NEWEST_INSTANCE. Available values
                      for termination policies. Valid values: OLDEST_INSTANCE and
                      NEWEST_INSTANCE.'
                    items:
                      type: string
                    type: array
                  vpcId:
                    description: ID of VPC network. ID of VPC network.
                    type: string
                  zones:
                    description: List of available zones, for Basic network it is
                      required. List of available zones, for Basic network it is required.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.maxSize is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.maxSize)
                || (has(self.initProvider) && has(self.initProvider.maxSize))'
            - message: spec.forProvider.minSize is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.minSize)
                || (has(self.initProvider) && has(self.initProvider.minSize))'
            - message: spec.forProvider.scalingGroupName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scalingGroupName)
                || (has(self.initProvider) && has(self.initProvider.scalingGroupName))'
            - message: spec.forProvider.vpcId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.vpcId)
                || (has(self.initProvider) && has(self.initProvider.vpcId))'
          status:
            description: ScalingGroupStatus defines the observed state of ScalingGroup.
            properties:
              atProvider:
                properties:
                  configurationId:
                    description: An available ID for a launch configuration. An available
                      ID for a launch configuration.
                    type: string
                  createTime:
                    description: The time when the AS group was created. The time
                      when the AS group was created.
                    type: string
                  defaultCooldown:
                    description: Default cooldown time in second, and default value
                      is 300. Default cooldown time in second, and default value is
                      `300`.
                    type: number
                  desiredCapacity:
                    description: Desired volume of CVM instances, which is between
                      max_size and min_size. Desired volume of CVM instances, which
                      is between `max_size` and `min_size`.
                    type: number
                  forwardBalancerIds:
                    description: List of application load balancers, which can't be
                      specified with load_balancer_ids together. List of application
                      load balancers, which can't be specified with `load_balancer_ids`
                      together.
                    items:
                      properties:
                        listenerId:
                          description: Listener ID for application load balancers.
                            Listener ID for application load balancers.
                          type: string
                        loadBalancerId:
                          description: ID of available load balancers. ID of available
                            load balancers.
                          type: string
                        ruleId:
                          description: ID of forwarding rules. ID of forwarding rules.
                          type: string
                        targetAttribute:
                          description: Attribute list of target rules. Attribute list
                            of target rules.
                          items:
                            properties:
                              port:
                                description: Port number. Port number.
                                type: number
                              weight:
                                description: Weight. Weight.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  id:
                    description: ID of the resource.
                    type: string
                  instanceCount:
                    description: Instance number of a scaling group. Instance number
                      of a scaling group.
                    type: number
                  loadBalancerIds:
                    description: ID list of traditional load balancers. ID list of
                      traditional load balancers.
                    items:
                      type: string
                    type: array
                  maxSize:
                    description: 'Maximum number of CVM instances. Valid value ranges:
                      (0~2000). Maximum number of CVM instances. Valid value ranges:
                      (0~2000).'
                    type: number
                  minSize:
                    description: 'Minimum number of CVM instances. Valid value ranges:
                      (0~2000). Minimum number of CVM instances. Valid value ranges:
                      (0~2000).'
                    type: number
                  multiZoneSubnetPolicy:
                    description: 'Multi zone or subnet strategy, Valid values: PRIORITY
                      and EQUALITY. Multi zone or subnet strategy, Valid values: PRIORITY
                      and EQUALITY.'
                    type: string
                  projectId:
                    description: Specifies to which project the scaling group belongs.
                      Specifies to which project the scaling group belongs.
                    type: number
                  replaceLoadBalancerUnhealthy:
                    description: Enable unhealthy instance replacement. If set to
                      true, AS will replace instances that are found unhealthy in
                      the CLB health check. Enable unhealthy instance replacement.
                      If set to `true`, AS will replace instances that are found unhealthy
                      in the CLB health check.
                    type: boolean
                  replaceMonitorUnhealthy:
                    description: Enables unhealthy instance replacement. If set to
                      true, AS will replace instances that are flagged as unhealthy
                      by Cloud Monitor. Enables unhealthy instance replacement. If
                      set to `true`, AS will replace instances that are flagged as
                      unhealthy by Cloud Monitor.
                    type: boolean
                  retryPolicy:
                    description: 'Available values for retry policies. Valid values:
                      IMMEDIATE_RETRY and INCREMENTAL_INTERVALS. Available values
                      for retry policies. Valid values: IMMEDIATE_RETRY and INCREMENTAL_INTERVALS.'
                    type: string
                  scalingGroupName:
                    description: Name of a scaling group. Name of a scaling group.
                    type: string
                  scalingMode:
                    description: 'Indicates scaling mode which creates and terminates
                      instances (classic method), or method first tries to start stopped
                      instances (wake up stopped) to perform scaling operations. Available
                      values: CLASSIC_SCALING, WAKE_UP_STOPPED_SCALING. Default: CLASSIC_SCALING.
                      Indicates scaling mode which creates and terminates instances
                      (classic method), or method first tries to start stopped instances
                      (wake up stopped) to perform scaling operations. Available values:
                      `CLASSIC_SCALING`, `WAKE_UP_STOPPED_SCALING`. Default: `CLASSIC_SCALING`.'
                    type: string
                  status:
                    description: Current status of a scaling group. Current status
                      of a scaling group.
                    type: string
                  subnetIds:
                    description: ID list of subnet, and for VPC it is required. ID
                      list of subnet, and for VPC it is required.
                    items:
                      type: string
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags of a scaling group. Tags of a scaling group.
                    type: object
                  terminationPolicies:
                    description: 'Available values for termination policies. Valid
                      values: OLDEST_INSTANCE and NEWEST_INSTANCE. Available values
                      for termination policies. Valid values: OLDEST_INSTANCE and
                      NEWEST_INSTANCE.'
                    items:
                      type: string
                    type: array
                  vpcId:
                    description: ID of VPC network. ID of VPC network.
                    type: string
                  zones:
                    description: List of available zones, for Basic network it is
                      required. List of available zones, for Basic network it is required.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
