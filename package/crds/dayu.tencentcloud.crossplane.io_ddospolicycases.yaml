---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: ddospolicycases.dayu.tencentcloud.crossplane.io
spec:
  group: dayu.tencentcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - tencentcloud
    kind: DdosPolicyCase
    listKind: DdosPolicyCaseList
    plural: ddospolicycases
    singular: ddospolicycase
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DdosPolicyCase is the Schema for the DdosPolicyCases API. Use
          this resource to create dayu DDoS policy case
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DdosPolicyCaseSpec defines the desired state of DdosPolicyCase
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appProtocols:
                    description: App protocol set of the DDoS policy case. App protocol
                      set of the DDoS policy case.
                    items:
                      type: string
                    type: array
                  appType:
                    description: 'App type of the DDoS policy case. Valid values:
                      WEB, GAME, APP and OTHER. App type of the DDoS policy case.
                      Valid values: `WEB`, `GAME`, `APP` and `OTHER`.'
                    type: string
                  hasAbroad:
                    description: 'Indicate whether the service involves overseas or
                      not. Valid values: no and yes. Indicate whether the service
                      involves overseas or not. Valid values: `no` and `yes`.'
                    type: string
                  hasInitiateTcp:
                    description: 'Indicate whether the service actively initiates
                      TCP requests or not. Valid values: no and yes. Indicate whether
                      the service actively initiates TCP requests or not. Valid values:
                      `no` and `yes`.'
                    type: string
                  hasInitiateUdp:
                    description: 'Indicate whether the actively initiate UDP requests
                      or not. Valid values: no and yes. Indicate whether the actively
                      initiate UDP requests or not. Valid values: `no` and `yes`.'
                    type: string
                  hasVpn:
                    description: 'Indicate whether the service involves VPN service
                      or not. Valid values: no and yes. Indicate whether the service
                      involves VPN service or not. Valid values: `no` and `yes`.'
                    type: string
                  maxTcpPackageLen:
                    description: The max length of TCP message package, valid value
                      length should be greater than 0 and less than 1500. It should
                      be greater than min_tcp_package_len. The max length of TCP message
                      package, valid value length should be greater than 0 and less
                      than 1500. It should be greater than `min_tcp_package_len`.
                    type: string
                  maxUdpPackageLen:
                    description: The max length of UDP message package, valid value
                      length should be greater than 0 and less than 1500. It should
                      be greater than min_udp_package_len. The max length of UDP message
                      package, valid value length should be greater than 0 and less
                      than 1500. It should be greater than `min_udp_package_len`.
                    type: string
                  minTcpPackageLen:
                    description: The minimum length of TCP message package, valid
                      value length should be greater than 0 and less than 1500. The
                      minimum length of TCP message package, valid value length should
                      be greater than 0 and less than 1500.
                    type: string
                  minUdpPackageLen:
                    description: The minimum length of UDP message package, valid
                      value length should be greater than 0 and less than 1500. The
                      minimum length of UDP message package, valid value length should
                      be greater than 0 and less than 1500.
                    type: string
                  name:
                    description: Name of the DDoS policy case. Length should between
                      1 and 64. Name of the DDoS policy case. Length should between
                      1 and 64.
                    type: string
                  peerTcpPort:
                    description: 'The port that actively initiates TCP requests. Valid
                      value ranges: (1~65535). The port that actively initiates TCP
                      requests. Valid value ranges: (1~65535).'
                    type: string
                  peerUdpPort:
                    description: 'The port that actively initiates UDP requests. Valid
                      value ranges: (1~65535). The port that actively initiates UDP
                      requests. Valid value ranges: (1~65535).'
                    type: string
                  platformTypes:
                    description: Platform set of the DDoS policy case. Platform set
                      of the DDoS policy case.
                    items:
                      type: string
                    type: array
                  resourceType:
                    description: 'Type of the resource that the DDoS policy case works
                      for. Valid values: bgpip, bgp and bgp-multip. Type of the resource
                      that the DDoS policy case works for. Valid values: `bgpip`,
                      `bgp` and `bgp-multip`.'
                    type: string
                  tcpEndPort:
                    description: 'End port of the TCP service. Valid value ranges:
                      (0~65535). It must be greater than tcp_start_port. End port
                      of the TCP service. Valid value ranges: (0~65535). It must be
                      greater than `tcp_start_port`.'
                    type: string
                  tcpFootprint:
                    description: The fixed signature of TCP protocol load, valid value
                      length is range from 1 to 512. The fixed signature of TCP protocol
                      load, valid value length is range from 1 to 512.
                    type: string
                  tcpStartPort:
                    description: 'Start port of the TCP service. Valid value ranges:
                      (0~65535). Start port of the TCP service. Valid value ranges:
                      (0~65535).'
                    type: string
                  udpEndPort:
                    description: 'End port of the UDP service. Valid value ranges:
                      (0~65535). It must be greater than udp_start_port. End port
                      of the UDP service. Valid value ranges: (0~65535). It must be
                      greater than `udp_start_port`.'
                    type: string
                  udpFootprint:
                    description: The fixed signature of TCP protocol load, valid value
                      length is range from 1 to 512. The fixed signature of TCP protocol
                      load, valid value length is range from 1 to 512.
                    type: string
                  udpStartPort:
                    description: 'Start port of the UDP service. Valid value ranges:
                      (0~65535). Start port of the UDP service. Valid value ranges:
                      (0~65535).'
                    type: string
                  webApiUrls:
                    description: Web API url set. Web API url set.
                    items:
                      type: string
                    type: array
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  appProtocols:
                    description: App protocol set of the DDoS policy case. App protocol
                      set of the DDoS policy case.
                    items:
                      type: string
                    type: array
                  appType:
                    description: 'App type of the DDoS policy case. Valid values:
                      WEB, GAME, APP and OTHER. App type of the DDoS policy case.
                      Valid values: `WEB`, `GAME`, `APP` and `OTHER`.'
                    type: string
                  hasAbroad:
                    description: 'Indicate whether the service involves overseas or
                      not. Valid values: no and yes. Indicate whether the service
                      involves overseas or not. Valid values: `no` and `yes`.'
                    type: string
                  hasInitiateTcp:
                    description: 'Indicate whether the service actively initiates
                      TCP requests or not. Valid values: no and yes. Indicate whether
                      the service actively initiates TCP requests or not. Valid values:
                      `no` and `yes`.'
                    type: string
                  hasInitiateUdp:
                    description: 'Indicate whether the actively initiate UDP requests
                      or not. Valid values: no and yes. Indicate whether the actively
                      initiate UDP requests or not. Valid values: `no` and `yes`.'
                    type: string
                  hasVpn:
                    description: 'Indicate whether the service involves VPN service
                      or not. Valid values: no and yes. Indicate whether the service
                      involves VPN service or not. Valid values: `no` and `yes`.'
                    type: string
                  maxTcpPackageLen:
                    description: The max length of TCP message package, valid value
                      length should be greater than 0 and less than 1500. It should
                      be greater than min_tcp_package_len. The max length of TCP message
                      package, valid value length should be greater than 0 and less
                      than 1500. It should be greater than `min_tcp_package_len`.
                    type: string
                  maxUdpPackageLen:
                    description: The max length of UDP message package, valid value
                      length should be greater than 0 and less than 1500. It should
                      be greater than min_udp_package_len. The max length of UDP message
                      package, valid value length should be greater than 0 and less
                      than 1500. It should be greater than `min_udp_package_len`.
                    type: string
                  minTcpPackageLen:
                    description: The minimum length of TCP message package, valid
                      value length should be greater than 0 and less than 1500. The
                      minimum length of TCP message package, valid value length should
                      be greater than 0 and less than 1500.
                    type: string
                  minUdpPackageLen:
                    description: The minimum length of UDP message package, valid
                      value length should be greater than 0 and less than 1500. The
                      minimum length of UDP message package, valid value length should
                      be greater than 0 and less than 1500.
                    type: string
                  name:
                    description: Name of the DDoS policy case. Length should between
                      1 and 64. Name of the DDoS policy case. Length should between
                      1 and 64.
                    type: string
                  peerTcpPort:
                    description: 'The port that actively initiates TCP requests. Valid
                      value ranges: (1~65535). The port that actively initiates TCP
                      requests. Valid value ranges: (1~65535).'
                    type: string
                  peerUdpPort:
                    description: 'The port that actively initiates UDP requests. Valid
                      value ranges: (1~65535). The port that actively initiates UDP
                      requests. Valid value ranges: (1~65535).'
                    type: string
                  platformTypes:
                    description: Platform set of the DDoS policy case. Platform set
                      of the DDoS policy case.
                    items:
                      type: string
                    type: array
                  resourceType:
                    description: 'Type of the resource that the DDoS policy case works
                      for. Valid values: bgpip, bgp and bgp-multip. Type of the resource
                      that the DDoS policy case works for. Valid values: `bgpip`,
                      `bgp` and `bgp-multip`.'
                    type: string
                  tcpEndPort:
                    description: 'End port of the TCP service. Valid value ranges:
                      (0~65535). It must be greater than tcp_start_port. End port
                      of the TCP service. Valid value ranges: (0~65535). It must be
                      greater than `tcp_start_port`.'
                    type: string
                  tcpFootprint:
                    description: The fixed signature of TCP protocol load, valid value
                      length is range from 1 to 512. The fixed signature of TCP protocol
                      load, valid value length is range from 1 to 512.
                    type: string
                  tcpStartPort:
                    description: 'Start port of the TCP service. Valid value ranges:
                      (0~65535). Start port of the TCP service. Valid value ranges:
                      (0~65535).'
                    type: string
                  udpEndPort:
                    description: 'End port of the UDP service. Valid value ranges:
                      (0~65535). It must be greater than udp_start_port. End port
                      of the UDP service. Valid value ranges: (0~65535). It must be
                      greater than `udp_start_port`.'
                    type: string
                  udpFootprint:
                    description: The fixed signature of TCP protocol load, valid value
                      length is range from 1 to 512. The fixed signature of TCP protocol
                      load, valid value length is range from 1 to 512.
                    type: string
                  udpStartPort:
                    description: 'Start port of the UDP service. Valid value ranges:
                      (0~65535). Start port of the UDP service. Valid value ranges:
                      (0~65535).'
                    type: string
                  webApiUrls:
                    description: Web API url set. Web API url set.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.appProtocols is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.appProtocols)
                || (has(self.initProvider) && has(self.initProvider.appProtocols))'
            - message: spec.forProvider.appType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.appType)
                || (has(self.initProvider) && has(self.initProvider.appType))'
            - message: spec.forProvider.hasAbroad is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.hasAbroad)
                || (has(self.initProvider) && has(self.initProvider.hasAbroad))'
            - message: spec.forProvider.hasInitiateTcp is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.hasInitiateTcp)
                || (has(self.initProvider) && has(self.initProvider.hasInitiateTcp))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.platformTypes is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.platformTypes)
                || (has(self.initProvider) && has(self.initProvider.platformTypes))'
            - message: spec.forProvider.resourceType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.resourceType)
                || (has(self.initProvider) && has(self.initProvider.resourceType))'
            - message: spec.forProvider.tcpEndPort is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.tcpEndPort)
                || (has(self.initProvider) && has(self.initProvider.tcpEndPort))'
            - message: spec.forProvider.tcpStartPort is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.tcpStartPort)
                || (has(self.initProvider) && has(self.initProvider.tcpStartPort))'
            - message: spec.forProvider.udpEndPort is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.udpEndPort)
                || (has(self.initProvider) && has(self.initProvider.udpEndPort))'
            - message: spec.forProvider.udpStartPort is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.udpStartPort)
                || (has(self.initProvider) && has(self.initProvider.udpStartPort))'
            - message: spec.forProvider.webApiUrls is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.webApiUrls)
                || (has(self.initProvider) && has(self.initProvider.webApiUrls))'
          status:
            description: DdosPolicyCaseStatus defines the observed state of DdosPolicyCase.
            properties:
              atProvider:
                properties:
                  appProtocols:
                    description: App protocol set of the DDoS policy case. App protocol
                      set of the DDoS policy case.
                    items:
                      type: string
                    type: array
                  appType:
                    description: 'App type of the DDoS policy case. Valid values:
                      WEB, GAME, APP and OTHER. App type of the DDoS policy case.
                      Valid values: `WEB`, `GAME`, `APP` and `OTHER`.'
                    type: string
                  createTime:
                    description: Create time of the DDoS policy case. Create time
                      of the DDoS policy case.
                    type: string
                  hasAbroad:
                    description: 'Indicate whether the service involves overseas or
                      not. Valid values: no and yes. Indicate whether the service
                      involves overseas or not. Valid values: `no` and `yes`.'
                    type: string
                  hasInitiateTcp:
                    description: 'Indicate whether the service actively initiates
                      TCP requests or not. Valid values: no and yes. Indicate whether
                      the service actively initiates TCP requests or not. Valid values:
                      `no` and `yes`.'
                    type: string
                  hasInitiateUdp:
                    description: 'Indicate whether the actively initiate UDP requests
                      or not. Valid values: no and yes. Indicate whether the actively
                      initiate UDP requests or not. Valid values: `no` and `yes`.'
                    type: string
                  hasVpn:
                    description: 'Indicate whether the service involves VPN service
                      or not. Valid values: no and yes. Indicate whether the service
                      involves VPN service or not. Valid values: `no` and `yes`.'
                    type: string
                  id:
                    description: ID of the resource.
                    type: string
                  maxTcpPackageLen:
                    description: The max length of TCP message package, valid value
                      length should be greater than 0 and less than 1500. It should
                      be greater than min_tcp_package_len. The max length of TCP message
                      package, valid value length should be greater than 0 and less
                      than 1500. It should be greater than `min_tcp_package_len`.
                    type: string
                  maxUdpPackageLen:
                    description: The max length of UDP message package, valid value
                      length should be greater than 0 and less than 1500. It should
                      be greater than min_udp_package_len. The max length of UDP message
                      package, valid value length should be greater than 0 and less
                      than 1500. It should be greater than `min_udp_package_len`.
                    type: string
                  minTcpPackageLen:
                    description: The minimum length of TCP message package, valid
                      value length should be greater than 0 and less than 1500. The
                      minimum length of TCP message package, valid value length should
                      be greater than 0 and less than 1500.
                    type: string
                  minUdpPackageLen:
                    description: The minimum length of UDP message package, valid
                      value length should be greater than 0 and less than 1500. The
                      minimum length of UDP message package, valid value length should
                      be greater than 0 and less than 1500.
                    type: string
                  name:
                    description: Name of the DDoS policy case. Length should between
                      1 and 64. Name of the DDoS policy case. Length should between
                      1 and 64.
                    type: string
                  peerTcpPort:
                    description: 'The port that actively initiates TCP requests. Valid
                      value ranges: (1~65535). The port that actively initiates TCP
                      requests. Valid value ranges: (1~65535).'
                    type: string
                  peerUdpPort:
                    description: 'The port that actively initiates UDP requests. Valid
                      value ranges: (1~65535). The port that actively initiates UDP
                      requests. Valid value ranges: (1~65535).'
                    type: string
                  platformTypes:
                    description: Platform set of the DDoS policy case. Platform set
                      of the DDoS policy case.
                    items:
                      type: string
                    type: array
                  resourceType:
                    description: 'Type of the resource that the DDoS policy case works
                      for. Valid values: bgpip, bgp and bgp-multip. Type of the resource
                      that the DDoS policy case works for. Valid values: `bgpip`,
                      `bgp` and `bgp-multip`.'
                    type: string
                  sceneId:
                    description: ID of the DDoS policy case. ID of the DDoS policy
                      case.
                    type: string
                  tcpEndPort:
                    description: 'End port of the TCP service. Valid value ranges:
                      (0~65535). It must be greater than tcp_start_port. End port
                      of the TCP service. Valid value ranges: (0~65535). It must be
                      greater than `tcp_start_port`.'
                    type: string
                  tcpFootprint:
                    description: The fixed signature of TCP protocol load, valid value
                      length is range from 1 to 512. The fixed signature of TCP protocol
                      load, valid value length is range from 1 to 512.
                    type: string
                  tcpStartPort:
                    description: 'Start port of the TCP service. Valid value ranges:
                      (0~65535). Start port of the TCP service. Valid value ranges:
                      (0~65535).'
                    type: string
                  udpEndPort:
                    description: 'End port of the UDP service. Valid value ranges:
                      (0~65535). It must be greater than udp_start_port. End port
                      of the UDP service. Valid value ranges: (0~65535). It must be
                      greater than `udp_start_port`.'
                    type: string
                  udpFootprint:
                    description: The fixed signature of TCP protocol load, valid value
                      length is range from 1 to 512. The fixed signature of TCP protocol
                      load, valid value length is range from 1 to 512.
                    type: string
                  udpStartPort:
                    description: 'Start port of the UDP service. Valid value ranges:
                      (0~65535). Start port of the UDP service. Valid value ranges:
                      (0~65535).'
                    type: string
                  webApiUrls:
                    description: Web API url set. Web API url set.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
